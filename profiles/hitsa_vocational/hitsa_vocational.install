<?php
/**
 * @file
 * Install, update and uninstall functions for the standard installation profile.
 */

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 *
 * @see system_install()
 */
function hitsa_vocational_install()
{
    include_once DRUPAL_ROOT . '/profiles/hitsa_school/hitsa_school.install';
    hitsa_install();
    hitsa_vocational_install_themes();
    hitsa_vocational_disable_modules();
    hitsa_vocational_enable_translations();
    hitsa_vocational_disable_blocks();
    hitsa_vocational_de_u_mt();
}
function hitsa_vocational_install_themes()
{
    $enable = array(
    'theme_default' => 'hitsa',
    'admin_theme' => 'adminimal_theme',
     //'zen'
    );
    theme_enable($enable);
}
function hitsa_vocational_disable_modules()
{
    $modules = array();
    if (module_exists('overlay')) {
        $modules[] = 'overlay';
    }
    if (module_exists('toolbar')) {
        $modules[] = 'toolbar';
    }
    module_disable($modules);
}

function hitsa_vocational_enable_translations()
{
    if (!module_exists('hitsa_enable_translations')) {
        $modules = array('l10n_update'); // Array of module names
        $enable_dependencies = true; // Whether or not to enable dependant modules
        module_enable($modules, $enable_dependencies);
    }
    module_load_include('inc', 'l10n_update', 'l10n_update.batch');
    $directory = 'sites/all/translations';
    $files = file_scan_directory($directory, '/.*\.po/');
    $objects = array();
    $languages = array('ru','en','et');
    foreach ($files as $key => $file) {
        $language = substr($file->filename, 0, 2);
        $dot_location = strpos($file->filename, '.');
        $filename_length = strlen($file->filename);
        $group = substr($file->filename, 3, $dot_location-3);
        $file_object = (file_uri_to_object($file->uri));
        _locale_import_po($file_object, $language, LOCALE_IMPORT_KEEP, $group);
    }
    hitsa_vocational_csv_import();
    $types = node_type_get_types();
    foreach ($types as $type_key => $type_value) {
        switch ($type_key) {
        case 'curriculum':
            $type_value->name = 'Sakkidega sisuleht';
            $type_value->title_label = 'Pealkiri';
            node_type_save($type_value);
            break;
        case 'catering':
            $type_value->name = 'Nädalamenüü';
            $type_value->title_label = 'Pealkiri';
            node_type_save($type_value);
            break;
        case 'gallery':
            $type_value->name = 'Galerii';
            $type_value->title_label = 'Pealkiri';
            node_type_save($type_value);
            break;
        case 'event':
            $type_value->name = 'Kalendri sündmus';
            $type_value->title_label = 'Pealkiri';
            node_type_save($type_value);
            break;
        case 'webform':
            $type_value->name = 'Veebivormid';
            $type_value->title_label = 'Pealkiri';
            node_type_save($type_value);
            break;
        case 'article':
            $type_value->name = 'Uudised';
            $type_value->title_label = 'Pealkiri';
            node_type_save($type_value);
            break;
        case 'contact':
            $type_value->name = 'Kontakt';
            $type_value->title_label = 'Nimi';
            node_type_save($type_value);
            break;
        case 'content_page':
            $type_value->name = 'Sisulehekülg';
            $type_value->title_label = 'Pealkiri';
            node_type_save($type_value);
            break;
        case 'contact_location':
            $type_value->name = 'Koht';
            $type_value->title_label = 'Nimi';
            node_type_save($type_value);
            break;
        case 'Logo':
            $type_value->name = 'Logo';
            $type_value->title_label = 'Nimi';
            node_type_save($type_value);
            break;
        }
    }
    $vocabularies = taxonomy_vocabulary_get_names();
    foreach ($vocabularies as $voc_mach => $vocabulary) {
        switch ($voc_mach) {
        case 'academic_years':
            $vocabulary = taxonomy_vocabulary_load($vocabulary->vid);
            $vocabulary->name = 'Akadeemilised aastad';
            taxonomy_vocabulary_save($vocabulary);
            break;
        case 'catering_food_type':
            $vocabulary = taxonomy_vocabulary_load($vocabulary->vid);
            $vocabulary->name = 'Toitlustamise toidutüübid';
            taxonomy_vocabulary_save($vocabulary);
            break;
        case 'catering_provider':
            $vocabulary = taxonomy_vocabulary_load($vocabulary->vid);
            $vocabulary->name = 'Toitlustuse pakkuja';
            taxonomy_vocabulary_save($vocabulary);
            break;
        case 'catering_food_subcategory':
            $vocabulary = taxonomy_vocabulary_load($vocabulary->vid);
            $vocabulary->name = 'Toidu kategooria';
            taxonomy_vocabulary_save($vocabulary);
            break;
        case 'content_information':
            $vocabulary = taxonomy_vocabulary_load($vocabulary->vid);
            $vocabulary->name = 'Content information';
            taxonomy_vocabulary_save($vocabulary);
            break;
        case 'fields':
            $vocabulary = taxonomy_vocabulary_load($vocabulary->vid);
            $vocabulary->name = 'Valdkonnad';
            taxonomy_vocabulary_save($vocabulary);
            break;
        case 'hitsa_event_tags':
            $vocabulary = taxonomy_vocabulary_load($vocabulary->vid);
            $vocabulary->name = 'Südmuste kalendri kategooriad';
            taxonomy_vocabulary_save($vocabulary);
            break;
        case 'time_periods':
            $vocabulary = taxonomy_vocabulary_load($vocabulary->vid);
            $vocabulary->name = 'Semestrid';
            taxonomy_vocabulary_save($vocabulary);
            break;
        case 'hitsa_locations':
            $vocabulary = taxonomy_vocabulary_load($vocabulary->vid);
            $vocabulary->name = 'Sündmuste asukohad';
            taxonomy_vocabulary_save($vocabulary);
            break;
        case 'time_period_info':
            $vocabulary = taxonomy_vocabulary_load($vocabulary->vid);
            $vocabulary->name = 'Semestri info';
            taxonomy_vocabulary_save($vocabulary);
            break;
        case 'training_tags':
            $vocabulary = taxonomy_vocabulary_load($vocabulary->vid);
            $vocabulary->name = 'Koolituste tagid';
            taxonomy_vocabulary_save($vocabulary);
            break;
        case 'hitsa_breaks':
            $vocabulary = taxonomy_vocabulary_load($vocabulary->vid);
            $vocabulary->name = 'Vaheajad';
            taxonomy_vocabulary_save($vocabulary);
            break;
        case 'hitsa_hour_times':
            $vocabulary = taxonomy_vocabulary_load($vocabulary->vid);
            $vocabulary->name = 'Tundide ajad ja lõunapausid';
            taxonomy_vocabulary_save($vocabulary);
            break;
        case 'tags':
            $vocabulary = taxonomy_vocabulary_load($vocabulary->vid);
            $vocabulary->name = 'Tagid';
            taxonomy_vocabulary_save($vocabulary);
            break;
        case 'contacts_job_position':
            $vocabulary = taxonomy_vocabulary_load($vocabulary->vid);
            $vocabulary->name = 'Töökohad';
            taxonomy_vocabulary_save($vocabulary);
            break;
        case 'contacts_department':
            $vocabulary = taxonomy_vocabulary_load($vocabulary->vid);
            $vocabulary->name = 'Osakond';
            taxonomy_vocabulary_save($vocabulary);
            break;

        }
    }
    variable_set('pathauto_transliterate','1');
}
function hitsa_vocational_disable_blocks()
{
    $blocks = array('navigation','form','login','help');
    foreach ($blocks as $key => $block_value) {
        $num_updated = db_update('block') // Table name no longer needs {}
        ->fields(
            array(
            'region' => -1,
            'status' => 0,
            )
        )
        ->condition('theme', 'hitsa', '=')
        ->condition('delta', $block_value, '=')
        ->execute();
    }
}
function hitsa_vocational_de_u_mt(){
  $modules = array('module_filter','hitsa_color'); // Array of module names
  $enable_dependencies = TRUE; // Whether or not to enable dependant modules
  module_enable($modules, $enable_dependencies);
  $themes = array(
    'bartik',
  );
  theme_disable($themes);
  $themes = array(
    'hitsa',
    'adminimal',
  );
  theme_enable($themes);
  variable_set('admin_theme', 'adminimal');
}

function hitsa_vocational_csv_import(){
  $directory = 'sites/all/translations';
  $files = file_scan_directory($directory, '/.*\.csv/');
  $objects = array();
  $languages = array('ru','en','et');
  foreach ($files as $key => $file) {
    if($file->filename=='hitsa_translations_csv.csv'){
      module_load_include('inc','hitsa_translation_importer','includes/hitsa_translation_importer.admin');
      $read_text = file_get_contents($file->uri);
      $data = array_map("str_getcsv", preg_split('/\r*\n+|\r+/', $read_text));
      $translatable_array=array();
      foreach ($data as $translate_key => $translate_value) {
          if (!empty($translate_value[1])) {
              //dpm(t($translate_value[1]));
              $translatable_array[$translate_value[1]] = array(
              'et' => (!empty($translate_value[0]))?$translate_value[0]:'',
              'ru' => (!empty($translate_value[2]))?$translate_value[2]:'',
              );
              $lower_eng = (!empty($translate_value[1]))?mb_strtolower($translate_value[1]):'';
              //dpm(t($lower_eng));
              $lower_est = (!empty($translate_value[0]))?mb_strtolower($translate_value[0]):'';
              $lower_ru = (!empty($translate_value[2]))?mb_strtolower($translate_value[2]):'';

              $translatable_array[$lower_eng] = array(
                  'et' => (!empty($lower_est))?$lower_est:'',
                  'ru' => (!empty($lower_ru))?$lower_ru:'',
                  );

              $lower_eng = (!empty($lower_eng))?str_replace(' ','-',$lower_eng):'';
              //dpm(t($lower_eng));
              $lower_est = (!empty($lower_est))?str_replace(' ','-',$lower_est):'';
              $lower_ru = (!empty($lower_ru))?str_replace(' ','-',$lower_ru):'';

              $translatable_array[$lower_eng] = array(
                  'et' => (!empty($lower_est))?$lower_est:'',
                  'ru' => (!empty($lower_ru))?$lower_ru:'',
                  );

              $first_eng = (!empty($translate_value[1]))?ucfirst(strtolower($translate_value[1])):'';
              //dpm(($first_eng));
              $first_est = (!empty($translate_value[0]))?ucfirst($translate_value[0]):'';
              $first_ru = (!empty($translate_value[2]))?ucfirst($translate_value[2]):'';
              $translatable_array[$first_eng] = array(
                  'et' => (!empty($first_est))?$first_est:'',
                  'ru' => (!empty($first_ru))?$first_ru:'',
              );

          }
      }
              foreach ($translatable_array as $translatable_key => $translatable){
                  foreach($translatable as $test_key => $test){
                      if(empty($test)){
                          unset($translatable_array[$translatable_key][$test_key]);
                      }
                  }
              }
      if (!empty($translatable_array)) {
          if (is_array($translatable_array)) {
              hitsa_translations_importer_translations($translatable_array);
          }
      }
    }
  }
}
/**
 * Disable and uninstall the module.
 */
function hitsa_vocational_update_7000()
{
    if (module_exists('overlay')) {
        module_disable(array('overlay'));
    }
    if (module_exists('toolbar')) {
        module_disable(array('toolbar'));
    }
    $enable = array(
    'theme_default' => 'hitsa',
    'admin_theme' => 'adminimal',
     //'zen'
    );
    theme_enable($enable);
}

function hitsa_vocational_update_7001()
{
    hitsa_vocational_enable_translations();
    hitsa_vocational_disable_blocks();
}

/**
*Enabling and disabling themes and modules
*/
function hitsa_vocational_update_7002(){
  hitsa_vocational_de_u_mt();
}
function hitsa_vocational_update_7003(){
  hitsa_vocational_csv_import();
}
