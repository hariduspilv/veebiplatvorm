<?php

module_load_include('inc', 'hitsa_curriculum', 'includes/hitsa_curriculum_page.views');
/**
 * Implements hook_menu().
 */
function hitsa_curriculum_menu()
{
    $items = array();

    $items['admin/content/tabbed-content-pages'] = array(
        'title' => 'Sakkidega sisulehed',
        'access arguments' => array('administer nodes'),
        'type' => MENU_LOCAL_TASK,
    );

    $items['curriculum'] = array(
        'title' => t(''),
        'page callback' => 'hitsa_curriculum_page',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );
    $field = field_info_field('field_school_selections');
    $allowed = list_allowed_values($field);
    foreach ($allowed as $allowed_key => $allowed_title) {
        $items[$allowed_key . '/%node'] = array(
            'title' => t(''),
            'page callback' => 'hitsa_curriculum_page',
            'page arguments' => array(0, 1),
            'access arguments' => array('access content'),
            'type' => MENU_CALLBACK,
        );
        $items[$allowed_key] = array(
            'title' => t(''),
            'page callback' => 'hitsa_curriculum_page',
            'page arguments' => array(0, 1),
            'access arguments' => array('access content'),
            'type' => MENU_CALLBACK,
        );
    }
    return $items;
}

/**
 * Implements hook_node_info().
 */
function hitsa_curriculum_create_node()
{
    $types = array(
        array(
            'name' => t('Tabbed content page'),
            'base' => 'node_content',
            'description' => '',
            'type' => 'curriculum',
            'custom' => 1,
            'modified' => 1,
            'locked' => 0,
            'has_title' => 1,
            'title_label' => t('Title'),
            'help' => '',
        ),
    );
    variable_set('language_content_type_curriculum', TRANSLATION_ENABLED);
    variable_set('i18n_node_options_curriculum', array('required'));
    foreach ($types as $type) {
        $type = node_type_set_defaults($type);
        node_type_save($type);
    }
    return true;
}

/**
 * Implements hook_block_info().
 */
function hitsa_curriculum_block_info()
{
    $blocks = array();

    $field = field_info_field('field_school_selections');
    $allowed = list_allowed_values($field);
    $languages = language_list('enabled');
    $t = get_t();
    foreach ($allowed as $allowed_key => $allowed_title) {
        $pages = $allowed_key . "\n" . $allowed_key . '/*' . "\n" . 'content/' . $allowed_key . "\n" . 'content/' . $allowed_key . '/*' . "\n" . t($allowed_key, array(), array('langcode' => 'et')) . "\n" . t($allowed_key, array(), array('langcode' => 'et')) . '/*';
        if (!empty($languages[1])) {
            $languages = $languages[1];
            foreach ($languages as $lang_key => $language) {
                if ($lang_key != 'en') {
                    $translated = $t($allowed_key, array(), array('langcode' => $lang_key));
                    $pages .= "\n" . $translated . "\n" . $translated . '/*';
                }
            }
        }
        $blocks[$allowed_key] = array(
            'info' => t($allowed_title . ' block'),
            'region' => 'content',
            'status' => 1,
            'visibility' => BLOCK_VISIBILITY_LISTED,
            'pages' => strval($pages),
            'weight' => 100,
            'cache' => DRUPAL_CACHE_PER_PAGE,
        );
    }
    $school_type = hitsa_core_get_school_type();
    if ($school_type == 2) {
        $blocks['hitsa_hero_banner'] = array(
            'info' => t('HITSA Hero Banner'),
            'visibility' => BLOCK_VISIBILITY_LISTED,
            'pages' => '<front>',
            'region' => 'hero',
            'status' => "1",
            'cache' => DRUPAL_CACHE_PER_PAGE,
        );
        $blocks['hitsa_curriculum_fields_mobile'] = array(
            'info' => t('Hitsa mobile fields'),
            'visibility' => BLOCK_VISIBILITY_LISTED,
            'pages' => '<front>',
            'region' => 'super_news',
            'status' => 1,
            'weight' => 2,
            'cache' => DRUPAL_CACHE_PER_PAGE,

        );
    }
    return $blocks;
}

/**
 * Implements hook_block_view().
 */
function hitsa_curriculum_block_view($delta = '')
{
    $block = array();


    $field = field_info_field('field_school_selections');
    $allowed = list_allowed_values($field);
    foreach ($allowed as $allowed_key => $allowed_title) {
        switch ($allowed_key) {
            case $delta:
                $render = hitsa_curriculum_custom_block($allowed_key);
                $block = array(
                    'subject' => t(''),
                    'content' => array(
                        '#markup' => $render,
                    ),

                );
                break;
        }
    }
    switch ($delta) {
        case 'hitsa_hero_banner':
            $school_type = hitsa_core_get_school_type();
            if ($school_type == 2) {
                $block = array(
                    'subject' => t(''),
                    'content' => hitsa_curriculum_fp_subject_fields(),

                );

            }
            break;
        case 'hitsa_curriculum_fields_mobile':
            $school_type = hitsa_core_get_school_type();
            if ($school_type == 2) {
                $block = array(
                    'subject' => t(''),
                    'content' => hitsa_curriculu_fp_mobile_fields(),
                );
            }
            break;
        default:
            # code...
            break;
    }
    return $block;
}

function hitsa_curriculum_node_insert($node)
{
    if ($node->type == 'curriculum') {
        $language_list = language_list();
        $language = $node->language;
        $selection = null;
        if (!empty($node->field_school_selections)) {
            $selection = $node->field_school_selections['und'][0]['value'];
        }

        if (!empty($selection)) {
            $main_source = t($selection, array(), array('langcode' => $language));
            $main_source = hitsa_curriculum_url_friendly_strings($main_source);

            $lookup_main = drupal_lookup_path('alias', $selection, $language);
            $lookup_main_translated = drupal_lookup_path('source', $main_source);
            if (!empty($language_list)) {
                if (!empty($language_list[$language])) {
                    $language = $language_list[$language];
                }
            }
            // if (!($lookup_main)) {
            //     $path_main = array(
            //         'source' => $selection,
            //         'alias' => $main_source,
            //         'pid' => null,
            //         'language' => $language->language,
            //         'pathauto' => 0,
            //     );
            //     path_save($path_main);
            // }

            // if (!($lookup_main_translated)) {
            //     $path_main_translated = array(
            //         'source' => $selection,
            //         'alias' => $main_source,
            //         'pid' => null,
            //         'language' => $language->language,
            //         'pathauto' => 0,
            //     );
            //     path_save($path_main_translated);
            // }
            hitsa_curriculum_check_block_visibility($main_source, $selection);
            $source = 'node/' . $node->nid;
            $alias = $main_source . '/' . hitsa_curriculum_url_friendly_strings($node->title);
            if (!empty($language_list) && !is_object($language)) {
                if (!isset($language_list[$language])) {
                    $language = $language_list[$language];
                }
            }

            $path_check = drupal_lookup_path('source', $alias, $language->language);
            if (!$path_check) {
                $path = array(
                    'source' => $source,
                    'alias' => $alias,
                    'pid' => null,
                    'language' => $language,
                    'pathauto' => 0,
                );
            } else {
                $alias .= '-1';
                $path_check = drupal_lookup_path('source', $alias, $language->language);
                if (!empty($path_check)) {
                    $alias = str_replace('-1', '-2', $alias);
                }
                $path = array(
                    'source' => $source,
                    'alias' => $alias,
                    'pid' => null,
                    'language' => $language,
                    'pathauto' => 0,
                );
            }
            $node->path = $path;
        }

//        exit();
        return $node;
    }
}

function hitsa_curriculum_node_validate($node, $form, &$form_state)
{
    if (!empty($form_state['values'])) {
        if (!empty($form_state['values']['field_school_selections'])) {
            if ($form_state['values']['field_school_selections']['und'][0]['value'] == 'specialities') {
                if (!empty($form_state['values']['field_specialitiy_table'])) {
                    $row_to_check = $form_state['values']['field_specialitiy_table']['und'][0]['tablefield']['tabledata']['row_1'];
                    foreach ($row_to_check as $key => $value) {
                        if ($key != 'weight') {
                            if (empty($value)) {
                                form_set_error('field_specialitiy_table[und][0][tablefield][tabledata][row_1][' . $value . ']', t('All table fields need to be filled'));
                            }
                        }
                    }
                }
            }
        }
        if (!empty($form_state['values']['field_contacts'])) {
            $contacts_values = $form_state['values']['field_contacts']['und'];
            unset($contacts_values['add_more']);
            foreach ($contacts_values as $contact_key => $contacts) {
                if (!empty($contacts['field_phone_number'])) {
                    $phone_number = $contacts['field_phone_number']['und'][0]['value'];
                    if (!empty($phone_number)) {
//                    $phone_number = '5s33 23117';
                        if (!preg_match('/^\s*(?:\+?(\d{1,3}))?([-. (]*(\d{1})[-. )]*)?((\d{3})[-. ]*(\d{2,4})(?:[-.x ]*(\d+))?)\s*$/', ($phone_number))) {
                            form_set_error('field_contacts[und][0][field_phone_number]', t('Entered phone number: ') . $phone_number . t(' is not valid'));
                        }
                    }
                }
            }
        }
        if (!empty($form_state['values']['field_contacts'])) {
        }
    }
//    exit();
}

/**
 * @param $node
 * @return mixed
 */
function hitsa_curriculum_node_presave($node)
{
    if (!empty($node->nid)) {
        $language_list = language_list();
        if ($node->type == 'curriculum') {
            $language = $node->language;
            $selection = '';
            if (!empty($node->field_school_selections)) {
                $selection = $node->field_school_selections['und'][0]['value'];
            }
            if (!empty($selection)) {
                $main_source = t($selection, array(), array('langcode' => $language));
                $main_source = hitsa_curriculum_url_friendly_strings($main_source);

                $lookup_main = drupal_lookup_path('alias', $selection, $language);
                $lookup_main_translated = drupal_lookup_path('source', $main_source);

                if (!empty($language_list)) {
                    if (!empty($language_list[$language])) {
                        $language = $language_list[$language];
                    }
                }
                // if (!($lookup_main)) {
                //     $path_main = array(
                //         'source' => $selection,
                //         'alias' => $main_source,
                //         'pid' => null,
                //         'language' => $language->language,
                //         'pathauto' => 0,
                //     );
                //     path_save($path_main);
                // }
                // if (!($lookup_main_translated)) {
                //     $path_main_translated = array(
                //         'source' => $selection,
                //         'alias' => $main_source,
                //         'pid' => null,
                //         'language' => $language->language,
                //         'pathauto' => 0,
                //     );
                //     path_save($path_main_translated);
                // }
                $source = 'node/' . $node->nid;
                $title = hitsa_curriculum_url_friendly_strings($node->title);
                hitsa_curriculum_check_block_visibility($main_source, $selection);
                $alias = $main_source . '/' . $title;
                $renew = false;
                if (!is_object($language)) {
                    if (!empty($language_list)) {
                        if (!empty($language_list[$language])) {
                            $language = $language_list[$language];
                        }
                    }
                }
                $path = array(
                    'source' => $source,
                    'alias' => $alias,
                    'pid' => !empty($node->path) ? $node->path['pid'] : null,
                    'language' => $language,
                    'pathauto' => 0,
                );
                if (!empty($node->path)) {
                    if ($node->path['source'] != $source) {
                        $renew = true;
                    } elseif ($node->path['alias'] != $alias) {
                        $renew = true;
                    }
                } else {
                }
                if ($renew) {
                    $path_check = drupal_lookup_path('source', $alias, $language->language);
                    if (!$path_check) {
                        $path = array(
                            'source' => $source,
                            'alias' => $alias,
                            'pid' => null,
                            'language' => $language,
                            'pathauto' => 0,
                        );
                    } else {
                        $alias .= '-1';
                        $path_check = drupal_lookup_path('source', $alias, $language->language);
                        if (!empty($path_check)) {
                            $alias = str_replace('-1', '-2', $alias);
                        }
                        $path = array(
                            'source' => $source,
                            'alias' => $alias,
                            'pid' => null,
                            'language' => $language,
                            'pathauto' => 0,
                        );
                    }
                    $node->path = $path;
                }
            }
        }
//            krumo($node);
//        exit();
        return $node;
    }
}

function hitsa_curriculum_form_alter(&$form, &$form_state, $form_id)
{
    switch ($form_id) {
        case 'curriculum_node_form':
//            $form['field_header_information'] = array(
//                '#type' => 'container',
//                '#prefix' => '<div id="header_target">',
//                '#suffix' => '</div>'
//            );
//            $form['field_school_selections']['und']['#ajax']= array(
//                'wrapper' => 'header_target',
//                'callback' => 'hitsa_curriculum_header_get',
//            );
            if (!empty($form['field_school_selections'])) {
                $options = $form['field_school_selections']['und']['#options'];
                foreach ($options as $options_key => $options_value) {
                    if ($options_key == 'catering') {
                        unset($form['field_school_selections']['und']['#options'][$options_key]);
                    }
                    $form['field_school_selections']['und']['#options'][$options_key] = t($options_value);
                }
            }
            return $form;
            break;
        case 'views_form_administration_tabbed_content_pages_system_tabbed_content_pages' && 'views_exposed_form':
            if (!empty($form['field_school_selections_value_i18n'])) {
                foreach ($form['field_school_selections_value_i18n']['#options'] as $key => $option) {
                    if ($key === 'All') {
                        continue;
                    }
                    $form['field_school_selections_value_i18n']['#options'][$key] = t($option);
                }
            }
            return $form;
            break;
    }
}

function hitsa_curriculum_header_get($form, &$form_state)
{
}

function hitsa_curriculum_page($type = null, $name = null)
{
    global $user;

    $build = array();


    return $build;
}

function hitsa_curriculum_generate_table($table, $descriptions = null, $type = null)
{
    $output = '';
    if (!empty($table) && !empty($table['tabledata'])) {
        $sm_table_class = null;
        if ($type == 'specialities') {
            $sm_table_class = 'sm-table-block';
        }
        $output .= '<div class="table_wrapper ' . $sm_table_class . '" data-plugin="responsiveTable">';
        $output .= '<table>';
        $table_data = $table['tabledata'];

        $rows_count = $table_data['rebuild']['count_rows'];
        $columns_count = $table_data['rebuild']['count_cols'];
        $column_width = 100 / $columns_count;
        $table_descriptions = $descriptions;
        if ($type != 'specialities') {
            if (!empty($table_data['tabledata']['row_0'])) {
                $output .= '  <thead>';
                $output .= '  <tr>';
                for ($i = 0; $i < $columns_count; $i++) {
                    $output .= '<th style="width: ' . $column_width . '%;">';
                    $output .= $table_data['tabledata']['row_0']['col_' . $i];
                    if (!empty($table_descriptions[$i . '_0'])) {
                        $output .= '<span class="before-question-circle" title="' . $table_descriptions[$i . '_0'] . '"></span>';
                    }
                    $output .= '</th>';
                }
                $output .= '  </tr>';
                $output .= ' </thead>';
            }
            $output .= '<tbody>';
            $show_table = true;
            if ($type == 'subject-field') {
                $show_table = false;
            } elseif ($type == 'specialities') {
                $show_table = false;
            }
            for ($i = 1; $i < $rows_count; $i++) {
                $output .= '<tr>';
                for ($j = 0; $j < $columns_count; $j++) {
                    $output .= '<td>';
                    if ($type == 'subject-field' && $i == $rows_count - 1) {
                        $output .= '<b>';
                    }
                    $output .= $table_data['tabledata']['row_' . $i]['col_' . $j];
                    if ($type == 'subject-field' && $i == $rows_count - 1) {
                        $output .= '<b>';
                    }
                    if ($j >= 1) {
                        if (!empty($table_data['tabledata']['row_' . $i]['col_' . $j])) {
                            $show_table = true;
                        }
                    }
                    if ($type == 'specialities') {
                        if ($j >= 0) {
                            if (!empty($table_data['tabledata']['row_' . $i]['col_' . $j])) {
                                $show_table = true;
                            }
                        }
                    }
                    if (!empty($table_descriptions[$j . '_' . $i])) {
                        $output .= '    <span class="before-question-circle" title="' . $table_descriptions[$j . '_' . $i] . '"></span>';
                    }
                    $output .= '</td>';
                }
                $output .= '</tr>';
            }
            $output .= '</tbody>';
        } else {
            $block_titles = array();
            if (!empty($table_data['tabledata']['row_0'])) {
                $output .= '  <thead class="sm-hide">';
                $output .= '  <tr>';
                for ($i = 0; $i < $columns_count; $i++) {
                    $output .= '<th style="width: ' . $column_width . '%;">';
                    $output .= $table_data['tabledata']['row_0']['col_' . $i];
                    $block_titles[] = $table_data['tabledata']['row_0']['col_' . $i];
                    if (!empty($table_descriptions[$i . '_0'])) {
                        $output .= '<span class="before-question-circle" title="' . $table_descriptions[$i . '_0'] . '"></span>';
                    }
                    $output .= '</th>';
                }
                $output .= '  </tr>';
                $output .= ' </thead>';
            }

            $output .= '<tbody>';
            $show_table = true;
            if ($type == 'subject-field') {
                $show_table = false;
            } elseif ($type == 'specialities') {
                $show_table = false;
            }
            for ($i = 1; $i < $rows_count; $i++) {
                $output .= '<tr>';
                for ($j = 0; $j < $columns_count; $j++) {
                    $output .= '<td><span class="sm-show table-block-title">' . $block_titles[$j] . '</span>';
                    if ($type == 'subject-field' && $i == $rows_count - 1) {
                        $output .= '<b>';
                    }
                    $output .= $table_data['tabledata']['row_' . $i]['col_' . $j];
                    if ($type == 'subject-field' && $i == $rows_count - 1) {
                        $output .= '<b>';
                    }
                    if ($j >= 1) {
                        if (!empty($table_data['tabledata']['row_' . $i]['col_' . $j])) {
                            $show_table = true;
                        }
                    }
                    if ($type == 'specialities') {
                        if ($j >= 0) {
                            if (!empty($table_data['tabledata']['row_' . $i]['col_' . $j])) {
                                $show_table = true;
                            }
                        }
                    }
                    if (!empty($table_descriptions[$j . '_' . $i])) {
                        $output .= '    <span class="before-question-circle" title="' . $table_descriptions[$j . '_' . $i] . '"></span>';
                    }
                    $output .= '</td>';
                }
                $output .= '</tr>';
            }
            $output .= '</tbody>';
        }
        $output .= '</table>';
        $output .= '</div><!--/table-wrapper-->';
        if ($show_table == false) {
            return '';
        }
    }
    return $output;
}

function hitsa_curriculum_jobs_part($content = null)
{
    $output = '';
    $output .= '  <div class="row">';
    $output .= ' <div class="col-12 d-flex d-wrap">';
    if (!empty($content)) {
        if (!empty($content->field_jobs_pretext)) {
//            $output .= $content->field_jobs_pretext['und'][0]['value'];
        }
    }
    if (!empty($content->field_jobs)) {
        $output .= '<ul class="bullet-list_article">';
        foreach ($content->field_jobs['und'] as $key => $job) {
            $job = entity_load_single('paragraphs_item', $job['value']);
            $output .= '<li>';
            if (!empty($job->field_job)) {
                $output .= $job->field_job['und'][0]['value'];
                if (!empty($job->field_job_description)) {
                    $job_description = $job->field_job_description['und'][0]['value'];
                    $output .= '<span class="before-question-circle" title="' . $job_description . '"></span>';
                }
            }
            $output .= '</li>';
        }
        $output .= '</ul>';
    }

    $output .= '</div><!--/col-10-->';
    $output .= ' </div><!--/row-->';
    return $output;
}

function hitsa_curriculum_attachments($attachments)
{
    if (!empty($attachments)) {
        $output = '';
        $output .= '<div class="row-spacer"></div>';
        $output .= '<div class="row">';
        $output .= '<div class="col-12">';
        foreach ($attachments as $key => $attachment) {
            $attachment_url = file_create_url($attachment['uri']);
            $output .= '<a target="_blank" class="link-circle" href="' . $attachment_url . '">';
            $output .= '<span class="before-document"></span>';
            $output .= $attachment['filename'];
            $output .= '</a><!--/link-circle-->';
        }
        $output .= '</div><!--/col-10-->';
        $output .= '</div><!--/row-->';
        return $output;
    }
}

function hitsa_curriculum_pictures($pictures)
{
    if (!empty($pictures)) {
        $output = '';
        $output .= '<div class="row-spacer"></div>';
        $output .= '<div class="row print-flex">';
        foreach ($pictures as $key => $picture) {
            $picture_text = '';
            $image_style = 'hc_pictures';
            $image_url = image_style_url($image_style, $picture['uri']);
            if (!empty($picture['field_file_image_title_text'])) {
                $picture_text = $picture['field_file_image_title_text']['und'][0]['value'];
            }
            $output .= '  <div class="col-6 sm-12">';
            $output .= '  <figure>';
            $output .= '    <img src="' . $image_url . '" alt="">';
            $output .= '    <figcaption>' . $picture_text . '</figcaption>';
            $output .= '   </figure>';
            $output .= ' </div><!--/col-6-->';
        }
        $output .= '</div><!--/row-->';
        return $output;
    }
}

function hitsa_curriculum_contacts($contacts)
{
    if (!empty($contacts)) {
        $output = '';
        foreach ($contacts as $key => $contact) {
            $contact = entity_load_single('paragraphs_item', $contact['value']);
            if (!empty($contact->field_contact_title)) {
                $output .= '<p><b>' . $contact->field_contact_title['und'][0]['value'] . '</b></p>';
            }
            $output .= '<ul class="list-details">';
            if (!empty($contact->field_website)) {
                # code...
                $output .= '   <li>';
                $output .= '      <div class="before-home"></div>';
                $output .= '      <div class="list-details_text">';
                $url = str_replace('http://', '', $contact->field_website['und'][0]['url']);
                $url = str_replace('https://', '', $url);
                $output .= '         <p><a target="_blank" href="' . $contact->field_website['und'][0]['url'] . '" target="_blank">' . $contact->field_website['und'][0]['title'] . '</a></p>';
                $output .= '      </div><!--/list-details_text-->';
                $output .= '   </li>';
            }
            if (!empty($contact->field_contact_email)) {
                $output .= '   <li>';
                $output .= '      <div class="before-envelope"></div>';
                $output .= '      <div class="list-details_text">';
                $output .= '         <p><a class="spamspan" href="mailto:' . $contact->field_contact_email['und'][0]['email'] . '">' . $contact->field_contact_email['und'][0]['email'] . '</a></p>';
                $output .= '      </div><!--/list-details_text-->';
                $output .= '   </li>';
            }
            if (!empty($contact->field_phone_number)) {
                $output .= '   <li>';
                $output .= '      <div class="before-phone"></div>';
                $output .= '      <div class="list-details_text">';
                $output .= '         <p>' . $contact->field_phone_number['und'][0]['value'] . '</p>';
                $output .= '      </div><!--/list-details_text-->';
                $output .= '   </li>';
            }
            if (!empty($contact->field_address)) {
                $output .= '   <li>';
                $output .= '      <div class="before-location"></div>';
                $output .= '              <div class="list-details_text">';
                $output .= '        <p>' . $contact->field_address['und'][0]['value'] . '</p>';
                $output .= '      </div><!--/list-details_text-->';
                $output .= '   </li>';
            }
            $output .= ' </ul><!--/list-details-->';
        }
        return $output;
    }
}

function hitsa_curriculum_generate_left_f_titles($areas)
{
    if (is_array($areas)) {
        $output = '<div class="col-3 d-flex">';
        $output .= '<ul class="side-menu">';
        $current_path = current_path();
        if (!empty($_REQUEST)) {
            if (isset($_REQUEST['page_id'])) {
                $page_id = $_REQUEST['page_id'];
            }
        }
        foreach ($areas as $area_key => $area) {
            $class = '';
            if (isset($page_id)) {
                if ($page_id == $area->nid) {
                    $class = 'active';
                }
            }
            $link = url($current_path, array('query' => array('page_id' => $area->nid)));
            $output .= '<li class="' . $class . '"><a href="' . $link . '">' . $area->title . '</a></li>';
            unset($class);
        }
        $output .= '</ul>';
        $output .= '</div><!--/col-3-->';
        return $output;
    }
}

function hitsa_curriculum_generate_area_right_side($node)
{
    $output = '';
    if (!empty($node)) {
        if (is_object($node)) {
            $output .= ' <div class="col-9">';
            $output .= ' <article>';
            $output .= '<h3>' . $node->title . '
            <span class="btn-bar align-right pull-right sm-hide">
                              <a href="javscript:void(0);" class="btn-circle before-share" data-plugin="share"></a>
                              <a href="javascript:window.print();" class="btn-circle before-print"></a>
                           </span><!--/button-row-->
            </h3>';

            $output .= '<div class="intro">';
            if (!empty($node->field_speciality_description)) {
                $output .= $node->field_speciality_description['und'][0]['value'];
            }
            $output .= '</div>';
            if (!empty($node->body)) {
                $output .= $node->body['und'][0]['value'];
            }
            if (!empty($node->field_attachments)) {
                $output .= ' <div class="row">
                <div class="col-12">';

                foreach ($node->field_attachments['und'] as $attachment_key => $attachment) {
                    $attachment_url = file_create_url($attachment['uri']);
                    $output .= '<a class="link-circle" href="' . $attachment_url . '">
                    <span class="before-document"></span>
                    ' . $attachment['filename'] . '
                 </a><!--/link-circle-->';
                }
                $output .= '
                </div><!--/col-12-->
             </div><!--/row-->';
            }
            $output .= '</article>';
            $output .= '</div><!--/col-9-->';
        }
    }
    return $output;
}

function hitsa_curriculum_custom_block($curriculum_type)
{
    global $language;
    $current_path = current_path();
    $menu_items = menu_get_item($current_path);
    $type = null;
    $active_id = null;
    $bundle = null;
    if (!empty($menu_items)) {
        if (!empty($menu_items['page_arguments'])) {
            if (!empty($menu_items['page_arguments'][0])) {
                if (!is_object($menu_items['page_arguments'][0])) {
                    if (!empty($menu_items['page_arguments'][0])) {
                        $type = $menu_items['page_arguments'][0];
                    }
                    if (!empty($menu_items['page_arguments'][1])) {
                        $active_id = $menu_items['page_arguments'][1];
                    }
                } else {
                    $node = $menu_items['page_arguments'][0];
                    $bundle = $node->type;
                    if (!empty($node->field_school_selections)) {
                        $type = $node->field_school_selections['und'][0]['value'];
                    }
                    if (!empty($node->nid)) {
                        $active_id = $node->nid;
                    }
                }
            }
        }
    }

    if (!empty($type)) {
        if ($bundle != 'content_page') {
            $header_content = hitsa_core_get_content_by_type('node', 'content_page', $language->language, array('cur_type' => $type));
            if (!empty($header_content)) {
                $header_nids = array_keys($header_content['node']);
                $header = entity_load('node', $header_nids);
                foreach ($header as $header_key => $header_value) {
                    $header_content_html = hitsa_curriculum_generate_header($header_value);
                    break;
                }
            }
        }
    }

    $output = '';
    if (!empty($header_content_html)) {
        $output .= $header_content_html;
    }

    if (module_exists('hitsa_core')) {
        $content = hitsa_core_get_content_by_type('node', 'curriculum', $language->language, array('cur_type' => $type));
    }
    $content_count = 0;
    if (!empty($content)) {
        if (isset($content['node'])) {
            if (is_array($content['node'])) {
                $content_count = count($content['node']);
            }
            $content_nids = array_keys($content['node']);
            $real_content = entity_load('node', $content_nids);
        }
    }
    if (!empty($real_content)) {
        if (empty($active_id)) {
            foreach ($real_content as $real_key => $real_value) {
                $active_id = $real_key;
                break;
            }
        }
        if (!empty($bundle)) {
            if ($bundle != 'content_page') {
                $tabs = menu_local_tabs();
                $tabs = drupal_render($tabs);
            } else {
                global $user;
                if (!empty($user)) {
                    if ($user->uid > 0) {
                        $content = null;
                        if (!empty($real_content)) {
                            if (!empty($real_content[is_object($active_id) ? $active_id->nid : $active_id])) {
                                $content = $real_content[is_object($active_id) ? $active_id->nid : $active_id];
                            }
                        }
                        if (empty($content)) {
                            foreach ($real_content as $real_content_key => $real_content_value) {
                                $active_id = $real_content_key;
                                break;
                            }
                        }
                        $edit_url = url('node/' . $active_id . '/edit');
                        $edit_links = '<ul class="tabs primary"><li><a href="' . $edit_url . '">' . t('Edit') . '</a></li></ul>';
                        $tabs = $edit_links;
                    }
                }
            }
        } else {
            $tabs = menu_local_tabs();
            $tabs = drupal_render($tabs);
        }
        if (empty($tabs)) {
            if (!empty($active_id)) {
                $edit_url = url('node/' . $active_id . '/edit');
                $edit_links = '<ul class="tabs primary"><li><a href="' . $edit_url . '">' . t('Edit') . '</a></li></ul>';
                $tabs = $edit_links;
            }
        }
        global $user;
        if ($user->uid != 0) {
            if (!empty($tabs)) {
                $output .= $tabs;
            }
        }
        if (!empty($real_content)) {
            if (!empty($active_id) && $active_id==1&&$user->uid==0) {
                foreach ($real_content as $real_key => $real_value) {
                    $active_id = $real_key;
                    break;
            }
        }
        }
        $left_side = hitsa_curriculum_generate_left_custom_titles($real_content, $type, $active_id);
        $content = null;
        if (!empty($active_id)) {
            if (!empty($real_content)) {
                if (!empty($real_content[is_object($active_id) ? $active_id->nid : $active_id])) {
                    $content = $real_content[is_object($active_id) ? $active_id->nid : $active_id];
                }
            }
        }
        if (empty($content)) {
            foreach ($real_content as $real_content_key => $real_content_value) {
                $content = $real_content_value;
                break;
            }
        }
        $right_side = hitsa_curriculum_generate_right_custom_side($content, $type);
    }
    if (!empty($left_side) || !empty($right_side)) {
        $id_block = '';
        if (!empty($content)) {
            $id_block = 'id="' . $content->title . '"';
        }
        $mobile_block = hitsa_curriculum_mobile_menu($real_content, $type, $active_id);
        $output .= '<div class="block no-padding" ' . $id_block . '>';
        $output .= '<div class="row">';
        if ($content_count > 1) {
            $output .= '<div class="col-3 d-flex sm-hide">';
            $output .= $left_side;
            $output .= '</div><!--/col-3-->';
        }
        if ($content_count > 1) {
            $output .= '<div class="col-9 sm-12">';
            $output .= $right_side;
            $output .= '</div><!--/col-9-->';
        } else {
            $output .= '<div class="col-12 sm-12">';
            $output .= $right_side;
            $output .= '</div><!--/col-9-->';
        }
        $output .= '</div><!--/row-->';

        $output .= '</div><!--/block-->';
    }
    if(!empty($mobile_block)){
        $output = $mobile_block.$output;
    }
    return $output;
}

function hitsa_curriculum_generate_left_custom_titles($areas, $type = null, $id = null)
{
//    dpm('HERE');
    global $language;
    if (is_array($areas)) {
        $output = '';
        $output .= '<ul class="side-menu">';
        $current_path = current_path();
        if (!empty($_REQUEST)) {
            if (isset($_REQUEST['page_id'])) {
                $page_id = $_REQUEST['page_id'];
            }
        }
        if ($type != 'specialities') {
            foreach ($areas as $area_key => $area) {
                $class = '';
                if (isset($id)) {
                    if ($id == $area->nid) {
                        $class = 'active';
                    }
                }
                if (!is_object($type)) {
                    $source = 'node' . '/' . $area->nid;
                    $path = drupal_lookup_path('source', $source, $language->language);
                    $link = url($source, array('language' => $language));
                } else {
                    if (!empty($type->field_school_selections)) {
                        $source = $type->field_school_selections['und'][0]['value'] . '/' . $area->nid;
                        $path = drupal_lookup_path('source', $source, $language);
                        $link = url($source, array('language' => $language));
                    }
                }
                $output .= '<li class="' . $class . '"><a href="' . $link . '#' . $area->title . '">' . $area->title . '</a></li>';
                unset($class);
            }
            $output .= '</ul>';
            return $output;
        } else {
            $fields = array();
            foreach ($areas as $area_key => $area_value) {
                if (!empty($area_value->field_field)) {
                    $field_id = $area_value->field_field['und'][0]['target_id'];
                    $loaded_field = taxonomy_term_load($field_id);
                    if (empty($fields[$field_id]) && is_object($loaded_field)) {
                        $fields[$field_id] = array(
                            'name' => $loaded_field->name,
                            'tid' => $loaded_field->tid,
                            'subpoints' => array($area_key => $area_value),
                            'weight' => $loaded_field->weight,
                        );
                    } else {
                        $fields[$field_id]['subpoints'][$area_key] = $area_value;
                    }
                    if ($area_value->nid == $id) {
                        $fields[$field_id]['subpoints'][$area_key]->active = true;
                        $fields[$field_id]['active'] = true;
                    } else {
                        $fields[$field_id]['subpoints'][$area_key]->active = false;
                        if (isset($fields[$field_id]['active'])) {
                            # code...
                        } else {
                            $fields[$field_id]['active'] = false;
                        }
                    }
                }
            }
            $output = '';
            $output .= '<ul class="side-menu" data-plugin="dropdownMenu">';

            usort($fields, function ($a, $b) {
                return $a['weight'] - $b['weight'];
            });
            foreach ($fields as $fields_key => $fields_value) {
                if (empty($fields_value['name'])) {
                    continue;
                }
                $class = ($fields_value['active']) ? 'active' : '';
                $list_item = '<li class="' . $class . '">';
                if (!empty($fields_value['name'])) {
                    $list_item .= '<a href="javascript:void(0);">' . $fields_value['name'] . '</a>';
                }
                if (!empty($fields_value['subpoints'])) {
                    $list_item .= '<ul>';
                    foreach ($fields_value['subpoints'] as $sub_key => $subpoint) {
                        $source = 'node' . '/' . $subpoint->nid;

                        $subpoint_url = url($source);
                        $class = ($subpoint->active == true) ? 'active' : '';
                        $list_item .= '<li class="' . $class . '">';
                        $list_item .= '<a href="' . $subpoint_url . '#' . $subpoint->title . '">' . $subpoint->title . '</a>';
                        $list_item .= '</li>';
                    }
                    $list_item .= '</ul>';
                }
                $list_item .= '</li>';

                $output .= $list_item;
            }
            $output .= '</ul>';
            return $output;
        }
    }
}

function hitsa_curriculum_generate_right_custom_side($content, $curriculum_type)
{
    global $language;

    $output_elements = array();
    variable_set('school_type', 'middle');
    $school_type = variable_get('school_type');

    $output = '<article>';
    if (!empty($content->changed)) {
        $output_elements['changed_date'] = '<span class="article-date"><i>' . t('Last modified') . ':' . date('d.m.Y', $content->changed) . '</i></span>';
    }
    if (!empty($content->title)) {
        drupal_set_title($content->title);
    }
    $output .= '
    <h3 class="sm-block-title">' . $content->title . '
      <span class="btn-bar align-right pull-right sm-hide">
                              <a href="javscript:void(0);" class="btn-circle before-share" data-plugin="share"></a>
                              <a href="javascript:window.print();" class="btn-circle before-print"></a>
                           </span><!--/button-row-->
    </h3><h5 class="sm-alignment">
    <span class="btn-bar align-right pull-right sm-show">
                              <a href="javscript:void(0);" class="btn-circle before-share" data-plugin="share"></a>
                              <a href="javascript:window.print();" class="sm-hide btn-circle before-print"></a>
                           </span><!--/button-row-->
</h5>';
    if (!empty($content->field_table_description)) {
        $output_elements['table_description'] = '<p>' . $content->field_table_description['und'][0]['value'] . '</p>';
    }
    if ($curriculum_type == 'preparatory-courses' || $curriculum_type == 'elective-subjects' || $curriculum_type == 'elective-courses' || $curriculum_type == 'hobby-groups' || $curriculum_type == 'hobby-activity' || $curriculum_type == 'e-course' || $curriculum_type == 'ordered-trainings') {
        if (!empty($content->field_curriculum_length)) {
            $start = $content->field_curriculum_length['und'][0]['value'];
            $end = $content->field_curriculum_length['und'][0]['value2'];
            $start = format_date($start, 'custom', 'd.m.Y', null, $language->language);
            $end = format_date($end, 'custom', 'd.m.Y', null, $language->language);
            if ($curriculum_type == 'preparatory-courses' || $curriculum_type == 'e-course') {
                $output_elements['date_length'] = '<p><b>' . t('Course duration') . ': </b>' . $start . ' - ' . $end . '</p>';
            } elseif ($curriculum_type == 'elective-subjects' || $curriculum_type == 'elective-courses') {
                $output_elements['date_length'] = '<p><b>' . t('Duration of subject') . ': </b>' . $start . ' - ' . $end . '</p>';
            } elseif ($curriculum_type == 'hobby-groups' || $curriculum_type == 'hobby-activity') {
                $output_elements['date_length'] = '<p><b>' . t('Hobby activity duration') . ': </b>' . $start . ' - ' . $end . '</p>';
            }
        }

        if (!empty($content->field_curriculum_start)) {
            $start = $content->field_curriculum_start['und'][0]['value'];
            $start = format_date($start, 'custom', 'd.m.Y - G:i', null, $language->language);
            $output_elements['date_start'] = '<p>' . $start . '</p>';
            if ($curriculum_type == 'preparatory-courses' || $curriculum_type == 'e-course') {
                if ($curriculum_type == 'preparatory-courses') {
                    $output_elements['date_start'] = '<p>' . $start . '</p>';
                } else {
                    $output_elements['date_start'] = '<p>' . $start . '</p>';
                }
            } elseif ($curriculum_type == 'elective-subjects' or $curriculum_type == 'elective-courses') {
                $output_elements['date_start'] = '<p><b>' . t('Subject starts on') . ': </b>' . $start . '</p>';
            } elseif ($curriculum_type == 'hobby-groups' || $curriculum_type == 'hobby-activity') {
                $output_elements['date_start'] = '<p><b>' . t('Hobby activities start on') . ': </b>' . $start . '</p>';
            }
        }
        if (!empty($content->field_days_place)) {
            $output_elements['days_it_takes_place'] = '<p><b>' . t('What days it takes place on') . ': </b>' . $content->field_days_place['und'][0]['value'] . '</p>';
        }
        if (!empty($content->field_instructor)) {
            $output_elements['instructor'] = '<p><b>' . t('Instructor') . ': </b>' . $content->field_instructor['und'][0]['value'] . '</p>';
        }
        if (!empty($content->field_room)) {
            $output_elements['room'] = '<p><b>' . t('Room') . ': </b>' . $content->field_room['und'][0]['value'] . '</p>';
        }
        if (!empty($content->field_target_group)) {
            $output_elements['target_group'] = '<p><b>' . t('Target group') . ': </b>' . $content->field_target_group['und'][0]['value'] . '</p>';
        }
        if (!empty($content->field_premise)) {
            $output_elements['premise'] = '<p><b>' . t('Premise') . ': </b>' . $content->field_premise['und'][0]['value'] . '</p>';
        }
        if (!empty($content->field_assessment)) {
            $output_elements['assessment'] = '<p><b>' . t('Assessment') . ': </b>' . $content->field_assessment['und'][0]['value'] . '</p>';
        }
        if (!empty($content->field_rating)) {
            $output_elements['rating'] = '<p><b>' . t('Rating') . ': </b>' . $content->field_rating['und'][0]['value'] . '</p>';
        }


        if (!empty($content->field_time_it_ends) && $curriculum_type == 'e-course') {
            $output_elements['end_time'] = '<p><b>' . t('Course ends') . ': </b>' . date('d.m.Y - G:i', $content->field_time_it_ends['und'][0]['value']) . '</p>';
        }
    }
    if (!empty($content->field_textbooks)) {
        $output_elements['textbooks'] = '<p><b>' . t('Textbooks') . ': </b>';
        $textbooks_count = count($content->field_textbooks[LANGUAGE_NONE]);
        $k = 0;

        foreach ($content->field_textbooks[LANGUAGE_NONE] as $textbook) {
            if (!empty($textbook['title'])) {
                $text_title = $textbook['title'];
            } else {
                $text_title = $textbook['url'];
            }
            $output_elements['textbooks'] .= '<a target="_blank" href="' . $textbook['url'] . '">' . $text_title . '</a>';
            if ($k != $textbooks_count - 1) {
                $output_elements['textbooks'] .= ', ';
            }
            $k++;
        }
        $output_elements['textbooks'] .= '</p>';
    }
    if (!empty($content->field_table)) {
        $table_id = $content->field_table['und'][0]['value'];
        $table = entity_load_single('paragraphs_item', $table_id);
        if (!empty($table)) {
            $generated_table = hitsa_curriculum_generate_table($table);
            $output_elements['table'] = $generated_table;
        }
    }
    if (!empty($content->field_specialitiy_table) || !empty($content->field_subjects_table)) {
        if (!empty($content->field_specialitiy_table)) {
            if ($curriculum_type == 'specialities') {
                $table = $content->field_specialitiy_table['und'][0];
                $table_descriptions = array();
                if (!empty($content->field_table_descriptions)) {
                    if (!empty($content->field_table_descriptions)) {
                        foreach ($content->field_table_descriptions['und'] as $table_description) {
                            $description = entity_load_single('paragraphs_item', $table_description['value']);
                            if (!empty($description->field_table_field_description)) {
                                $col = $description->field_column['und'][0]['value'] - 1;
                                $row = $description->field_row['und'][0]['value'] - 1;
                                $table_descriptions[$col . '_' . $row] = $description->field_table_field_description['und'][0]['value'];
                            }
                        }
                    }
                }
                if (!empty($table)) {
                    $generated_table = hitsa_curriculum_generate_table($table, $table_descriptions, $curriculum_type);
                    $output_elements['table'] = $generated_table;
                }
            }
        }
        if (!empty($content->field_subjects_table)) {
            if ($curriculum_type == 'subject-field') {
                $table = $content->field_subjects_table['und'][0];
                $table_descriptions = array();
                if (!empty($content->field_table_descriptions)) {
                    if (!empty($content->field_table_descriptions)) {
                        foreach ($content->field_table_descriptions['und'] as $table_description) {
                            $description = entity_load_single('paragraphs_item', $table_description['value']);
                            if (!empty($description->field_table_field_description)) {
                                $col = $description->field_column['und'][0]['value'] - 1;
                                $row = $description->field_row['und'][0]['value'] - 1;
                                $table_descriptions[$col . '_' . $row] = $description->field_table_field_description['und'][0]['value'];
                            }
                        }
                    }
                }
                if (!empty($table)) {
                    $generated_table = hitsa_curriculum_generate_table($table, $table_descriptions, $curriculum_type);
                    $output_elements['table'] = $generated_table;
                }
            }
        }
    }
    if (!empty($content->body)) {
        if ($curriculum_type == 'preparatory-courses' || $curriculum_type == 'e-course') {
            $output_elements['body_element'] = '<p><b>' . t('Short description') . ': </b>' . $content->body['und'][0]['value'] . '</p>';
        } elseif ($curriculum_type == 'elective-subjects' || $curriculum_type == 'elective-courses') {
            $output_elements['body_element'] = '<p><b>' . t('Short description') . ': </b>' . $content->body['und'][0]['value'] . '</p>';
        } else {
            $output_elements['body_element'] = $content->body['und'][0]['value'];
        }
    }
    if (!empty($content->field_jobs_pretext) && !empty($content->field_jobs)) {
        $output_elements['jobs'] = '<h5>' . t('Jobs in the future') . '</h5>';
        $output_elements['jobs'] .= (!empty($content->field_jobs_pretext)) ? $content->field_jobs_pretext['und'][0]['value'] : '';
        $output_elements['jobs'] .= hitsa_curriculum_jobs_part($content);
    }
    if (!empty($content->field_short_description)) {
        if (!empty($output_elements['table_description'])) {
            $style = 'style="margin-bottom:0.2em"';
        } else {
            $style = '';
        }

        if (!empty($content->field_table_description)) {
            $output_elements['table_description'] = '<p style="margin-top: 0em">' . $content->field_table_description['und'][0]['value'] . '</p>';
        }
        $output_elements['short_description'] = '<h5 class="sm-alignment" ' . $style . '>' . $content->field_short_description['und'][0]['value'] . '</h5>';
    } else {
        $output_elements['mobile_sharing_buttons'] = '<h5 class="sm-alignment"></h5>';
    }
    if (!empty($content->field_attachments)) {
        $output_elements['documents'] = hitsa_curriculum_attachments($content->field_attachments['und']);
    }

    if (!empty($content->field_pictures)) {
        $output_elements['pictures'] = hitsa_curriculum_pictures($content->field_pictures['und']);
    }
    if (!empty($content->field_contacts)) {
        $output_elements['contacts'] = hitsa_curriculum_contacts($content->field_contacts['und']);
    }
    if (!empty($output_elements)) {
        switch ($school_type) {
            case 'middle':
                if (empty($output_elements['short_description']) && !empty($output_elements['mobile_sharing_buttons'])) {
//                    $output.= $output_elements['mobile_sharing_buttons'];
                }
                if ($curriculum_type == 'preparatory-courses' || $curriculum_type == 'elective-subjects' || $curriculum_type == 'elective-courses' || $curriculum_type == 'hobby-groups' || $curriculum_type == 'hobby-activity' || $curriculum_type == 'e-course' || $curriculum_type == 'ordered-trainings') {
                    if (!empty($output_elements['date_length'])) {
                        $output .= $output_elements['date_length'];
                    }
                    if (!empty($output_elements['date_start'])) {
                        $output .= $output_elements['date_start'];
                    }
                    if (!empty($output_elements['end_time'])) {
                        $output .= $output_elements['end_time'];
                    }
                    if (!empty($output_elements['days_it_takes_place'])) {
                        $output .= $output_elements['days_it_takes_place'];
                    }
                    if (!empty($output_elements['instructor'])) {
                        $output .= $output_elements['instructor'];
                    }
                    if (!empty($output_elements['room'])) {
                        $output .= $output_elements['room'];
                    }
                    if (!empty($output_elements['target_group'])) {
                        $output .= $output_elements['target_group'];
                    }
                    if (!empty($output_elements['premise'])) {
                        $output .= $output_elements['premise'];
                    }
                    if (!empty($output_elements['body_element'])) {
                        $output .= $output_elements['body_element'];
                    }
                    if (!empty($output_elements['rating'])) {
                        $output .= $output_elements['rating'];
                    }
                    if (!empty($output_elements['assessment'])) {
                        $output .= $output_elements['assessment'];
                    }
                    if (!empty($output_elements['textbooks'])) {
                        $output .= $output_elements['textbooks'];
                    }
                }
                if ($curriculum_type == 'specialities') {
                    if (!empty($output_elements['short_description'])) {
                        $output .= $output_elements['short_description'];
                    }
                    if (!empty($output_elements['table_description'])) {
                        $output .= $output_elements['table_description'];
                    }
                    if (!empty($output_elements['table'])) {
                        $output .= $output_elements['table'];
                    }
                    if (!empty($output_elements['body_element'])) {
                        $output .= $output_elements['body_element'];
                    }
                    if (!empty($output_elements['jobs'])) {
                        $output .= $output_elements['jobs'];
                    }
                    if (!empty($output_elements['documents'])) {
                        $output .= $output_elements['documents'];
                    }
                    if (!empty($output_elements['pictures'])) {
                        $output .= $output_elements['pictures'];
                    }
                    if (!empty($output_elements['contacts'])) {
                        $output .= $output_elements['contacts'];
                    }
                } elseif ($curriculum_type == 'subject-field') {
                    if (!empty($output_elements['body_element'])) {
                        $output .= $output_elements['body_element'];
                    }

                    if (!empty($output_elements['documents'])) {
                        $output .= $output_elements['documents'];
                    }
                    if (!empty($output_elements['short_description'])) {
                        $output .= $output_elements['short_description'];
                    }

                    if (!empty($output_elements['table_description'])) {
                        $output .= $output_elements['table_description'];
                    }
                    if (!empty($output_elements['table'])) {
                        $output .= $output_elements['table'];
                    }
                    if (!empty($output_elements['pictures'])) {
                        $output .= $output_elements['pictures'];
                    }
                    if (!empty($output_elements['contacts'])) {
                        $output .= $output_elements['contacts'];
                    }
                } else {
                    if (!empty($output_elements['body_element']) && $curriculum_type != 'preparatory-courses' && $curriculum_type != 'hobby-activity') {
                        $output .= $output_elements['body_element'];
                    }
                    if (!empty($output_elements['documents'])) {
                        $output .= $output_elements['documents'];
                    }
                    if (!empty($output_elements['table'])) {
                        $output .= $output_elements['table'];
                    }
                    if (!empty($output_elements['pictures'])) {
                        $output .= $output_elements['pictures'];
                    }
                    if (!empty($output_elements['contacts'])) {
                        $output .= $output_elements['contacts'];
                    }
                }
                if (!empty($output_elements['changed_date'])) {
                    $output .= $output_elements['changed_date'];
                }
//                dpm($output_elements);
                break;

            default:
                foreach ($output_elements as $element_key => $element) {
                    $output .= $element;
                }
                break;
        }
    }

    $output .= '

 </article>';
    return $output;
}

function hitsa_curriculum_generate_header($header)
{
    if (!empty($header->cp_image)) {
        $image = $header->cp_image['und'][0];
        $image_style = 'hc_pictures';
        $image_url = image_style_url($image_style, $image['uri']);
        $picture_text = '';
        if (!empty($image['field_file_image_title_text'])) {
            $picture_text = $image['field_file_image_title_text']['und'][0]['value'];
        }
        $output_image = '';
        $output_image .= '  <figure>';
        $output_image .= '    <img src="' . $image_url . '" alt="">';
        $output_image .= '    <figcaption>' . $picture_text . '</figcaption>';
        $output_image .= '   </figure>';
    }
    global $user;

    $edit_links = '';
    if (!empty($user)) {
        if ($user->uid > 0) {
            $edit_url = url('node/' . $header->nid . '/edit');
            $edit_links = '<ul class="tabs primary sm-hide"><li><a href="' . $edit_url . '">' . t('Edit') . '</a></li></ul>';
        }
    }
    $output = '';
    if (!empty($edit_links)) {
        $output .= $edit_links;
    }
    $output .= '<div class="block sm-hide">

    <h2 class="block-title">' . $header->title . '</h2>

    <div class="row-spacer-xs"></div>
    <div class="row">
       <div class="col-8 sm-12">
          <article>';
    if (!empty($header->body)) {
        if (!empty($header->body['und'][0]['summary'])) {
            $output .= '<div class="intro">' . $header->body['und'][0]['summary'] . '</div><!--/intro-->';
        }
        if (!empty($header->body['und'][0]['value'])) {
            $output .= '<p>' . $header->body['und'][0]['value'] . '</p>';
        }
    }

    $output .= '
          </article>
       </div><!--/col-8-->';
    if (!empty($output_image)) {
        $output .= ' <div class="col-4 sm-12">' . $output_image . '</div><!--/col-4-->';
    }
    $output .= '
    </div><!--/row-->

 </div><!--/block-->';
    return $output;
}

function hitsa_curriculum_create_translations()
{
    $translations = array(
        'elective-subjects' => array(
            'et' => 'valikained',
            'en-en' => 'elective-subjects',
            'ru' => 'Предмет-на-выбор',
        ),
        'subject_field' => array(
            'et' => 'oppesuund',
            'ru' => 'Направления-обучения',
        ),
        'preparatory-courses' => array(
            'et' => 'ettevalmistuskursused',
            'ru' => 'Подготовительные-курсы',
        ),
        'hobby-groups' => array(
            'et' => 'huviringid',
            'ru' => 'Кружки-по-интересам',
        ),
        'specialities' => array(
            'et' => 'erialad',
            'ru' => 'Специальности',
        ),
        'elective-courses' => array(
            'et' => 'vabaained',
            'ru' => 'Факультативные-предметы',
        ),
        'hobby-activity' => array(
            'et' => 'Huvitegevus',
            'ru' => 'Деятельность-по-интересам',
        ),
        'e-course' => array(
            'et' => 'E-kursused',
            'ru' => 'Электронные-курсы',
        ),

    );

    foreach ($translations as $string => $values) {
        $source = db_query('SELECT lid, source, context, textgroup, location FROM {locales_source} WHERE source = :string', array(':string' => $string))->fetchObject();
        if (!$source) {
            watchdog('update_hook', 'Translation of string "%string" failed.', array('%string%' => $string));
            continue;
        }

        foreach ($values as $langcode => $translated) {
            $translation = db_query('SELECT translation FROM {locales_target} WHERE lid = :lid AND language = :language', array(':lid' => $source->lid, ':language' => $langcode))->fetchField();
            if (is_string($translation)) {
                db_update('locales_target')
                    ->fields(array('translation' => $translated))
                    ->condition('lid', $source->lid)
                    ->condition('language', $langcode)
                    ->execute();
            } else {
                db_insert('locales_target')
                    ->fields(array(
                        'lid' => $source->lid,
                        'translation' => $translated,
                        'language' => $langcode,
                    ))
                    ->execute();
            }
        }
    }
}

function hitsa_curriculum_fp_subject_fields()
{
    $taxonomy = taxonomy_vocabulary_machine_name_load('fields');
    global $language;
    if (!empty($taxonomy)) {
        $taxonomy_tree = taxonomy_get_tree($taxonomy->vid);
        $i = 0;
        $output_slides = array();
        foreach ($taxonomy_tree as $taxonomy_key => $taxonomy_value) {
            $assigned_specialities = hitsa_core_get_content_by_type('node', 'curriculum', $language->language, array('subject_field' => $taxonomy_value->tid, 'limit' => 1, 'cur_type' => 'specialities'));
            $loaded_speciality = null;
            if (!empty($assigned_specialities['node'])) {
                foreach ($assigned_specialities['node'] as $node_key => $node_value) {
                    $loaded_speciality = node_load($node_value->nid);
                }
            }
            $image_url = '';

            $term = taxonomy_term_load($taxonomy_value->tid);
            if (module_exists('i18n_taxonomy')) { //To not break your site if module is not installed
                $term = i18n_taxonomy_localize_terms($term); // The important part!
                if (!empty($term->field_icon_choice)) {
                    $icon = $term->field_icon_choice['und'][0]['value'];
                    $class = 'before-' . $icon;
                    $link = '';
                    if (!empty($loaded_speciality)) {
                        $link = url('node/' . $loaded_speciality->nid);
                    }
                    if (!empty($link)) {
                        $output_slides[] = '<div class="col-3">
                    <a href="' . $link . '" class="block">
                       <span class="caroussel_profession">
                          <span class="caroussel_profession-icon ' . $class . '"></span>
                          <span class="caroussel_profession-title">' . $term->name . '</span>
                          <span class="btn">' . t('Look at specialities') . '</span>
                       </span><!--/caroussel_profession-->
                    </a><!--/block-->
                 </div><!--/col-3-->';
                    }
                }
            }
        }

        $output_slide_container = '';
        if (!empty($output_slides)) {
            $i = 0;
            $count = count($output_slides);
            foreach ($output_slides as $key => $value) {
                if ($i == 0) {
                    $output_slide_container .= '<div class="swiper-slide">
                    <div class="row">';
                }
                $output_slide_container .= $value;
                if ($i == 3) {
                    $i = 0;
                    $output_slide_container .= '</div><!--/row-->

             </div><!--/swiper-slide-->';
                } else {
                    $i++;
                }
                if ($key == $count - 1 && $i != 0) {
                    $output_slide_container .= '</div><!--/row-->

             </div><!--/swiper-slide-->';
                }
            }
        }
    }
    $output = '';
    if (!empty($output_slide_container)) {
        $site_logo_fid = variable_get_value('hitsa_fp_image_fid');
        $file = $site_logo_fid !== null ? file_load($site_logo_fid) : false;
        if (!empty($file->uri)) {
            $file_url = file_create_url($file->uri);
        }
        if (!empty($file_url)) {
            $output .= '
        <div class="hero sm-hide">
        <img src="' . $file_url . '" alt="" />
        <div class="inline">
        <div class="row">
           <div class="col-12">
              <div class="swiper-holder" data-plugin="caroussel" data-slidesPerView="4">

                 <div class="swiper-container">
                <div class="swiper-wrapper">
                 ' . $output_slide_container . '

                 </div><!--/swiper-wrapper-->
                 </div><!--/swiper-container-->
                 <div class="swiper-pagination"></div>
                 <div class="swiper-button-prev"></div>
                 <div class="swiper-button-next"></div>
              </div><!--/swiper-holder-->

           </div><!--/col-12-->
        </div><!--/row-->

     </div><!--/inline-->
     </div>';
        }
    }

    return $output;
}
function hitsa_curriculu_fp_mobile_fields()
{
    $output = '';
    $taxonomy = taxonomy_vocabulary_machine_name_load('fields');

    global $language;
    if (!empty($taxonomy)) {
        $taxonomy_tree = taxonomy_get_tree($taxonomy->vid);
        $i = 0;
        $output_slides = '';
        if (!empty($taxonomy_tree)) {
            foreach ($taxonomy_tree as $taxonomy_key => $taxonomy_value) {
                $assigned_specialities = hitsa_core_get_content_by_type('node', 'curriculum', $language->language, array('subject_field' => $taxonomy_value->tid, 'limit' => 1, 'cur_type' => 'specialities'));
                $loaded_speciality = null;

                if (!empty($assigned_specialities['node'])) {
                    foreach ($assigned_specialities['node'] as $node_key => $node_value) {
                        $loaded_speciality = node_load($node_value->nid);
                    }
                }
                $image_url = '';
                if (!empty($loaded_speciality->field_pictures)) {
                    $picture = $loaded_speciality->field_pictures['und'][0];
                    $image_style = 'hc_pictures';
                    $image_url = image_style_url($image_style, $picture['uri']);
                }
                if (!empty($loaded_speciality)) {
                    $term = taxonomy_term_load($taxonomy_value->tid);
                    if (module_exists('i18n_taxonomy')) { //To not break your site if module is not installed
                        $term = i18n_taxonomy_localize_terms($term); // The important part!
                        if (!empty($term->field_icon_choice)) {
                            $icon = $term->field_icon_choice['und'][0]['value'];
                            $class = 'before-' . $icon;
                            $link = '';
                            if (!empty($loaded_speciality)) {
                                $link = url('node/' . $loaded_speciality->nid);
                            }
                            $output_slides .= '
                <div class="swiper-slide" style="background-image:url(' . $image_url . ');">
                    <a href="' . $link . '" class="block">
                       <span class="caroussel_profession">
                          <span class="caroussel_profession-title">' . $term->name . '</span>
                          <span class="btn">' . t('Look at specialities') . '</span>
                       </span><!--/caroussel_profession-->
                    </a><!--/block-->
                 </div><!--/swiper-slide-->';
                        }
                    }
                }
            }
        }
    }

    $output = '<div class="block sm-show">
    <h3 class="block-title">' . t('Subject fields') . '</h3>

    <div class="hero-mini">
       <div class="swiper-holder" data-plugin="caroussel" data-slidesPerView="1" data-spaceBetween="0">
          <div class="swiper-container">
             <div class="swiper-wrapper">
             ' . $output_slides . '
             </div><!--/swiper-wrapper-->
          </div><!--/swiper-container-->

          <div class="swiper-pagination"></div>
          <div class="swiper-button-prev"></div>
          <div class="swiper-button-next"></div>

       </div><!--/swiper-holder-->
    </div><!--/hero-mini-->

 </div><!--/block sm-show-->';


    return $output;
}
function hitsa_curriculum_url_friendly_strings($string)
{
    $string = mb_strtolower($string);
    $string = str_replace(' ', '-', $string);
    $string = str_replace('õ', 'o', $string);
    $string = str_replace('õ', 'o', $string);
    $string = str_replace('ö', 'o', $string);
    $string = str_replace('ä', 'a', $string);
    $string = str_replace('ü', 'u', $string);
    return $string;
}
function hitsa_curriculum_check_block_visibility($source, $selection)
{
//    $block = block_load('hitsa_curriculum',$selection);
    $query = db_select('block', 'block');
    $query->condition('block.delta', $selection, '=');
    $query->condition('block.theme', 'hitsa', '=');
    $query->fields('block');
    $result = $query->execute();
    $source = $source . '/*';
    while ($block = $result->fetchAssoc()) {
        if (strpos($block['pages'], $source) == false) {
            $block['pages'] .= "\n" . $source;
            $update = db_update('block');
            $update->condition('bid', $block['bid'], '=');
            $update->fields(
                array(
                    'pages' => $block['pages'],
                )
            );
            $update->execute();
        }
    }
    return;
}
function hitsa_curriculum_image_default_styles()
{
    $styles = array();
    $styles['hc_pictures'] = array(
        'effects' => array(
            array(
                'name' => 'image_scale_and_crop',
                'data' => array(
                    'width' => 780,
                    'height' => 440,
                ),
                'weight' => 1,
            ),
        ),
    );

    return $styles;
}
function hitsa_curriculum_mobile_menu($areas, $type, $id = null)
{
    $text = 'More';
    if ($type == 'subject-field') {
        $text = 'More subject fields';
    } elseif ($type == 'preparatory-courses') {
        $text = 'More preparatory courses';
    } elseif ($type == 'elective-subjects') {
        $text = 'More elective-subjects';
    } elseif ($type == 'hobby-groups') {
        $text = 'More hobby groups';
    } elseif ($type == 'specialities') {
        $text = 'More specialities';
    } elseif ($type == 'elective-courses') {
        $text = 'More elective courses';
    } elseif ($type == 'hobby-activity') {
        $text = 'More hobby activities';
    } elseif ($type == 'e-course') {
        $text = 'More e-courses';
    } elseif ($type == 'scholarships') {
        $text = 'More scholarships';
    } elseif ($type == 'sport-facilities') {
        $text = 'More sport facilities';
    } elseif ($type == 'accommodation') {
        $text = 'More accommodations';
    } elseif ($type == 'ordered-trainings') {
        $text = 'More ordered trainings';
    } elseif ($type == 'publications') {
        $text = 'More publications';
    } elseif ($type == 'training-scholarships') {
        $text = 'More training scholarships';
    } elseif ($type == 'certification-exams') {
        $text = 'More certification exams';
    } elseif ($type == 'cooperation-and-partners') {
        $text = 'More cooperation and partners';
    } elseif ($type == 'vacancies') {
        $text = 'More vacancies';
    }

    $get_menu = hitsa_curriculum_generate_left_custom_titles($areas, $type, $id);
    $output = '';
    $output .= '<div class="row sm-show">';
    $output .= '		<div class="col-12">';
    $output .= '			<div class="accordion" data-plugin="accordion" data-allClosed="true">';
    $output .= '				<div class="accordion-entry">';
    $output .= '					<div class="accordion-title">' . t($text) . '</div>';
    $output .= '					<div class="accordion-content">';
    $output .= $get_menu;
    $output .= '					</div><!--/accordion-content-->';
    $output .= '					';
    $output .= '				</div><!--/accordion-entry-->';
    $output .= '			</div><!--/accordion-->';
    $output .= '		</div><!--/col-12-->';
    $output .= '	</div><!--/row-->';
    return $output;
}
