<?php

/**
 * Implements hook_node_info().
 */
function hitsa_curriculum_create_node()
{

    $types = array(
        array(
            'name' => t('Curriculum'),
            'base' => 'node_content',
            'description' => '',
            'type' => 'curriculum',
            'custom' => 1,
            'modified' => 1,
            'locked' => 0,
            'has_title' => 1,
            'title_label' => t('Title'),
            'help' => '',
        ),
    );
    variable_set('language_content_type_curriculum', TRANSLATION_ENABLED);
    foreach ($types as $type) {
        $type = node_type_set_defaults($type);
        node_type_save($type);
    }
    return true;
}
/**
 * Implements hook_block_info().
 */
function hitsa_curriculum_block_info()
{
    $blocks = array();
  
    $field = field_info_field('field_school_selections');
    $allowed = list_allowed_values($field);
    foreach ($allowed as $allowed_key => $allowed_title) {
        $blocks[$allowed_key] = array(
            'info' => t($allowed_title . ' block'),
        );
    }
    return $blocks;
}

/**
 * Implements hook_block_view().
 */
function hitsa_curriculum_block_view($delta = '')
{
    $block = array();
 

    $field = field_info_field('field_school_selections');
    $allowed = list_allowed_values($field);
    foreach ($allowed as $allowed_key => $allowed_title) {
        switch ($allowed_key) {
            case $delta:
                $render = hitsa_curriculum_custom_block($allowed_key);
                $block = array(
                    'subject' => t(''),
                    'content' => array(
                        '#markup' => $render,
                    ),

                );
                break;
        }
    }
    return $block;
}
/**
 * Implements hook_menu().
 */
function hitsa_curriculum_menu()
{
    $items = array();

    $items['curriculum'] = array(
        'title' => t(''),
        'page callback' => 'hitsa_curriculum_page',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );
    $field = field_info_field('field_school_selections');
    $allowed = list_allowed_values($field);
    foreach ($allowed as $allowed_key => $allowed_title) {
        $items[$allowed_key . '/%'] = array(
            'title' => t(''),
            'page callback' => 'hitsa_curriculum_page',
            'page arguments' => array(0, 1),
            'access arguments' => array('access content'),
            'type' => MENU_CALLBACK,
        );
        $items[$allowed_key] = array(
            'title' => t(''),
            'page callback' => 'hitsa_curriculum_page',
            'page arguments' => array(0, 1),
            'access arguments' => array('access content'),
            'type' => MENU_CALLBACK,
        );
    }
    return $items;
}

function hitsa_curriculum_node_insert($node)
{
    if ($node->type=='curriculum') {
        global $language;
        if (!empty($node->field_school_selections)) {
            $selection = $node->field_school_selections['und'][0]['value'];
            $main_source = t($selection,array(),array('langcode'=>$node->language));
            $lookup_main = drupal_lookup_path('alias', $main_source, $node->language);
            if(empty($lookup_main)){
                $path_main = array(
                    'source' => $selection,
                    'alias' => $main_source,
                    'pid' =>null,
                    'language'=>$node->language,
                    'pathauto' =>0,
                );
                path_save($path_main);
            }
            $source = $node->field_school_selections['und'][0]['value'].'/'.$node->nid;
            $field = field_info_field('field_school_selections');
            $allowed = list_allowed_values($field);
            $translated_selection = t($selection,array(),array('langcode'=>$node->language));
            $title = $node->title;
            $title = str_replace(' ', '-', $title);
            $title = str_replace(' ', '-', $title);
            $alias =    $translated_selection.'/'.$title;
            $path = array(
                'source' => $source,
                'alias' => $alias,
                'pid' =>null,
                'language'=>$node->language,
                'pathauto' =>0,
            );
            $lookup = drupal_lookup_path('alias', $source, $node->language);
            if (empty($lookup)) {
                path_save($path);
            } else {
                if ($lookup!=$alias) {
                    $path_old = path_load(
                        array('source' => $source,)
                      );
                    path_delete($path_old['pid']);
                    path_save($path);
                }
            }
        }
    }
}

function hitsa_curriculum_node_presave($node)
{

    
    if (!empty($node->nid)) {
        if ($node->type=='curriculum') {
            global $language;
            if (!empty($node->field_school_selections)) {
                $selection = $node->field_school_selections['und'][0]['value'];
                $main_source = t($selection,array(),array('langcode'=>$node->language));
                $lookup_main = drupal_lookup_path('alias', $main_source, $node->language);
                if(empty($lookup_main)){
                    $path_main = array(
                        'source' => $selection,
                        'alias' => $main_source,
                        'pid' =>null,
                        'language'=>$node->language,
                        'pathauto' =>0,
                    );
                    path_save($path_main);
                }   
                $source = $node->field_school_selections['und'][0]['value'].'/'.$node->nid;
                $field = field_info_field('field_school_selections');
                $allowed = list_allowed_values($field);
                $translated_selection = t($selection,array(),array('langcode'=>$node->language));
                $title = $node->title;
                $title = str_replace(' ', '-', $title);
                $alias = $translated_selection.'/'.$title;
                $path = array(
                'source' => $source,
                'alias' => $alias,
                'pid' =>null,
                'language'=>$node->language,
                'pathauto' =>0,
                );
                $lookup = drupal_lookup_path('alias', $source, $node->language);
                if (empty($lookup)) {
                        path_save($path);
                } else {
                    if ($lookup!=$alias) {
                        $path_old = path_load(
                            array('source' => $source,)
                          );
                        path_delete($path_old['pid']);
                        path_save($path);
                    }
                }
            }
        }
    }
}

function hitsa_curriculum_form_alter($form, $form_state, $form_id)
{
    switch ($form_id) {
        case 'curriculum_node_form':
            global $language;
            $options= hitsa_core_get_content_by_type($e_type = 'node', $type = 'content_page', $language->language, $conditions = array('content_page_type' => 'cp_type'));
            if (!empty($options['node'])) {
                if (!empty($options)) {
                    if (isset($options['node'])) {
                        $content_nids = array_keys($options['node']);
                        $real_content = entity_load('node', $content_nids);
                        if (!empty($real_content)) {
                            $optiones = array();
                            foreach ($real_content as $real_key => $real_value) {
                                if (empty($optiones)) {
                                    $optiones['_none'] = t('-None-');
                                }
                                $optiones[$real_key]=$real_value->title;
                            }
                        }
                    }
                }
            }
            if (!empty($optiones)) {
                $form['field_page_header']['und']['#options']=$optiones;
                return $form;
            }
            break;
    }
}
function hitsa_curriculum_page($type = null, $name = null)
{
    $build = array();
    return $build;
    $page = hitsa_curriculum_specialities_block($type, $name);

    $build['hitsa_specialities'] = array(
        '#type' => 'markup',
        '#markup' => drupal_render($page),
    );
    return $build;
}

function hitsa_curriculum_generate_table($table)
{
    $output = '';
    if (!empty($table->field_table_content)) {
        $output .= '<div class="table_wrapper" data-plugin="responsiveTable">';
        $output .= '<table>';
        $table_data = $table->field_table_content['und'][0]['tabledata'];
        $rows_count = $table_data['rebuild']['count_rows'];
        $columns_count = $table_data['rebuild']['count_cols'];
        $column_width = 100 / $columns_count;
        $table_descriptions = array();
        if (!empty($table->field_descriptions)) {
            foreach ($table->field_descriptions['und'] as $table_description) {
                $description = entity_load_single('paragraphs_item', $table_description['value']);
                if (!empty($description->field_table_field_description)) {
                    $col = $description->field_column['und'][0]['value'] - 1;
                    $row = $description->field_row['und'][0]['value'] - 1;
                    $table_descriptions[$col . '_' . $row] = $description->field_table_field_description['und'][0]['value'];
                }
            }
        }

        if (!empty($table_data['tabledata']['row_0'])) {
            $output .= '  <thead>';
            $output .= '  <tr>';
            for ($i = 0; $i < $columns_count; $i++) {
                $output .= '<th style="width: ' . $column_width . '%;">';
                $output .= $table_data['tabledata']['row_0']['col_' . $i];
                if (!empty($table_descriptions[$i . '_0'])) {
                    $output .= '<span class="before-question-circle" title="' . $table_descriptions[$i . '_0'] . '"></span>';
                }
                $output .= '</th>';
            }
            $output .= '  </tr>';
            $output .= ' </thead>';
        }
        $output .= '<tbody>';
        for ($i = 1; $i < $rows_count; $i++) {
            $output .= '<tr>';
            for ($j = 0; $j < $columns_count; $j++) {
                $output .= '<td>';
                $output .= $table_data['tabledata']['row_' . $i]['col_' . $j];
                if (!empty($table_descriptions[$j . '_' . $i])) {
                    $output .= '    <span class="before-question-circle" title="' . $table_descriptions[$j . '_' . $i] . '"></span>';
                }
                $output .= '</td>';
            }
            $output .= '</tr>';
        }
        $output .= '</tbody>';
        $output .= '</table>';
        $output .= '</div><!--/table-wrapper-->';
    }
    return $output;
}
function hitsa_curriculum_jobs_part($content = null)
{
    $output = '';
    $output .= '  <div class="row">';
    $output .= ' <div class="col-10">';
    if (!empty($content)) {
        if (!empty($content->field_jobs_pretext)) {
            $output .= $content->field_jobs_pretext['und'][0]['value'];
        }
    }
    if (!empty($content->field_jobs)) {
        $output .= '<ul class="bullet-list_article">';
        foreach ($content->field_jobs['und'] as $key => $job) {
            $job = entity_load_single('paragraphs_item', $job['value']);
            $output .= '<li>';
            if (!empty($job->field_job)) {
                $output .= $job->field_job['und'][0]['value'];
                if (!empty($job->field_job_description)) {
                    $job_description = $job->field_job_description['und'][0]['value'];
                    $output .= '<span class="before-question-circle" title="' . $job_description . '"></span>';
                }
            }
            $output .= '</li>';
        }
        $output .= '</ul>';
    }

    $output .= '</div><!--/col-10-->';
    $output .= ' </div><!--/row-->';
    return $output;
}
function hitsa_curriculum_attachments($attachments)
{
    if (!empty($attachments)) {
        $output = '';
        $output .= '<div class="row">';
        $output .= '<div class="col-10">';
        foreach ($attachments as $key => $attachment) {
            $attachment_url = file_create_url($attachment['uri']);
            $output .= '<a class="link-circle" href="' . $attachment_url . '">';
            $output .= '<span class="before-envelope"></span>';
            $output .= $attachment['filename'];
            $output .= '</a><!--/link-circle-->';
        }
        $output .= '</div><!--/col-10-->';
        $output .= '</div><!--/row-->';
        return $output;
    }
}
function hitsa_curriculum_pictures($pictures)
{
    if (!empty($pictures)) {
        $output = '';
        $output .= '<div class="row">';
        foreach ($pictures as $key => $picture) {
            $picture_text = '';
            $image_style = 'large';
            $image_url = image_style_url($image_style, $picture['uri']);
            if (!empty($picture['field_file_image_title_text'])) {
                $picture_text = $picture['field_file_image_title_text']['und'][0]['value'];
            }
            $output .= '  <div class="col-5">';
            $output .= '  <figure>';
            $output .= '    <img src="' . $image_url . '" alt="">';
            $output .= '    <figcaption>' . $picture_text . '</figcaption>';
            $output .= '   </figure>';
            $output .= ' </div><!--/col-6-->';
        }
        $output .= '</div><!--/row-->';
        return $output;
    }
}
function hitsa_curriculum_contacts($contacts)
{
    if (!empty($contacts)) {
        $output = '';
        foreach ($contacts as $key => $contact) {
            $contact = entity_load_single('paragraphs_item', $contact['value']);
            if (!empty($contact->field_contact_title)) {
                $output .= '<p><b>' . $contact->field_contact_title['und'][0]['value'] . '</b></p>';
            }
            $output .= '<ul class="list-details">';
            if (!empty($contact->field_website)) {
                # code...

                $output .= '   <li>';
                $output .= '      <div class="before-home"></div>';
                $output .= '      <div class="list-details_text">';
                $output .= '         <p><a href="' . $contact->field_website['und'][0]['value'] . '" target="_blank">' . $contact->field_website['und'][0]['value'] . '</a></p>';
                $output .= '      </div><!--/list-details_text-->';
                $output .= '   </li>';
            }
            if (!empty($contact->field_contact_email)) {
                $output .= '   <li>';
                $output .= '      <div class="before-envelope"></div>';
                $output .= '      <div class="list-details_text">';
                $output .= '         <p><a href="' . $contact->field_contact_email['und'][0]['email'] . '">' . $contact->field_contact_email['und'][0]['email'] . '</a></p>';
                $output .= '      </div><!--/list-details_text-->';
                $output .= '   </li>';
            }
            if (!empty($contact->field_phone_number)) {
                $output .= '   <li>';
                $output .= '      <div class="before-phone"></div>';
                $output .= '      <div class="list-details_text">';
                $output .= '         <p>' . $contact->field_phone_number['und'][0]['value'] . '</p>';
                $output .= '      </div><!--/list-details_text-->';
                $output .= '   </li>';
            }
            if (!empty($contact->field_address)) {
                $output .= '   <li>';
                $output .= '      <div class="before-location"></div>';
                $output .= '              <div class="list-details_text">';
                $output .= '        <p>' . $contact->field_address['und'][0]['value'] . '</p>';
                $output .= '      </div><!--/list-details_text-->';
                $output .= '   </li>';
            }
            $output .= ' </ul><!--/list-details-->';
        }
        return $output;
    }
}
function hitsa_curriculum_generate_left_f_titles($areas)
{

    if (is_array($areas)) {
        $output = '<div class="col-3 d-flex">';
        $output .= '<ul class="side-menu">';
        $current_path = current_path();
        if (!empty($_REQUEST)) {
            if (isset($_REQUEST['page_id'])) {
                $page_id = $_REQUEST['page_id'];
            }
        }
        foreach ($areas as $area_key => $area) {
            $class = '';
            if (isset($page_id)) {
                if ($page_id == $area->nid) {
                    $class = 'active';
                }
            }
            $link = url($current_path, array('query' => array('page_id' => $area->nid)));
            $output .= '<li class="' . $class . '"><a href="' . $link . '">' . $area->title . '</a></li>';
            unset($class);
        }
        $output .= '</ul>';
        $output .= '</div><!--/col-3-->';
        return $output;
    }
}

function hitsa_curriculum_generate_area_right_side($node)
{
    $output = '';
    if (!empty($node)) {
        if (is_object($node)) {
            $output .= ' <div class="col-9">';
            $output .= ' <article>';
            $output .= '<h3>' . $node->title . '
            <span class="btn-bar align-right pull-right">
                <a href="" class="btn-circle before-share"></a>
                <a href="javascript:window.print();" class="btn-circle before-print"></a>
            </span><!--/button-row-->
            </h3>';

            $output .= '<div class="intro">';
            if (!empty($node->field_speciality_description)) {
                $output .= $node->field_speciality_description['und'][0]['value'];
            }
            $output .= '</div>';
            if (!empty($node->body)) {
                $output .= $node->body['und'][0]['value'];
            }
            if (!empty($node->field_attachments)) {
                $output .= ' <div class="row">
                <div class="col-12">';

                foreach ($node->field_attachments['und'] as $attachment_key => $attachment) {
                    $attachment_url = file_create_url($attachment['uri']);
                    $output .= '<a class="link-circle" href="' . $attachment_url . '">
                    <span class="before-document"></span>
                    ' . $attachment['filename'] . '
                 </a><!--/link-circle-->';
                }
                $output .= '
                </div><!--/col-12-->
             </div><!--/row-->';
            }
            $output .= '</article>';
            $output .= '</div><!--/col-9-->';
        }
    }
    return $output;
}
function hitsa_curriculum_custom_block($curriculum_type)
{

    global $language;
    $current_path = current_path();
    $menu_items = menu_get_item($current_path);
    $type = null;
    $active_id = null;
    if (!empty($menu_items)) {
        if (!empty($menu_items['page_arguments'])) {
            if (!empty($menu_items['page_arguments'][0])) {
                $type = $menu_items['page_arguments'][0];
            }
            if (!empty($menu_items['page_arguments'][1])) {
                $active_id = $menu_items['page_arguments'][1];
            }
        }
    }
    if (!empty($type)) {
        $header_content = hitsa_core_get_content_by_type('node', 'content_page', $language->language, array('cur_type' => $type));
        if (!empty($header_content)) {
            $header_nids = array_keys($header_content['node']);
            $header = entity_load('node', $header_nids);
            foreach ($header as $header_key => $header_value) {
                $header_content_html = hitsa_curriculum_generate_header($header_value);
                break;
            }
        }
    }

    $output = '';
    if (!empty($header_content_html)) {
        $output.=$header_content_html;
    }
    if (module_exists('hitsa_core')) {
        $content = hitsa_core_get_content_by_type('node', 'curriculum', $language->language, array('cur_type' => $type));
    }
    
    if (!empty($content)) {
        if (isset($content['node'])) {
            $content_nids = array_keys($content['node']);
            $real_content = entity_load('node', $content_nids);
        }
    }
    if (!empty($real_content)) {
        if (empty($active_id)) {
            foreach ($real_content as $real_key => $real_value) {
                $active_id = $real_key;
                break;
            }
        }
        $left_side = hitsa_curriculum_generate_left_custom_titles($real_content, $type, $active_id);
        $content = null;
        if (!empty($active_id)) {
            if (!empty($real_content[$active_id])) {
                $content = $real_content[$active_id];
            }
        }
        if (empty($content)) {
            foreach ($real_content as $real_content_key => $real_content_value) {
                $content = $real_content_value;
                break;
            }
        }
        $right_side = hitsa_curriculum_generate_right_custom_side($content, $curriculum_type);
    }
    if (!empty($left_side)||!empty($right_side)) {
        $output .= '<div class="block no-padding">';
        $output .= '<div class="row">';
        $output .= '<div class="col-3 d-flex sm-hide">';
        $output .= $left_side;
        $output .= '</div><!--/col-3-->';
        $output .= '<div class="col-9 sm-12">';
        $output .= $right_side;
        $output .= '</div><!--/col-9-->';
        $output .= '</div><!--/row-->';
        $output .= '</div><!--/block-->';
    }
    return $output;
}
function hitsa_curriculum_generate_left_custom_titles($areas, $type = null, $id = null)
{
    
    global $language;
    if (is_array($areas)) {
        $output = '';
        $output .= '<ul class="side-menu">';
        $current_path = current_path();
        if (!empty($_REQUEST)) {
            if (isset($_REQUEST['page_id'])) {
                $page_id = $_REQUEST['page_id'];
            }
        }
        if ($type != 'specialities') {
            foreach ($areas as $area_key => $area) {
                $class = '';
                if (isset($id)) {
                    if ($id == $area->nid) {
                        $class = 'active';
                    }
                }
                if (!is_object($type)) {
                    $link = url($type . '/' . $area->nid);
                } else {
                    if (!empty($type->field_school_selections)) {
                        $link = url($type->field_school_selections['und'][0]['value'] . '/' . $area->nid);
                    }
                }
                $output .= '<li class="' . $class . '"><a href="' . $link . '">' . $area->title . '</a></li>';
                unset($class);
            }
            $output .= '</ul>';
            return $output;
        } else {
            $fields = array();
            foreach ($areas as $area_key => $area_value) {
                if (!empty($area_value->field_field)) {
                    $field_id = $area_value->field_field['und'][0]['target_id'];
                    $loaded_field = taxonomy_term_load($field_id);
                    if (empty($fields[$field_id])) {
                        $fields[$field_id] = array(
                            'name' => $loaded_field->name,
                            'tid' => $loaded_field->tid,
                            'subpoints' => array($area_key => $area_value),
                        );
                    } else {
                        $fields[$field_id]['subpoints'][$area_key] = $area_value;
                    }
                    if ($area_value->nid==$id) {
                        $fields[$field_id]['subpoints'][$area_key]->active=true;
                        $fields[$field_id]['active']=true;
                    } else {
                        $fields[$field_id]['subpoints'][$area_key]->active=false;
                        if (isset($fields[$field_id]['active'])) {
                            # code...
                        } else {
                            $fields[$field_id]['active']=false;
                        }
                    }
                }
            }
            $output = '';
            $output .= '<ul class="side-menu" data-plugin="dropdownMenu">';
            foreach ($fields as $fields_key => $fields_value) {
                $class = ($fields_value['active'])?'active':'';
                $list_item = '<li class="' . $class . '">';
                $list_item .= '<a href="javascript:void(0);">' . $fields_value['name'] . '</a>';
                if (!empty($fields_value['subpoints'])) {
                    $list_item .= '<ul>';
                    foreach ($fields_value['subpoints'] as $sub_key => $subpoint) {
                        $subpoint_url = url($type.'/'.$subpoint->nid);
                        $class = ($subpoint->active == true) ? 'active' : '';
                        $list_item .= '<li class="' . $class . '">';
                        $list_item .= '<a href="' . $subpoint_url . '">' . $subpoint->title . '</a>';
                        $list_item .= '</li>';
                    }
                    $list_item .= '</ul>';
                }
                $list_item .= '</li>';

                $output .= $list_item;
            }
            $output .= '</ul>';
            return $output;
        }
    }
}
function hitsa_curriculum_generate_right_custom_side($content, $curriculum_type)
{
    global $language;
    $output_elements = array();
    variable_set('school_type', 'middle');
    $school_type = variable_get('school_type');

    $output = '<article>';

    $output .= '
    <h3 class="sm-block-title">' . $content->title . '
       <span class="btn-bar align-right pull-right sm-hide">
          <a href="" class="btn-circle before-share"></a>
          <a href="javascript:window.print();" class="btn-circle before-print"></a>
       </span><!--/button-row-->
    </h3>';
    if (!empty($content->field_speciality_description)) {
        $output .= '<h5 class="sm-alignment">' . $content->field_speciality_description['und'][0]['value'] . '
       <span class="btn-bar align-right pull-right sm-show">
          <a href="" class="btn-circle before-share"></a>
          <a href="javascript:window.print();" class="sm-hide btn-circle before-print"></a>
       </span><!--/button-row-->
    </h5>';
    }
    if ($curriculum_type == 'preparatory_courses' || $curriculum_type == 'elective_subjects') {
        if (!empty($content->field_curriculum_length)) {
            $start = $content->field_curriculum_length['und'][0]['value'];
            $end = $content->field_curriculum_length['und'][0]['value2'];
            $start = format_date($start, 'custom', 'd.F.Y', null, $language->language);
            $end = format_date($end, 'custom', 'd.F.Y', null, $language->language);
            $output_elements['date_length'] = '<p>' . $start . ' - ' . $end . '</p>';
        }
        if (!empty($content->field_curriculum_start)) {
            $start = $content->field_curriculum_start['und'][0]['value'];
            $start = format_date($start, 'custom', 'd.F.Y - G:i', null, $language->language);
            $output_elements['date_start'] = '<p>' . $start . '</p>';
        }
        if (!empty($content->field_days_place)) {
            $output_elements['days_it_takes_place'] = '<p>' . $content->field_days_place['und'][0]['value'] . '</p>';
        }
        if (!empty($content->field_instructor)) {
            $output_elements['instructor'] = '<p>' . $content->field_instructor['und'][0]['value'] . '</p>';
        }
        if (!empty($content->field_room)) {
            $output_elements['room'] = '<p>' . $content->field_room['und'][0]['value'] . '</p>';
        }
        if (!empty($content->field_target_group)) {
            $output_elements['target_group'] = '<p>' . $content->field_target_group['und'][0]['value'] . '</p>';
        }
        if (!empty($content->field_premise)) {
            $output_elements['premise'] = '<p>' . $content->field_premise['und'][0]['value'] . '</p>';
        }
        if (!empty($content->field_assessment)) {
            $output_elements['assessment'] = '<p>' . $content->field_assessment['und'][0]['value'] . '</p>';
        }
        if (!empty($content->field_rating)) {
            $output_elements['rating'] = '<p>' . $content->field_rating['und'][0]['value'] . '</p>';
        }
        if (!empty($content->field_textbooks)) {
            $output_elements['textbooks'] = '<p>' . $content->field_textbooks['und'][0]['value'] . '</p>';
        }
    }

    if (!empty($content->field_table)) {
        $table_id = $content->field_table['und'][0]['value'];
        $table = entity_load_single('paragraphs_item', $table_id);
        if (!empty($table)) {
            $generated_table = hitsa_curriculum_generate_table($table);
            $output_elements['table'] = $generated_table;
        }
    }
    if (!empty($content->body)) {
        $output .= $content->body['und'][0]['value'];
    }
    if (!empty($content->field_jobs_pretext) && !empty($content->field_jobs)) {
        $output_elements['jobs'] = '<h5>' . t('Jobs in the future') . '</h5>';
        $output_elements['jobs'] .= (!empty($content->field_jobs_pretext)) ? $content->field_speciality_description['und'][0]['value'] : '';
        $output_elements['jobs'] .= hitsa_curriculum_jobs_part($content);
    }
    if (!empty($content->field_attachments)) {
        $output_elements['documents'] = hitsa_curriculum_attachments($content->field_attachments['und']);
    }

    if (!empty($content->field_pictures)) {
        $output_elements['pictures'] = hitsa_curriculum_pictures($content->field_pictures['und']);
    }
    if (!empty($content->field_contacts)) {
        $output_elements['contacts'] = hitsa_curriculum_contacts($content->field_contacts['und']);
    }
    if (!empty($output_elements)) {
        switch ($school_type) {
            case 'middle':
                if ($curriculum_type == 'preparatory_courses' || $curriculum_type == 'elective_subjects') {
                    if (!empty($output_elements['date_length'])) {
                        $output .= $output_elements['date_length'];
                    }
                    if (!empty($output_elements['date_start'])) {
                        $output .= $output_elements['date_start'];
                    }
                    if (!empty($output_elements['days_it_takes_place'])) {
                        $output .= $output_elements['days_it_takes_place'];
                    }
                    if (!empty($output_elements['instructor'])) {
                        $output .= $output_elements['instructor'];
                    }
                    if (!empty($output_elements['room'])) {
                        $output .= $output_elements['room'];
                    }
                    if (!empty($output_elements['target_group'])) {
                        $output .= $output_elements['target_group'];
                    }
                    if (!empty($output_elements['premise'])) {
                        $output .= $output_elements['premise'];
                    }
                    if (!empty($output_elements['rating'])) {
                        $output .= $output_elements['rating'];
                    }
                    if (!empty($output_elements['assessment'])) {
                        $output .= $output_elements['assessment'];
                    }
                    if (!empty($output_elements['textbooks'])) {
                        $output .= $output_elements['textbooks'];
                    }
                }
                if (!empty($output_elements['documents'])) {
                    $output .= $output_elements['documents'];
                }
                if (!empty($output_elements['table'])) {
                    $output .= $output_elements['table'];
                }
                if (!empty($output_elements['pictures'])) {
                    $output .= $output_elements['pictures'];
                }
                if (!empty($output_elements['contacts'])) {
                    $output .= $output_elements['contacts'];
                }
                break;

            default:
                foreach ($output_elements as $element_key => $element) {
                    $output .= $element;
                }
                break;
        }
    }

    $output .= ' 
        
 </article>';
    return $output;
}
function hitsa_curriculum_generate_header($header)
{
    if (!empty($header->cp_image)) {
        $image = $header->cp_image['und'][0];
        $image_style = 'large';
        $image_url = image_style_url($image_style, $picture['uri']);
        if (!empty($picture['field_file_image_title_text'])) {
            $picture_text = $picture['field_file_image_title_text']['und'][0]['value'];
        }
        $output_image = '';
        $output_image .= '  <figure>';
        $output_image .= '    <img src="' . $image_url . '" alt="">';
        $output_image .= '    <figcaption>' . $picture_text . '</figcaption>';
        $output_image .= '   </figure>';
    }
    $output = '<div class="block">
    
    <h2 class="block-title">'.$header->title.'</h2>
    
    <div class="row-spacer-xs"></div>
    <div class="row">
       <div class="col-8 sm-12">
          <article>';
    if (!empty($header->body)) {
        if (!empty($header->body['und'][0]['summary'])) {
            $output.='<div class="intro">'.$header->body['und'][0]['summary'].'</div><!--/intro-->';
        }
        if (!empty($header->body['und'][0]['value'])) {
            $output.='<p>'.$header->body['und'][0]['value'].'</p>';
        }
    }
             
            $output.=' 
          </article>
       </div><!--/col-8-->';
    if (!empty($output_image)) {
        $output.=' <div class="col-4 sm-12">'.$output_image.'</div><!--/col-4-->';
    }
       $output.='
    </div><!--/row-->
    
 </div><!--/block-->';
    return $output;
}
