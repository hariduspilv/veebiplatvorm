<?php

/**
 * Implements hook_cronapi().
 */

function hitsa_cron_cronapi()
{

  $items = [];
  $random_time = variable_get('hitsa_cron_random_time');
  if (empty($random_time)) {
    $random_time = rand(1, 60);
    variable_set('hitsa_cron_random_time', $random_time);
  }
  $items['hitsa_cron_grunt_runner'] = [
    'title' => t('Grunt runner'),
    'description' => 'Grunt compiler and runner',
    'callback' => 'hitsa_cron_run_grunt',
    'scheduler' => [
      'name' => 'crontab',
      'crontab' => [
        'rules' => [strval($random_time) . ' 2 * * *'],
      ],
    ],
  ];
  $items['hitsa_cron_update_runner'] = [
    'title' => t('Update runner'),
    'description' => 'Update runner',
    'callback' => 'hitsa_cron_run_update',
    'scheduler' => [
      'name' => 'crontab',
      'crontab' => [
        'rules' => [strval($random_time) . ' 3 * * *'],
      ],
    ],
  ];
  return $items;
}

/* Hitsa cron grunt runner.
 *
*/

function hitsa_cron_run_grunt()
{
  module_load_include('inc', 'hitsa_color', 'includes/hitsa_color');
  hitsa_color_grunt_runner();
}

/**
 * Hitsa update script
 */
function hitsa_cron_run_update()
{
  //Siia kirjutada update number
  $cronsettings_set = variable_get('cronsettings_set');
  if(empty($cronsettings_set)) {
    variable_set('ultimate_cron_plugin_scheduler_default', 'crontab');
    variable_set('ultimate_cron_plugin_settings_poorman_settings', array('launcher' => 'serial', 'early_page_flus' => '1', 'user_agent' => 'Ultimate Cron'));
    variable_set('cronsettings_set','TRUE');
  }
  $updates = [
    '1',
    '2',
    '3',
    '4'
  ];
  if (!empty($updates)) {
    $updated = variable_get('hitsa_updated');
    $updated = explode(',', $updated);
    foreach ($updates as $update) {
      $to_update = TRUE;
      foreach ($updated as $uptodate) {
        if (strval($update) == strval($uptodate)) {
          $to_update = FALSE;
          break;
        }
      }
      if ($to_update) {
        $function_name = 'hitsa_cron_up_' . strval($update);
        if (function_exists($function_name)) {
          $update_status = call_user_func($function_name, $update);
          if ($update_status) {
            $updatedd = variable_get('hitsa_updated');
            if (empty($updatedd)) {
              variable_set('hitsa_updated', $update);
            } else {
              variable_set('hitsa_updated', $updatedd . ',' . $update);
            }
          }
        }
      }
    }
  }
}

function hitsa_cron_up_1($update)
{
  $image_style = image_style_load('hitsa_article_modal_view');
  if (!empty($image_style['effects'])) {
    foreach ($image_style['effects'] as $effect_key => $effect) {
      if ($effect['name'] == 'image_scale') {
        $image_effect = image_effect_load($effect_key, 'hitsa_article_modal_view');
        if (!empty($image_effect['data'])) {
          $image_effect['data']['width'] = '1440';
          $image_effect['data']['height'] = '810';
        }
        image_effect_save($image_effect);
      }
    }
  }
  return TRUE;
}

/**
 * @param null $update
 *
 * Add table selector to description.
 */
function hitsa_cron_up_2($update = null)
{
  $field_bases = array();
  // Exported field_base: 'field_tabel_number'.
  $field_bases['field_tabel_number'] = array(
    'active' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'field_tabel_number',
    'indexes' => array(),
    'locked' => 0,
    'module' => 'number',
    'settings' => array(
      'entity_translation_sync' => FALSE,
    ),
    'translatable' => 0,
    'type' => 'number_integer',
  );
  $field_instances = array();
  // Exported field_instance: 'paragraphs_item-description-field_tabel_number'.
  $field_instances['paragraphs_item-description-field_tabel_number'] = array(
    'bundle' => 'description',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => 'TÃ¤psustage, millise tabeli juurde number kuulub<br>
Vajalik ainult eriala tabeli puhul',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'number',
        'settings' => array(
          'decimal_separator' => '.',
          'prefix_suffix' => TRUE,
          'scale' => 0,
          'thousand_separator' => '',
        ),
        'type' => 'number_integer',
        'weight' => 3,
      ),
      'paragraphs_editor_preview' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 0,
      ),
    ),
    'entity_type' => 'paragraphs_item',
    'field_name' => 'field_tabel_number',
    'label' => 'Tabeli nr',
    'required' => 0,
    'settings' => array(
      'entity_translation_sync' => FALSE,
      'max' => '',
      'min' => 1,
      'prefix' => '',
      'suffix' => '',
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 0,
      'module' => 'number',
      'settings' => array(),
      'type' => 'number',
      'weight' => 0,
    ),
  );
  foreach ($field_bases as $field) {
    $field_test = field_info_field($field['field_name']);
    if (empty($field_test)) {
      field_create_field($field);
    }
  }

  foreach ($field_instances as $field_instance) {
    $instance = field_info_instance($field_instance['entity_type'], $field_instance['field_name'], $field_instance['bundle']);
    if (!$instance) {
      field_create_instance($field_instance);
    }
  }
  return TRUE;
}

/**
 * @param null $update
 * @return bool
 * @throws FieldException
 * Update to add contacts field to news, contetnt article and events
 */
function hitsa_cron_up_3($update=null){
  $field_bases = array();

  // Exported field_base: 'field_contacts'.
  $field_bases['field_contacts'] = array(
    'active' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'field_contacts',
    'indexes' => array(),
    'locked' => 0,
    'module' => 'paragraphs',
    'settings' => array(
      'entity_translation_sync' => FALSE,
    ),
    'translatable' => 0,
    'type' => 'paragraphs',
  );

  $field_instances = array();

  // Exported field_instance: 'node-article-field_contacts'.
  $field_instances['node-article-field_contacts'] = array(
    'bundle' => 'article',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'paragraphs',
        'settings' => array(
          'view_mode' => 'full',
        ),
        'type' => 'paragraphs_view',
        'weight' => 11,
      ),
      'teaser' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 0,
      ),
    ),
    'entity_type' => 'node',
    'field_name' => 'field_contacts',
    'label' => 'Kontaktid',
    'required' => 0,
    'settings' => array(
      'add_mode' => 'select',
      'allowed_bundles' => array(
        'alumnus_person' => -1,
        'catering_food_by_day' => -1,
        'contacts' => 'contacts',
        'contacts_department' => -1,
        'description' => -1,
        'jobs' => -1,
        'reception_time' => -1,
        'subpage' => -1,
        'table' => -1,
      ),
      'bundle_weights' => array(
        'alumnus_person' => 2,
        'catering_food_by_day' => 3,
        'contacts' => 4,
        'contacts_department' => 5,
        'description' => 6,
        'jobs' => 7,
        'reception_time' => 8,
        'subpage' => 9,
        'table' => 10,
      ),
      'default_edit_mode' => 'open',
      'entity_translation_sync' => FALSE,
      'title' => 'Kontakt',
      'title_multiple' => 'Kontakte',
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 0,
      'module' => 'paragraphs',
      'settings' => array(),
      'type' => 'paragraphs_embed',
      'weight' => 44,
    ),
  );

  // Exported field_instance: 'node-content_page-field_contacts'.
  $field_instances['node-content_page-field_contacts'] = array(
    'bundle' => 'content_page',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'paragraphs',
        'settings' => array(
          'view_mode' => 'full',
        ),
        'type' => 'paragraphs_view',
        'weight' => 14,
      ),
      'teaser' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 0,
      ),
    ),
    'entity_type' => 'node',
    'field_name' => 'field_contacts',
    'label' => 'Kontaktid',
    'required' => 0,
    'settings' => array(
      'add_mode' => 'button',
      'allowed_bundles' => array(
        'alumnus_person' => -1,
        'catering_food_by_day' => -1,
        'contacts' => 'contacts',
        'contacts_department' => -1,
        'description' => -1,
        'jobs' => -1,
        'reception_time' => -1,
        'subpage' => -1,
        'table' => -1,
      ),
      'bundle_weights' => array(
        'alumnus_person' => 2,
        'catering_food_by_day' => 3,
        'contacts' => 4,
        'contacts_department' => 5,
        'description' => 6,
        'jobs' => 7,
        'reception_time' => 8,
        'subpage' => 9,
        'table' => 10,
      ),
      'default_edit_mode' => 'open',
      'entity_translation_sync' => FALSE,
      'title' => 'Kontakt',
      'title_multiple' => 'Kontakte',
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 0,
      'module' => 'paragraphs',
      'settings' => array(),
      'type' => 'paragraphs_embed',
      'weight' => 54,
    ),
  );
  $field_instances['node-content_page-field_contacts'] = array(
    'bundle' => 'event',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'paragraphs',
        'settings' => array(
          'view_mode' => 'full',
        ),
        'type' => 'paragraphs_view',
        'weight' => 14,
      ),
      'teaser' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 0,
      ),
    ),
    'entity_type' => 'node',
    'field_name' => 'field_contacts',
    'label' => 'Kontaktid',
    'required' => 0,
    'settings' => array(
      'add_mode' => 'button',
      'allowed_bundles' => array(
        'alumnus_person' => -1,
        'catering_food_by_day' => -1,
        'contacts' => 'contacts',
        'contacts_department' => -1,
        'description' => -1,
        'jobs' => -1,
        'reception_time' => -1,
        'subpage' => -1,
        'table' => -1,
      ),
      'bundle_weights' => array(
        'alumnus_person' => 2,
        'catering_food_by_day' => 3,
        'contacts' => 4,
        'contacts_department' => 5,
        'description' => 6,
        'jobs' => 7,
        'reception_time' => 8,
        'subpage' => 9,
        'table' => 10,
      ),
      'default_edit_mode' => 'open',
      'entity_translation_sync' => FALSE,
      'title' => 'Kontakt',
      'title_multiple' => 'Kontakte',
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 0,
      'module' => 'paragraphs',
      'settings' => array(),
      'type' => 'paragraphs_embed',
      'weight' => 54,
    ),
  );
  // Translatables
  // Included for use with string extractors like potx.
  t('Kontaktid');

  foreach ($field_bases as $field) {
    $field_test = field_info_field($field['field_name']);
    if (empty($field_test)) {
      field_create_field($field);
    }
  }

  foreach ($field_instances as $field_instance) {
    $instance = field_info_instance($field_instance['entity_type'], $field_instance['field_name'], $field_instance['bundle']);
    if (!$instance) {
      field_create_instance($field_instance);
    }
  }
  return TRUE;
}/**
 * @param null $update
 * @return bool
 * @throws FieldException
 * Update to add contacts field to news, contetnt article and events
 */
function hitsa_cron_up_4($update=null){
  $field_bases = array();

  // Exported field_base: 'field_contacts'.
  $field_bases['field_contacts'] = array(
    'active' => 1,
    'cardinality' => 1,
    'deleted' => 0,
    'entity_types' => array(),
    'field_name' => 'field_contacts',
    'indexes' => array(),
    'locked' => 0,
    'module' => 'paragraphs',
    'settings' => array(
      'entity_translation_sync' => FALSE,
    ),
    'translatable' => 0,
    'type' => 'paragraphs',
  );

  $field_instances = array();

  // Exported field_instance: 'node-article-field_contacts'.
  $field_instances['node-article-field_contacts'] = array(
    'bundle' => 'article',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'paragraphs',
        'settings' => array(
          'view_mode' => 'full',
        ),
        'type' => 'paragraphs_view',
        'weight' => 11,
      ),
      'teaser' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 0,
      ),
    ),
    'entity_type' => 'node',
    'field_name' => 'field_contacts',
    'label' => 'Kontaktid',
    'required' => 0,
    'settings' => array(
      'add_mode' => 'select',
      'allowed_bundles' => array(
        'alumnus_person' => -1,
        'catering_food_by_day' => -1,
        'contacts' => 'contacts',
        'contacts_department' => -1,
        'description' => -1,
        'jobs' => -1,
        'reception_time' => -1,
        'subpage' => -1,
        'table' => -1,
      ),
      'bundle_weights' => array(
        'alumnus_person' => 2,
        'catering_food_by_day' => 3,
        'contacts' => 4,
        'contacts_department' => 5,
        'description' => 6,
        'jobs' => 7,
        'reception_time' => 8,
        'subpage' => 9,
        'table' => 10,
      ),
      'default_edit_mode' => 'open',
      'entity_translation_sync' => FALSE,
      'title' => 'Kontakt',
      'title_multiple' => 'Kontakte',
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 0,
      'module' => 'paragraphs',
      'settings' => array(),
      'type' => 'paragraphs_embed',
      'weight' => 44,
    ),
  );

  // Exported field_instance: 'node-content_page-field_contacts'.
  $field_instances['node-content_page-field_contacts'] = array(
    'bundle' => 'content_page',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'paragraphs',
        'settings' => array(
          'view_mode' => 'full',
        ),
        'type' => 'paragraphs_view',
        'weight' => 14,
      ),
      'teaser' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 0,
      ),
    ),
    'entity_type' => 'node',
    'field_name' => 'field_contacts',
    'label' => 'Kontaktid',
    'required' => 0,
    'settings' => array(
      'add_mode' => 'button',
      'allowed_bundles' => array(
        'alumnus_person' => -1,
        'catering_food_by_day' => -1,
        'contacts' => 'contacts',
        'contacts_department' => -1,
        'description' => -1,
        'jobs' => -1,
        'reception_time' => -1,
        'subpage' => -1,
        'table' => -1,
      ),
      'bundle_weights' => array(
        'alumnus_person' => 2,
        'catering_food_by_day' => 3,
        'contacts' => 4,
        'contacts_department' => 5,
        'description' => 6,
        'jobs' => 7,
        'reception_time' => 8,
        'subpage' => 9,
        'table' => 10,
      ),
      'default_edit_mode' => 'open',
      'entity_translation_sync' => FALSE,
      'title' => 'Kontakt',
      'title_multiple' => 'Kontakte',
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 0,
      'module' => 'paragraphs',
      'settings' => array(),
      'type' => 'paragraphs_embed',
      'weight' => 54,
    ),
  );
  $field_instances['node-content_page-field_contacts'] = array(
    'bundle' => 'event',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'paragraphs',
        'settings' => array(
          'view_mode' => 'full',
        ),
        'type' => 'paragraphs_view',
        'weight' => 14,
      ),
      'teaser' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 0,
      ),
    ),
    'entity_type' => 'node',
    'field_name' => 'field_contacts',
    'label' => 'Kontaktid',
    'required' => 0,
    'settings' => array(
      'add_mode' => 'button',
      'allowed_bundles' => array(
        'alumnus_person' => -1,
        'catering_food_by_day' => -1,
        'contacts' => 'contacts',
        'contacts_department' => -1,
        'description' => -1,
        'jobs' => -1,
        'reception_time' => -1,
        'subpage' => -1,
        'table' => -1,
      ),
      'bundle_weights' => array(
        'alumnus_person' => 2,
        'catering_food_by_day' => 3,
        'contacts' => 4,
        'contacts_department' => 5,
        'description' => 6,
        'jobs' => 7,
        'reception_time' => 8,
        'subpage' => 9,
        'table' => 10,
      ),
      'default_edit_mode' => 'open',
      'entity_translation_sync' => FALSE,
      'title' => 'Kontakt',
      'title_multiple' => 'Kontakte',
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 0,
      'module' => 'paragraphs',
      'settings' => array(),
      'type' => 'paragraphs_embed',
      'weight' => 54,
    ),
  );
  // Translatables
  // Included for use with string extractors like potx.
  t('Kontaktid');

  foreach ($field_bases as $field) {
    $field_test = field_info_field($field['field_name']);
    if (empty($field_test)) {
      field_create_field($field);
    }
  }

  foreach ($field_instances as $field_instance) {
    $instance = field_info_instance($field_instance['entity_type'], $field_instance['field_name'], $field_instance['bundle']);
    if (!$instance) {
      field_create_instance($field_instance);
    }
  }
  return TRUE;
}

