<?php
// use function GuzzleHttp\json_decode;

module_load_include('inc', 'hitsa_locations', 'includes/hitsa_locations.views');

/*
 * Implements hook_node_info().
 */
function hitsa_locations_node_info()
{
  return array(
    'contact_location' => array(
      'name' => t('Location'),
      'base' => 'contact_location',
      'description' => t('Location data.'),
      'has_title' => true,
      'title_label' => t('Name'),
    ),
  );
}

function hitsa_locations_block_info()
{
  $blocks['hitsa_locations'] = array(
    'info' => t('HITSA Locations'),
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => 'contact',
    'region' => 'sidebar_right',
    'status' => "1",
  );

  $blocks['hitsa_locations_primary'] = array(
    'info' => t('HITSA Locations Primary (mobile)'),
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => 'contact',
    'region' => 'content',
    'status' => "1",
    'weight' => -100,
  );

  return $blocks;
}

function hitsa_locations_theme()
{
  $items['locations_block'] = array(
    'template' => 'hitsa-locations-block',
    'path' => drupal_get_path('module', 'hitsa_locations') . '/templates',
    'variables' => array(
      'locations' => null,
      'type' => null,
    ),
  );
  return $items;
}

function hitsa_locations_block_content($type = 'primary')
{
  // Add location block data
  $locations = array();
  $nids_array = views_get_view_result('hitsa_locations', 'locations_sort');
  if (!empty($nids_array)) {
    $nids = array();
    foreach ($nids_array as $n) {
      $nids[] = $n->nid;
    }
    if ($type === 'primary') {
      $first_nid = reset($nids);
      $locations = array(node_load($first_nid));
      if (!empty($locations)) {
        $locations_address = null;
        foreach ($locations as $location_key => $location) {

          if (!empty($location->field_hitsa_place_tooltip)) {
            $tooltip = $location->field_hitsa_place_tooltip['und'][0]['value'];
          }
          $coordinates = variable_get('place_' . $location->nid . '_map');
          $coordinates = json_decode($coordinates);
          if (!empty($coordinates->addresses)) {
            if (!empty($coordinates->addresses[0])) {
              if (!empty($coordinates->addresses[0]->viitepunkt_x)) {
                $x = $coordinates->addresses[0]->viitepunkt_x;
                $y = $coordinates->addresses[0]->viitepunkt_y;
                if (!empty($x) && !empty($y)) {

                  $locations[$location_key]->full_map = '

        <div id="map_' . $location->nid . '" class="dg-mapframe map-wrapper map" style="height:100%; width:100%" ></div>
<script>
  Dogis.Map.Containers["map_' . $location->nid . '"] = new Dogis.Map(document.getElementById(
    "map_' . $location->nid . '"), {
    "app": "maainfo",
    // "bookmark": "CTQDX8Gj",
    "proxy": "https://xgis.maaamet.ee/xgis2/mod",
    "plugin": true,
    "params": {
      // "aadress": "L. Koidula tn 1, Rakvere linn, Lääne-Viru maakond",
      // "searchid": "KATASTRIYKSUS",
      "adfit": 1,
      "adshow": 1,
      "punkt": "' . $x . ', ' . $y . '",
      "moot": 1000,
      "tooltip": "' . $tooltip . '",
      "OTSINGUVALJANIMI": "kaaas",
    "components": {
      "navigation": {
        "settings": {
          "hidden": true,
        }
      },
      "scalebar": {
        "settings": {
          "hidden": true,
        }
      }
    },
    }
  })
</script>';
                }
              }
            }
          }
        }
      }
      return theme('locations_block', array('locations' => $locations, 'type' => 'primary'));
    } else {
      $locations = node_load_multiple($nids);

      if (!empty($locations)) {
        $locations_address = null;
        foreach ($locations as $location_key => $location) {
          if(!empty( $location->field_hitsa_place_tooltip)){
            $tooltip = $location->field_hitsa_place_tooltip['und'][0]['value'];
          }
          if(!empty( $location->field_hitsa_place_zoom)){
            $zoomlevel = $location->field_hitsa_place_zoom['und'][0]['value'];
          }
          else{
            $zoomlevel=1000;
          }
          $coordinates = variable_get('place_' . $location->nid . '_map');
          $coordinates = json_decode($coordinates);
          if(!empty($coordinates->addresses)){
            if(!empty($coordinates->addresses[0])){
              if(!empty($coordinates->addresses[0]->viitepunkt_x)){
                $x = $coordinates->addresses[0]->viitepunkt_x;
                $y = $coordinates->addresses[0]->viitepunkt_y;
                if(!empty($x) && !empty($y)){

                  $locations[$location_key]->full_map = '<iframe height="300" width="100%" src="https://xgis.maaamet.ee/xgis2/page/app/maainfo?punkt='.$x.','.$y.'&moot='.$zoomlevel.'&tooltip='.$tooltip.'"></iframe>';

                }
              }
            }
          }

        }
      }
      return theme('locations_block', array('locations' => $locations, 'type' => 'secondary'));
    }

  } else {
    return '';
  }
}

function hitsa_locations_block_view($delta = '')
{
  $output = array();
  switch ($delta) {
    case 'hitsa_locations':
      $output = array('subject' => null, 'content' => hitsa_locations_block_content('secondary'));
      break;
    case 'hitsa_locations_primary':
      $output = array('subject' => null, 'content' => hitsa_locations_block_content());
      break;
  }
  return $output;
}

/*
 * Implements hook_form().
 */
function contact_location_form($node, $form_state)
{
  return node_content_form($node, $form_state);
}

/**
 * Implements hook_node_view().
 */
function hitsa_locations_node_view($node, $view_mode, $langcode)
{
  global $user;
  // Restrict access to logo node full page view.
  if ($view_mode == 'full'
    && arg(0) == 'node'
    && arg(1) == $node->nid
    && $node->type === 'location'
    && !user_access('administer content', $user)) {
    // Redirect user to front page.
    drupal_goto();
  }
}
