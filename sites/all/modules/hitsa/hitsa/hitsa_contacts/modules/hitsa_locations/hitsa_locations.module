<?php

module_load_include('inc', 'hitsa_locations', 'includes/hitsa_locations.views');

/*
 * Implements hook_node_info().
 */
function hitsa_locations_node_info()
{
  return array(
    'contact_location' => array(
      'name' => t('Location'),
      'base' => 'contact_location',
      'description' => t('Location data.'),
      'has_title' => true,
      'title_label' => t('Name'),
    ),
  );
}

function hitsa_locations_block_info()
{
  $blocks['hitsa_locations'] = array(
    'info' => t('HITSA Locations'),
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => 'contact',
    'region' => 'sidebar_right',
    'status' => "1",
  );

  $blocks['hitsa_locations_primary'] = array(
    'info' => t('HITSA Locations Primary (mobile)'),
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => 'contact',
    'region' => 'content',
    'status' => "1",
    'weight' => -100,
  );

  return $blocks;
}

function hitsa_locations_theme()
{
  $items['locations_block'] = array(
    'template' => 'hitsa-locations-block',
    'path' => drupal_get_path('module', 'hitsa_locations') . '/templates',
    'variables' => array(
      'locations' => null,
      'type' => null,
    ),
  );
  return $items;
}

function hitsa_locations_block_content($type = 'primary')
{
  // Add location block data
  $locations = array();
  $nids_array = views_get_view_result('hitsa_locations', 'locations_sort');
  if (!empty($nids_array)) {
    $nids = array();
    foreach ($nids_array as $n) {
      $nids[] = $n->nid;
    }
    if ($type === 'primary') {
      $first_nid = reset($nids);
      $locations = array(node_load($first_nid));
      if (!empty($locations)) {
        $locations_address = null;
        foreach ($locations as $location_key => $location) {
          if (!empty($location->location_coordinates)) {
            $lat = '';
            $lon = '';
            $lat = $location->location_coordinates['und'][0]['lat'];
            $lon = $location->location_coordinates['und'][0]['lng'];
            $options['language'] = 'et';
            module_load_include('inc', 'geocoder', 'google');
            $actual_address = geocoder_reverse_google($lat, $lon, $options);
            if (!empty($actual_address)) {
              $actual_address = $actual_address->address;
              $address_link = url('https://www.google.com/maps/search/', array('query' => array('api' => 1, 'query' => $actual_address)));
              $locations[$location_key]->address_link = $address_link;
            }

          }
        }
      }
      return theme('locations_block', array('locations' => $locations, 'type' => 'primary'));
    } else {
      $locations = node_load_multiple($nids);
      if (!empty($locations)) {
        $locations_address = null;
        foreach ($locations as $location_key => $location) {
          if (!empty($location->location_coordinates)) {
            $lat = '';
            $lon = '';
            $lat = $location->location_coordinates['und'][0]['lat'];
            $lon = $location->location_coordinates['und'][0]['lng'];
            $options['language'] = 'et';
            module_load_include('inc', 'geocoder', 'google');
            $actual_address = geocoder_reverse_google($lat, $lon, $options);
            if (!empty($actual_address)) {
              $actual_address = $actual_address->address;
              $address_link = url('https://www.google.com/maps/search/', array('query' => array('api' => 1, 'query' => $actual_address)));
              $locations[$location_key]->address_link = $address_link;
            }

          }
        }
      }
      return theme('locations_block', array('locations' => $locations, 'type' => 'secondary'));
    }

  } else {
    return '';
  }
}

function hitsa_locations_block_view($delta = '')
{
  $output = array();
  switch ($delta) {
    case 'hitsa_locations':
      $output = array('subject' => null, 'content' => hitsa_locations_block_content('secondary'));
      break;
    case 'hitsa_locations_primary':
      $output = array('subject' => null, 'content' => hitsa_locations_block_content());
      break;
  }
  return $output;
}

/*
 * Implements hook_form().
 */
function contact_location_form($node, $form_state)
{
  return node_content_form($node, $form_state);
}

/**
 * Implements hook_node_view().
 */
function hitsa_locations_node_view($node, $view_mode, $langcode)
{
  global $user;
  // Restrict access to logo node full page view.
  if ($view_mode == 'full'
    && arg(0) == 'node'
    && arg(1) == $node->nid
    && $node->type === 'location'
    && !user_access('administer content', $user)) {
    // Redirect user to front page.
    drupal_goto();
  }
}