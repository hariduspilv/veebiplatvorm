<?php
    /**
     * @file
     * Taksonoomia loogika
     * 
     * 
     * 
     * Loome Sonastikule valjad
     */
    function hitsa_areas_of_study_create_fields($voc_name) {
      $field_name = 'body';
      ////////Laeme valja///////////
      $field = field_info_field($field_name);
      if (!$field) {
        $field = array(
          'field_name' => $field_name,
          'active' => 1,
          'cardinality' => 1,
          'deleted' => 0,
          'entity_types' => array(
            0 => 'node',
          ),
          'field_name' => 'body',
          'indexes' => array(
            'format' => array(
              0 => 'format',
            ),
          ),
          'locked' => 0,
          'module' => 'text',
          'settings' => array(),
          'translatable' => 0,
          'type' => 'text_with_summary',
        );
        $field = field_create_field($field);
      }
      $instances[] = array(
        'bundle' => 'field_of_study',
        'default_value' => NULL,
        'deleted' => 0,
        'description' => '',
        'display' => array(
          'default' => array(
            'label' => 'hidden',
            'module' => 'text',
            'settings' => array(),
            'type' => 'text_default',
            'weight' => 0,
          ),
          'teaser' => array(
            'label' => 'hidden',
            'module' => 'text',
            'settings' => array(
              'trim_length' => 600,
            ),
            'type' => 'text_summary_or_trimmed',
            'weight' => 0,
          ),
        ),
        'entity_type' => 'node',
        'field_name' => 'body',
        'label' => st('Body'),
        'required' => FALSE,
        'settings' => array(
          'display_summary' => TRUE,
          'text_processing' => 1,
          'user_register_form' => FALSE,
        ),
        'widget' => array(
          'module' => 'text',
          'settings' => array(
            'rows' => 20,
            'summary_rows' => 5,
          ),
          'type' => 'text_textarea_with_summary',
          'weight' => 1,
        ),
        );
        
        $field_name = 'field_subjects';
        
        $field = field_info_field($field_name);
        if (!$field) {
          $field = array(
            'field_name' => $field_name,
            'active' => 1,
            'cardinality' => -1,
            'deleted' => 0,
            'entity_types' => array(),
            'field_name' => 'field_subjects',
            'indexes' => array(
              'target_id' => array(
                0 => 'target_id',
              ),
            ),
            'locked' => 0,
            'module' => 'entityreference',
            'settings' => array(
              'handler' => 'base',
              'handler_settings' => array(
                'behaviors' => array(
                  'views-select-list' => array(
                    'status' => 0,
                  ),
                ),
                'sort' => array(
                  'type' => 'none',
                ),
                'target_bundles' => array(
                  'subject' => 'subject',
                ),
              ),
              'target_type' => 'node',
            ),
            'translatable' => 0,
            'type' => 'entityreference',
            ); 
            $field = field_create_field($field); 
        }
        $instances[]=array(
          'bundle' => 'field_of_study',
          'default_value' => NULL,
          'deleted' => 0,
          'description' => '',
          'display' => array(
            'default' => array(
              'label' => 'above',
              'module' => 'entityreference',
              'settings' => array(
                'links' => 1,
                'use_content_language' => 1,
                'view_mode' => 'full',
              ),
              'type' => 'entityreference_entity_view',
              'weight' => 2,
            ),
            'teaser' => array(
              'label' => 'above',
              'settings' => array(),
              'type' => 'hidden',
              'weight' => 0,
            ),
          ),
          'entity_type' => 'node',
          'field_name' => 'field_subjects',
          'label' => st('Subjects'),
          'required' => 0,
          'settings' => array(
            'user_register_form' => FALSE,
          ),
          'widget' => array(
            'active' => 1,
            'module' => 'entityreference',
            'settings' => array(
              'match_operator' => 'CONTAINS',
              'path' => '',
              'size' => 60,
            ),
            'type' => 'entityreference_autocomplete_tags',
            'weight' => 5,
          ),
          );
          $field_name = 'field_content_picture';
          $field = field_info_field($field_name);
          
          if (!$field) {
            $field = array(
                'active' => 1,
                'cardinality' => -1,
                'deleted' => 0,
                'entity_types' => array(),
                'field_name' => 'field_content_picture',
                'indexes' => array(
                  'fid' => array(
                    0 => 'fid',
                  ),
                ),
                'locked' => 0,
                'module' => 'image',
                'settings' => array(
                  'default_image' => 0,
                  'uri_scheme' => 'public',
                ),
                'translatable' => 0,
                'type' => 'image',
              );
            $field = field_create_field($field);
          }
          $instances[] = array(
            'bundle' => 'field_of_study',
            'deleted' => 0,
            'description' => '',
            'display' => array(
              'default' => array(
                'label' => 'above',
                'module' => 'image',
                'settings' => array(
                  'image_link' => '',
                  'image_style' => '',
                ),
                'type' => 'image',
                'weight' => 1,
              ),
              'teaser' => array(
                'label' => 'above',
                'settings' => array(),
                'type' => 'hidden',
                'weight' => 0,
              ),
            ),
            'entity_type' => 'node',
            'field_name' => 'field_content_picture',
            'label' => st('Sisu pilt'),
            'required' => 0,
            'settings' => array(
              'alt_field' => 0,
              'default_image' => 0,
              'file_directory' => '',
              'file_extensions' => 'png gif jpg jpeg',
              'max_filesize' => '',
              'max_resolution' => '',
              'min_resolution' => '',
              'title_field' => 0,
              'user_register_form' => FALSE,
            ),
            'widget' => array(
              'active' => 1,
              'module' => 'media',
              'settings' => array(
                'allowed_schemes' => array(
                  'public' => 'public',
                ),
                'allowed_types' => array(
                  'audio' => 0,
                  'document' => 0,
                  'image' => 'image',
                  'video' => 0,
                ),
                'browser_plugins' => array(
                  'media_browser_plus--media_browser_my_files' => 0,
                  'media_browser_plus--media_browser_thumbnails' => 'media_browser_plus--media_browser_thumbnails',
                  'media_default--media_browser_1' => 0,
                  'media_default--media_browser_my_files' => 0,
                  'upload' => 'upload',
                ),
              ),
              'type' => 'media_generic',
              'weight' => 4,
            ),
          );
          
        $field_name = 'field_pdf';
        $field = field_info_field($field_name);
        if (!$field) {
          $field = array(
            'active' => 1,
            'cardinality' => -1,
            'deleted' => 0,
            'entity_types' => array(),
            'field_name' => 'field_pdf',
            'indexes' => array(
              'fid' => array(
                0 => 'fid',
              ),
            ),
            'locked' => 0,
            'module' => 'file',
            'settings' => array(
              'display_default' => 0,
              'display_field' => 0,
              'uri_scheme' => 'public',
            ),
            'translatable' => 0,
            'type' => 'file',
            );
          $field = field_create_field($field);
        }
        $instances[] = array(
          'bundle' => 'field_of_study',
          'deleted' => 0,
          'description' => '',
          'display' => array(
            'default' => array(
              'label' => 'above',
              'module' => 'file',
              'settings' => array(),
              'type' => 'file_default',
              'weight' => 1,
            ),
            'teaser' => array(
              'label' => 'above',
              'settings' => array(),
              'type' => 'hidden',
              'weight' => 0,
            ),
          ),
          'entity_type' => 'node',
          'field_name' => 'field_pdf',
          'label' => 'PDF',
          'required' => 0,
          'settings' => array(
            'description_field' => 0,
            'file_directory' => 'aine_dokumendid',
            'file_extensions' => 'txt pdf doc',
            'max_filesize' => '',
            'user_register_form' => FALSE,
          ),
          'widget' => array(
            'active' => 1,
            'module' => 'media',
            'settings' => array(
              'allowed_schemes' => array(
                'public' => 'public',
              ),
              'allowed_types' => array(
                'audio' => 0,
                'document' => 0,
                'image' => 'image',
                'video' => 0,
              ),
              'browser_plugins' => array(
                'media_browser_plus--media_browser_my_files' => 0,
                'media_browser_plus--media_browser_thumbnails' => 'media_browser_plus--media_browser_thumbnails',
                'media_default--media_browser_1' => 0,
                'media_default--media_browser_my_files' => 0,
                'upload' => 'upload',
              ),
            ),
            'type' => 'media_generic',
            'weight' => 4,
          ),
          );
          
        ////// Väli millega määrata õppesuunale päis///////////////////
        // Paneme paika masina nime
        $field_name = 'area_header';
        if (field_info_field($field_name)) {
            $field = field_info_field($field_name);
        } else {
            $field = array(
            'active' => 1,
            'cardinality' => -1,
            'deleted' => 0,
            'entity_types' => array(),
            'field_name' => $field_name,
            'indexes' => array(
              'tid' => array(
                0 => 'tid',
              ),
            ),
            'locked' => 0,
            'module' => 'taxonomy',
            'settings' => array(
              'allowed_values' => array(
                0 => array(
                  'vocabulary' => 'content_information',
                  'parent' => 0,
                ),
              ),
              'entity_translation_sync' => false,
    
            ),
            'translatable' => 1,
            'type' => 'taxonomy_term_reference',
            );
            $field = field_create_field($field);
        }
        $instances[] = array(
          'bundle' => 'field_of_study',
          'default_value' => null,
          'deleted' => 0,
          'description' => 'Sellega saab määrata, milline päis tekib',
          'entity_type' => 'node',
          'field_name' => $field['field_name'],
          'label' => st('Header content tag'),
          'required' => 0,
          'settings' => array(
            'entity_translation_sync' => false,
            'user_register_form' => false,
          ),
          'widget' => array(
            'active' => 0,
            'module' => 'taxonomy',
            'settings' => array(
              'autocomplete_path' => 'taxonomy/autocomplete',
              'size' => 60,
            ),
            'type' => 'taxonomy_autocomplete',
            'weight' => -3,
          ),
        
          
          );
         //  Create an instance of the field and bind it to the bundle.
        foreach ($instances as $instance) {
            field_create_instance($instance);
        }
    }