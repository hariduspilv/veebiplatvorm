<?php

module_load_include('inc', 'hitsa_content_page', 'includes/hitsa_content_page.theme');
module_load_include('inc', 'hitsa_content_page', 'includes/hitsa_content_page.views');

function hitsa_content_page_menu() {
  $items['api/content'] = array(
    'title' => 'Articles API',
    'page callback' => 'hitsa_content_filter',
    'access arguments' => array('access content'),
  );
  
  $items['admin/content/content-pages'] = array(
    'title' => 'SisulehekÃ¼ljed',
    'access arguments' => array('administer nodes'),
    'type' => MENU_LOCAL_TASK,
  );
  
  $items['services'] = array(
    'title' => 'Teenused',
    'page callback' => 'hitsa_content_page_service_page_view',
    'access arguments' => array('access content'),
  );
  
  return $items;
}

/**
 * Implements hook_node_info()
 */
function hitsa_content_page_node_info() {
  return array(
    'content_page' => array(
      'name' => t('Content page'),
      'base' => 'content_page',
      'description' => t('A multipurpose content page.'),
      'has_title' => TRUE,
      'title_label' => t('Title'),
    ),
  );
}

/**
 * Implement hook_form()
 */
function content_page_form($node, $form_state) {
  return node_content_form($node, $form_state);
}

/**
 * Implement hook_form_alter()
 */
function hitsa_content_page_form_alter(&$form, &$form_state, $form_id) {
  global $user;

  if($form_id === 'views_exposed_form' && 
  $form['#id'] === 'views-exposed-form-administration-content-pages-system-content-pages') {
    if(!empty($form['cp_type_value'])) {
      foreach($form['cp_type_value']['#options'] as $key => $option) {
        if($key === 'All') continue;
        $form['cp_type_value']['#options'][$key] = t($option);
      }
    }
  }
  if($form_id === 'content_page_node_form') {
    
    if($user->uid !== '1') {
      $form['cp_display_style']['#access'] = FALSE;
      //$form['cp_type']['#access'] = FALSE;
    }
    
    if(isset($form['cp_type'])) { // Set field conditions
      // Image is required
      $form['#validate'][] = 'hitsa_content_page_required_fields';
      if(!empty($form['cp_subpages'])) {
        $form['cp_subpages']['#states'] = array(
          'visible' => array(
            ':input[name^="cp_type"]' => array(
              array('value' => 'cp_tabbed'),
            ),
          ),
        );
        if(!empty($form['cp_subpages'][LANGUAGE_NONE][0])) {
          $form['cp_subpages'][LANGUAGE_NONE][0]['subpage_title']['#states'] = array(
            'visible' => array(
              ':input[name^="cp_type"]' => array(
                array('value' => 'cp_tabbed'),
              ),
            ),
          );
        }
      }
      if(!empty($form['cinfo_homepage_url'])) {
        $form['cinfo_homepage_url']['#states'] = array(
          'visible' => array(
            ':input[name^="cp_type"]' => array(
              'value' => 'cp_service',
            ),
          ),
        );
      }
      if(!empty($form['cinfo_contact_person'])) {
        $form['cinfo_contact_person']['#states'] = array(
          'visible' => array(
            ':input[name^="cp_type"]' => array(
              'value' => 'cp_service',
            ),
          ),
        );
      }
      if(!empty($form['cinfo_e_mail'])) {
        $form['cinfo_e_mail']['#states'] = array(
          'visible' => array(
            ':input[name^="cp_type"]' => array(
              'value' => 'cp_service',
            ),
          ),
        );
      }
      if(!empty($form['cinfo_phone_nr'])) {
        $form['cinfo_phone_nr']['#states'] = array(
          'visible' => array(
            ':input[name^="cp_type"]' => array(
              'value' => 'cp_service',
            ),
          ),
        );
      }
      if(!empty($form['cinfo_address'])) {
        $form['cinfo_address']['#states'] = array(
          'visible' => array(
            ':input[name^="cp_type"]' => array(
              'value' => 'cp_service',
            ),
          ),
        );
      }
      if(!empty($form['cp_contacts'])) {
        $form['cp_contacts']['#states'] = array(
          'visible' => array(
            ':input[name^="cp_type"]' => array(
              'value' => 'cp_contacts',
            ),
          ),
        );
      }
      if(!empty($form['cp_image'])) {
        $form['cp_image']['#states'] = array(
          'visible' => array(
            ':input[name^="cp_type"]' => array(
              array('value' => 'cp_tabbed'),
              array('value' => 'cp_service'),
              array('value' => 'cp_specialities'),
            ),
          ),
          'required' => array(
            ':input[name^="cp_type"]' => array(
              array('value' => 'cp_tabbed'),
              array('value' => 'cp_service'),
              array('value' => 'cp_specialities'),
            ),
          ),
        );
      }
      if(!empty($form['body'])) {
        $form['body']['#states'] = array(
          'invisible' => array(
            ':input[name^="cp_type"]' => array(
              'value' => 'cp_contacts',
            ),
          ),
        );
      }
      if(!empty($form['field_school_selections'])) {
        $form['field_school_selections']['#states'] = array(
          'visible' => array(
            ':input[name^="cp_type"]' => array(
              'value' => 'cp_specialities',
            ),
          ),
          'required' => array(
            ':input[name^="cp_type"]' => array(
              'value' => 'cp_specialities',
            ),
          ),
        );
      }
      if(!empty($form['cp_display_style'])) {
        $form['cp_display_style']['#states'] = array(
          'invisible' => array(
            ':input[name^="cp_type"]' => array(
              'value' => 'cp_specialities',
            ),
          ),
        );
      }
      if(!empty($form['cp_service_type'])) {
        $form['cp_service_type']['#weight'] = $form['title']['#weight'] - 1 ;
        // Remove the empty option
        if(!empty($form['cp_service_type'][LANGUAGE_NONE]['#options']['_none'])) {
          unset($form['cp_service_type'][LANGUAGE_NONE]['#options']['_none']);
        }
        $form['cp_service_type']['#states'] = array(
          'visible' => array(
            ':input[name^="cp_type"]' => array(
              'value' => 'cp_service',
            ),
          ),
          'required' => array(
            ':input[name^="cp_type"]' => array(
              'value' => 'cp_specialities',
            ),
          ),
        );
      }
    }
    if(isset($form['body'])) {
      $form['body'][LANGUAGE_NONE][0]['summary']['#description'] = ''; // Hide summary description
    }
  }
}

function hitsa_content_page_required_fields($form, &$form_state) {
  // Specific CP type is set and image is not added.
  if(!empty($form_state['values']['cp_type']) 
  && in_array($form_state['values']['cp_type'][LANGUAGE_NONE][0]['value'], 
    array('cp_service', 'cp_tabbed', 'cp_specialities'))
  && $form_state['values']['cp_image'][LANGUAGE_NONE][0]['fid'] === 0
  ) {
    form_set_error('cp_image', 
  t('!name field is required.', array('!name' => $form['cp_image'][LANGUAGE_NONE][0]['#title'])));
  }
}

/*
* Add menu link to service nodes.
*/
function hitsa_content_page_node_insert($node) {
  if($node->type === 'content_page') {
    $emw_node = entity_metadata_wrapper('node', $node);
    $cp_type = $emw_node->cp_type->value();
    if($cp_type === 'cp_service' && $service_type = $emw_node->cp_service_type->value()) {
      $service_menu_mlid = variable_get('hitsa_' . $service_type . '_mlid');
      if($service_submenu = menu_link_load($service_menu_mlid)) {
        // Create new menu link
        $menu_link = array();
        $menu_link['link_path'] = 'node/' . $node->nid;
        $menu_link['link_title'] = $node->title;
        $menu_link['plid'] = $service_menu_mlid;
        $menu_link['menu_name'] = 'hitsa-main-menu';
        menu_link_save($menu_link);
      }
    }
  }
}

/*
* Update menu link to service nodes.
*/
function hitsa_content_page_node_update($node) {
  if($node->type === 'content_page') {
    $emw_node = entity_metadata_wrapper('node', $node);
    $cp_type = $emw_node->cp_type->value();
    if($cp_type === 'cp_service' && $service_type = $emw_node->cp_service_type->value()) {
      $service_menu_mlid = variable_get('hitsa_' . $service_type . '_mlid');
      if($service_submenu = menu_link_load($service_menu_mlid)) {
        if(!empty($node->menu['mlid'])) {
          // Node settings, change existings
          $node->menu['link_path'] = 'node/' . $node->nid;
          $node->menu['link_title'] = $node->title;
          $node->menu['plid'] = $service_menu_mlid;
          $node->menu['menu_name'] = 'hitsa-main-menu';
        }
      }
    }
  }
}

function hitsa_content_page_update_page_type($form, &$form_state) {
  return $form;
}

function hitsa_content_page_autocomplete($type) {
  $parameters = drupal_get_query_parameters();

  if(!empty($parameters['search'])) {
    $result = db_query('SELECT DISTINCT title FROM {node} n
      WHERE type = :type 
      AND status = 1
      AND title LIKE :search',
      array(
        ':type' => $type,
        ':search' => '%' . db_like($parameters['search']) . '%'
      )
    );
    
    $titles = $result->fetchCol();
    
    $autocomplete = (object) array(
      'label' => t('No results found!'),
      'list' => array(),
    );

    
    foreach($titles as $title) {
      $autocomplete->list[] = (object) array('title' => $title);
    }
    
    drupal_json_output($autocomplete);
  }
}

function hitsa_content_page_query_content($q = array(), $count = FALSE) {
  $query = new EntityFieldQuery();
  
  $parameters = _hitsa_content_page_set_query_parameters($q);
  
  foreach($parameters as $parameter) {
    $query->{$parameter['type']}(...$parameter['arguments']);
  }

  $output = array();
  
  $output['content'] = $query->execute();
  
  if($count) {
    $output['count'] = $query->range(0, PHP_INT_MAX)->count()->execute();
  }

  return $output;
}

function _hitsa_content_page_set_query_parameters($query = array()) {
  global $language;

  $parameters = array();
  
  // Order by
  if(!empty($query['order_by'])) {
    $parameters[] = array(
     'type' => 'propertyOrderBy',
     'arguments' => array($query['order_by']['parameter'], $query['order_by']['direction']),
    );
  }
  
  // Status
  if(!empty($query['status'])) {
    $parameters[] = array(
     'type' => 'propertyCondition',
     'arguments' => array('status', $query['status']),
    );
  }
  
  // CP type
  if(!empty($query['cp_type'])) {
    $parameters[] = array(
     'type' => 'fieldCondition',
     'arguments' => array('cp_type', 'value', $query['cp_type']),
    );
  }
  
  // Entity type
  if(!empty($query['entity_type'])) {
    $parameters[] = array(
     'type' => 'entityCondition',
     'arguments' => array('entity_type', $query['entity_type']),
    );
  }
  
  // Bundle
  if(!empty($query['bundle'])) {
    $parameters[] = array(
     'type' => 'entityCondition',
     'arguments' => array('bundle', $query['bundle']),
    );
  }
  
  // Language
  $parameters[] = array(
    'type' => 'propertyCondition',
    'arguments' => array('language', $language->language),
  );
  
  // Date
  if(!empty($query['date']) && preg_match("/\d{2}\/\d{2}\/\d{4} - \d{2}\/\d{2}\/\d{4}/", $query['date']) === 1) {
    $date_range = explode(" - ", $query['date']);
    $date_from = date_create_from_format("d/m/Y H:i", $date_range[0] . ' 00:00');
    $date_to = date_create_from_format("d/m/Y H:i", $date_range[1] . ' 23:59');
    
    $parameters[] = array(
      'type' => 'propertyCondition',
      'arguments' => array('created', $date_from->getTimestamp(), '>='),
    );
    
    $parameters[] = array(
      'type' => 'propertyCondition',
      'arguments' => array('created', $date_to->getTimestamp(), '<='),
    );
  }
  
  // Title
  if(!empty($query['title'])) {
    $parameters[] = array(
      'type' => 'propertyCondition',
      'arguments' => array('title', '%' . $query['title'] . '%', 'LIKE'),
    );
  }
  
  // Page / Range
  if(!empty($query['page'])) {
    $page_range = ($query['page'] - 1) * 12;

    $parameters[] = array(
      'type' => 'range',
      'arguments' => array($page_range, $page_range + 12),
    );
  } else if(!empty($query['range'])) {
    
    $parameters[] = array(
      'type' => 'range',
      'arguments' => array($query['range'][0], $query['range'][1]),
    );
  }
  
  // Pager
  if(!empty($query['pager'])) {
    $parameters[] = array(
      'type' => 'pager',
      'arguments' => array($query['pager']),
    );
  }
  
  // Academic year
  if(!empty($query['category'])) {
    $academic_years = explode(',', $query['category']);
    
    foreach($academic_years as $academic_year) {
      if($academic_year === 'all') {
        $academic_years = NULL;
        break;
      }
    }
    if(!empty($academic_years)) {
      $parameters[] = array(
        'type' => 'fieldCondition',
        'arguments' => array('academic_year', 'tid', $academic_years, 'IN'),
      );
    }
  }
  
  // Type
  if(!empty($query['article_type'])) {
    $parameters[] = array(
      'type' => 'fieldCondition',
      'arguments' => array('article_type', 'value', $query['article_type']),
    );
  }
  
  // Exclude
  if(!empty($query['nids_not_in'])) {
    $parameters[] = array(
      'type' => 'entityCondition',
      'arguments' => array('entity_id', $query['nids_not_in'], 'NOT IN'),
    );
  }

  return $parameters;
}

function hitsa_content_page_get_more_services_block_nodes($variables) {
  $query = array();
  
  $query['entity_type'] = 'node';
  $query['bundle'] = 'content_page';
  
  // Show services.
  $query['cp_type'] = 'cp_service';
  
  // Exclude current node
  $query['nids_not_in'] = array($variables['nid']);
  
  // Query up to 6 nodes
  $query['range'] = array(0, 6);
  
  if($result = hitsa_content_page_query_content($query)) {
    $service_nids = !empty($result['content']) ? $result['content'] : NULL;
  }
  
  if(!empty($service_nids['node'])) {
    $services = node_load_multiple(array_keys($service_nids['node']));
  }
  
  return !empty($services) ? $services : array();
}