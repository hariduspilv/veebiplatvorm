<?php


/*
 * Implements hook_install.
 */
function hitsa_catering_install()
{
    node_types_rebuild();
    $types = node_type_get_types();

    hitsa_catering_add_custom_vocubularies();
    hitsa_catering_add_custom_taxonomy_fields();
    hitsa_catering_add_custom_paragraphs_bundle();

    hitsa_catering_add_custom_paragraphs_fields();
    hitsa_catering_add_custom_node_fields();

    hitsa_catering_add_custom_field_groups();
}


/*
 * Implements hook_uninstall.
 */
function hitsa_catering_uninstall()
{
    $node_type = 'catering';
    $paragraphs_bundle = 'catering_food_by_day';
    $contact_types = array('contact');

    $sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
    $result = db_query($sql, array(':type' => $node_type));
    $node_ids = array();
    foreach ($result as $row) {
        $node_ids[] = $row->nid;
    }


    // Delete fields and vocabularies
    hitsa_catering_delete_custom_node_fields();
    hitsa_catering_delete_custom_paragraphs_fields();
//  field_purge_batch(500);
    hitsa_catering_delete_custom_vocabularies();
    hitsa_catering_delete_vocabulary_fields();
    node_delete_multiple($node_ids); // Delete all catering nodes
    node_type_delete($node_type); // Delete contact content type
    paragraphs_bundle_delete($paragraphs_bundle); // Delete paragraphs bundle
}


/*
 * HITSA catering vocabulary
 */
function _hitsa_catering_vocabularies()
{
    $vocabularies = array();

    $vocabularies['catering_food_type'] = array(
        'vocabulary' => (object)array(
            'name' => t('Catering food types'),
            'description' => t('Different catering food types'),
            'machine_name' => 'catering_food_type',
            'language' => 'und',
            'i18n_mode' => 1,
        ),
        'terms' => array(
            (object)array(
                'name' => t('School meals'),
                'language' => 'en',

            ),
            (object)array(
                'name' => t('Vegetarian food'),
                'language' => 'en',
            ),
            (object)array(
                'name' => t('Lactose free'),
                'language' => 'en',
            ),
        ),
    );
    $vocabularies['catering_provider'] = array(
        'vocabulary' => (object)array(
            'name' => t('Catering provider'),
            'description' => t('Catering company information'),
            'machine_name' => 'catering_provider',
            'hierarchy' => 0,
            'module' => 'taxonomy',
            'weight' => 0,
            'language' => 'und',
            'i18n_mode' => 0,
            'rdf_mapping' => array(
                'rdftype' => array(
                    0 => 'skos:ConceptScheme',
                ),
                'name' => array(
                    'predicates' => array(
                        0 => 'dc:title',
                    ),
                ),
                'description' => array(
                    'predicates' => array(
                        0 => 'rdfs:comment',
                    ),
                ),
            ),
        ),
    );
    $vocabularies['catering_food_subcategory'] = array(
        'vocabulary' => (object)array(
            'name' => 'Food subcategory',
            'machine_name' => 'catering_food_subcategory',
            'description' => '',
            'hierarchy' => 0,
            'module' => 'taxonomy',
            'weight' => 0,
            'language' => 'und',
            'i18n_mode' => 1,
            'rdf_mapping' => array(
                'rdftype' => array(
                    0 => 'skos:ConceptScheme',
                ),
                'name' => array(
                    'predicates' => array(
                        0 => 'dc:title',
                    ),
                ),
                'description' => array(
                    'predicates' => array(
                        0 => 'rdfs:comment',
                    ),
                ),
            ),
        ),
        'terms' => array(
            (object)array(
                'name' => t('Main dish'),
                'language' => 'en',
            ),
            (object)array(
                'name' => t('Dessert'),
                'language' => 'en',
            ),
        ),
    );
    return $vocabularies;
}

function hitsa_catering_add_custom_vocubularies()
{
    // Create vocabulary
    foreach (_hitsa_catering_vocabularies() as $v) {
        taxonomy_vocabulary_save($v['vocabulary']);

        $vocab = taxonomy_vocabulary_machine_name_load($v['vocabulary']->machine_name);
        if (!empty($v['terms']) && $vocab) {
            // Add generic terms
            foreach ($v['terms'] as $term) {
                $term->vid = $vocab->vid;
                taxonomy_term_save($term);
            }
        }
    }
}

function hitsa_catering_delete_custom_vocabularies()
{
    foreach (_hitsa_catering_vocabularies() as $v) {
        if (!empty($v['vocabulary'])) {
            $vocab = taxonomy_vocabulary_machine_name_load($v['vocabulary']->machine_name);
            taxonomy_vocabulary_delete($vocab->vid);
        }
    }
}


/*
 * HITSA catering paragraph type
 */
function hitsa_catering_add_custom_paragraphs_bundle()
{
    $bundle = new stdClass();
    $bundle->name = 'Food'; // user friendly label
    $bundle->bundle = 'catering_food_by_day'; // machine name
    $bundle->locked = 0;
    $status = paragraphs_bundle_save($bundle);
}

function _hitsa_catering_installed_paragraphs_fields()
{
    $field_bases = array();

    $field_bases['field_food_name'] = array(
        'active' => 1,
        'cardinality' => 1,
        'deleted' => 0,
        'entity_types' => array(),
        'field_name' => 'field_food_name',
        'indexes' => array(
            'format' => array(
                0 => 'format',
            ),
        ),
        'locked' => 0,
        'module' => 'text',
        'settings' => array(
            'max_length' => 255,
        ),
        'translatable' => 0,
        'type' => 'text',
    );

    $field_bases['field_food_subcategory'] = array(
        'active' => 1,
        'cardinality' => 1,
        'deleted' => 0,
        'entity_types' => array(),
        'field_name' => 'field_food_subcategory',
        'indexes' => array(
            'target_id' => array(
                0 => 'target_id',
            ),
        ),
        'locked' => 0,
        'module' => 'entityreference',
        'settings' => array(
            'entity_translation_sync' => false,
            'handler' => 'base',
            'handler_settings' => array(
                'behaviors' => array(
                    'views-select-list' => array(
                        'status' => 0,
                    ),
                ),
                'sort' => array(
                    'type' => 'none',
                ),
                'target_bundles' => array(
                    'food_subcategory' => 'catering_food_subcategory',
                ),
            ),
            'target_type' => 'taxonomy_term',
        ),
        'translatable' => 0,
        'type' => 'entityreference',
    );

    $field_bases['field_food_type'] = array(
        'active' => 1,
        'cardinality' => 1,
        'deleted' => 0,
        'entity_types' => array(),
        'field_name' => 'field_food_type',
        'indexes' => array(
            'target_id' => array(
                0 => 'target_id',
            ),
        ),
        'locked' => 0,
        'module' => 'entityreference',
        'settings' => array(
            'handler' => 'base',
            'handler_settings' => array(
                'behaviors' => array(
                    'views-select-list' => array(
                        'status' => 0,
                    ),
                ),
                'sort' => array(
                    'type' => 'none',
                ),
                'target_bundles' => array(
                    'catering_food_type' => 'catering_food_type',
                ),
            ),
            'target_type' => 'taxonomy_term',
        ),
        'translatable' => 0,
        'type' => 'entityreference',
    );

    return $field_bases;
}

function _hitsa_catering_installed_paragraphs_instances()
{
    $field_instances = array();

    $field_instances['paragraphs_item-catering_food_by_day-field_food_name'] = array(
        'bundle' => 'catering_food_by_day',
        'default_value' => null,
        'deleted' => 0,
        'description' => '',
        'display' => array(
            'default' => array(
                'label' => 'above',
                'module' => 'text',
                'settings' => array(),
                'type' => 'text_default',
                'weight' => 2,
            ),
            'paragraphs_editor_preview' => array(
                'label' => 'above',
                'settings' => array(),
                'type' => 'hidden',
                'weight' => 0,
            ),
        ),
        'entity_type' => 'paragraphs_item',
        'field_name' => 'field_food_name',
        'label' => 'Food name',
        'required' => 1,
        'settings' => array(
            'text_processing' => 0,
            'user_register_form' => false,
        ),
        'widget' => array(
            'active' => 1,
            'module' => 'text',
            'settings' => array(
                'size' => 60,
            ),
            'type' => 'text_textfield',
            'weight' => 0,
        ),
    );
    $field_instances['paragraphs_item-catering_food_by_day-field_food_subcategory'] = array(
        'bundle' => 'catering_food_by_day',
        'default_value' => null,
        'deleted' => 0,
        'description' => '',
        'display' => array(
            'default' => array(
                'label' => 'above',
                'module' => 'entityreference',
                'settings' => array(
                    'bypass_access' => false,
                    'link' => false,
                ),
                'type' => 'entityreference_label',
                'weight' => 3,
            ),
            'paragraphs_editor_preview' => array(
                'label' => 'above',
                'settings' => array(),
                'type' => 'hidden',
                'weight' => 0,
            ),
        ),
        'entity_type' => 'paragraphs_item',
        'field_name' => 'field_food_subcategory',
        'label' => 'Food subcategory',
        'required' => true,
        'settings' => array(
            'entity_translation_sync' => false,
            'user_register_form' => false,
        ),
        'widget' => array(
            'module' => 'options',
            'settings' => array(),
            'type' => 'options_select',
            'weight' => 2,
        ),
    );
    $field_instances['paragraphs_item-catering_food_by_day-field_food_type'] = array(
        'bundle' => 'catering_food_by_day',
        'default_value' => null,
        'deleted' => 0,
        'description' => '',
        'display' => array(
            'default' => array(
                'label' => 'above',
                'module' => 'entityreference',
                'settings' => array(
                    'bypass_access' => false,
                    'link' => false,
                ),
                'type' => 'entityreference_label',
                'weight' => 1,
            ),
            'paragraphs_editor_preview' => array(
                'label' => 'above',
                'settings' => array(),
                'type' => 'hidden',
                'weight' => 0,
            ),
        ),
        'entity_type' => 'paragraphs_item',
        'field_name' => 'field_food_type',
        'label' => 'Food type',
        'required' => 1,
        'settings' => array(
            'user_register_form' => false,
        ),
        'widget' => array(
            'active' => 1,
            'module' => 'options',
            'settings' => array(),
            'type' => 'options_select',
            'weight' => 1,
        ),
    );

    return $field_instances;
}

function hitsa_catering_add_custom_paragraphs_fields()
{
    foreach (_hitsa_catering_installed_paragraphs_fields() as $field) {
        field_create_field($field);
    }
    foreach (_hitsa_catering_installed_paragraphs_instances() as $field_instance) {
        $field_instance['entity_type'] = 'paragraphs_item';
        $field_instance['bundle'] = 'catering_food_by_day';
        field_create_instance($field_instance);
    }
}

function hitsa_catering_delete_custom_paragraphs_fields()
{
    foreach (array_keys(_hitsa_catering_installed_paragraphs_fields()) as $field) {
        //field_delete_field($field);
    }
    $instances = field_info_instances('paragraphs_item', 'catering_food_by_day');
    foreach ($instances as $instance_name => $field_instance) {
        field_delete_instance($field_instance);
    }
}


/*
 * HITSA catering node type
 */
function _hitsa_catering_installed_node_fields()
{
    $t = get_t();
    $field_bases = array();

    // Exported field_base: 'field_catering_provider'.
    $field_bases['field_catering_provider'] = array(
        'active' => 1,
        'cardinality' => 1,
        'deleted' => 0,
        'entity_types' => array(),
        'field_name' => 'field_catering_provider',
        'indexes' => array(
            'target_id' => array(
                0 => 'target_id',
            ),
        ),
        'locked' => 0,
        'module' => 'entityreference',
        'settings' => array(
            'handler' => 'base',
            'handler_settings' => array(
                'behaviors' => array(
                    'views-select-list' => array(
                        'status' => 0,
                    ),
                ),
                'sort' => array(
                    'type' => 'none',
                ),
                'target_bundles' => array(
                    'catering_provider' => 'catering_provider',
                ),
            ),
            'target_type' => 'taxonomy_term',
        ),
        'translatable' => 0,
        'type' => 'entityreference',
    );

    $field_bases['field_catering_monday'] = array(
        'field_name' => 'field_catering_monday',
        'module' => 'paragraphs',
        'label' => $t('Monday'),
        'type' => 'paragraphs',
        'active' => 1,
        'cardinality' => -1,
        'deleted' => 0,
        'entity_types' => array(),
        'indexes' => array(),
        'locked' => 0,
        'module' => 'paragraphs',
        'settings' => array(),
        'translatable' => 0,
    );

    $field_bases['field_catering_tuesday'] = array(
        'field_name' => 'field_catering_tuesday',
        'module' => 'paragraphs',
        'label' => $t('Tuesday'),
        'type' => 'paragraphs',
        'cardinality' => -1,
    );

    $field_bases['field_catering_wednesday'] = array(
        'field_name' => 'field_catering_wednesday',
        'module' => 'paragraphs',
        'label' => $t('Wednesday'),
        'type' => 'paragraphs',
        'cardinality' => -1,
    );

    $field_bases['field_catering_thursday'] = array(
        'field_name' => 'field_catering_thursday',
        'module' => 'paragraphs',
        'label' => $t('Thursday'),
        'type' => 'paragraphs',
        'cardinality' => -1,
    );

    $field_bases['field_catering_friday'] = array(
        'field_name' => 'field_catering_friday',
        'module' => 'paragraphs',
        'label' => $t('Friday'),
        'type' => 'paragraphs',
        'cardinality' => -1,
    );

    $field_bases['field_date'] = array(
        'entity_types' => array(),
        'field_name' => 'field_date',
        'label' => $t('Date'),
        'module' => 'date',
        'settings' => array(
            'cache_count' => 4,
            'cache_enabled' => 0,
            'granularity' => array(
                'day' => 'day',
                'hour' => 0,
                'minute' => 0,
                'month' => 'month',
                'second' => 0,
                'year' => 'year',
            ),
            'timezone_db' => '',
            'todate' => 'required',
            'tz_handling' => 'none',
        ),
        'translatable' => 0,
        'type' => 'datestamp',
    );
    // Exported field_base: 'field_catering_pictures'.
    $field_bases['field_catering_pictures'] = array(
        'active' => 1,
        'cardinality' => 2,
        'deleted' => 0,
        'entity_types' => array(),
        'field_name' => 'field_catering_pictures',
        'indexes' => array(
            'fid' => array(
                0 => 'fid',
            ),
        ),
        'locked' => 0,
        'module' => 'image',
        'settings' => array(
            'default_image' => 0,
            'entity_translation_sync' => array(
                0 => 'fid',
            ),
            'uri_scheme' => 'public',
        ),
        'translatable' => 0,
        'type' => 'image',
    );
    return $field_bases;
}

function _hitsa_catering_installed_node_instances()
{
    $t = get_t();
    $field_instances = array();

    $field_instances['field_date'] = array(
        'bundle' => 'catering',
        'deleted' => 0,
        'description' => '',
        'display' => array(
            'default' => array(
                'label' => 'above',
                'module' => 'date',
                'settings' => array(
                    'format_type' => 'long',
                    'fromto' => 'both',
                    'multiple_from' => '',
                    'multiple_number' => '',
                    'multiple_to' => '',
                    'show_remaining_days' => false,
                ),
                'type' => 'date_default',
                'weight' => 1,
            ),
            'teaser' => array(
                'label' => 'above',
                'settings' => array(),
                'type' => 'hidden',
                'weight' => 0,
            ),
        ),
        'entity_type' => 'node',
        'field_name' => 'field_date',
        'label' => $t('Date'),
        'required' => 0,
        'settings' => array(
            'default_value' => 'now',
            'default_value2' => 'same',
            'default_value_code' => '',
            'default_value_code2' => '',
            'user_register_form' => false,
        ),
        'widget' => array(
            'active' => 1,
            'module' => 'date',
            'settings' => array(
                'increment' => 15,
                'input_format' => 'd/m/Y',
                'input_format_custom' => '',
                'label_position' => 'above',
                'no_fieldset' => 0,
                'text_parts' => array(),
                'year_range' => '-3:+3',
            ),
            'type' => 'date_popup',
            'weight' => 3,
        ),
    );

    $field_instances['node-catering-field_catering_monday'] = array(
        'bundle' => 'catering',
        'default_value' => null,
        'description' => '',
        'display' => array(
            'default' => array(
                'label' => 'above',
                'module' => 'paragraphs',
                'settings' => array(
                    'view_mode' => 'full',
                ),
                'type' => 'paragraphs_view',
                'weight' => 2,
            ),
            'teaser' => array(
                'label' => 'above',
                'settings' => array(),
                'type' => 'hidden',
                'weight' => 0,
            ),
        ),
        'entity_type' => 'node',
        'field_name' => 'field_catering_monday',
        'label' => $t('Monday'),
        'required' => 0,
        'settings' => array(
            'add_mode' => 'button',
            'allowed_bundles' => array(
                'catering_food_by_day' => 'catering_food_by_day',
            ),
            'bundle_weights' => array(
                'catering_food_by_day' => -2,
            ),
            'default_edit_mode' => 'open',
            'title' => 'Toit',
            'title_multiple' => 'Toitu',
            'user_register_form' => false,
        ),
        'widget' => array(
            'active' => 0,
            'module' => 'paragraphs',
            'settings' => array(),
            'type' => 'paragraphs_embed',
            'weight' => 5,
        ),
    );

    $field_instances['node-catering-field_catering_tuesday'] = array(
        'bundle' => 'catering',
        'default_value' => null,
        'deleted' => 0,
        'description' => '',
        'display' => array(
            'default' => array(
                'label' => 'above',
                'module' => 'paragraphs',
                'settings' => array(
                    'view_mode' => 'full',
                ),
                'type' => 'paragraphs_view',
                'weight' => 3,
            ),
            'teaser' => array(
                'label' => 'above',
                'settings' => array(),
                'type' => 'hidden',
                'weight' => 0,
            ),
        ),
        'entity_type' => 'node',
        'field_name' => 'field_catering_tuesday',
        'label' => $t('Tuesday'),
        'required' => 0,
        'settings' => array(
            'add_mode' => 'button',
            'allowed_bundles' => array(
                'catering_food_by_day' => 'catering_food_by_day',
            ),
            'bundle_weights' => array(
                'catering_food_by_day' => -2,
            ),
            'default_edit_mode' => 'open',
            'title' => 'Toit',
            'title_multiple' => 'Toitu',
            'user_register_form' => false,
        ),
        'widget' => array(
            'active' => 0,
            'module' => 'paragraphs',
            'settings' => array(),
            'type' => 'paragraphs_embed',
            'weight' => 6,
        ),
    );

    $field_instances['node-catering-field_catering_wednesday'] = array(
        'bundle' => 'catering',
        'default_value' => null,
        'deleted' => 0,
        'description' => '',
        'display' => array(
            'default' => array(
                'label' => 'above',
                'module' => 'paragraphs',
                'settings' => array(
                    'view_mode' => 'full',
                ),
                'type' => 'paragraphs_view',
                'weight' => 4,
            ),
            'teaser' => array(
                'label' => 'above',
                'settings' => array(),
                'type' => 'hidden',
                'weight' => 0,
            ),
        ),
        'entity_type' => 'node',
        'field_name' => 'field_catering_wednesday',
        'label' => $t('Wednesday'),
        'required' => 0,
        'settings' => array(
            'add_mode' => 'button',
            'allowed_bundles' => array(
                'catering_food_by_day' => 'catering_food_by_day',
            ),
            'bundle_weights' => array(
                'catering_food_by_day' => -2,
            ),
            'default_edit_mode' => 'open',
            'title' => 'Toit',
            'title_multiple' => 'Toitu',
            'user_register_form' => false,
        ),
        'widget' => array(
            'active' => 0,
            'module' => 'paragraphs',
            'settings' => array(),
            'type' => 'paragraphs_embed',
            'weight' => 7,
        ),
    );

    $field_instances['node-catering-field_catering_thursday'] = array(
        'bundle' => 'catering',
        'default_value' => null,
        'deleted' => 0,
        'description' => '',
        'display' => array(
            'default' => array(
                'label' => 'above',
                'module' => 'paragraphs',
                'settings' => array(
                    'view_mode' => 'full',
                ),
                'type' => 'paragraphs_view',
                'weight' => 5,
            ),
            'teaser' => array(
                'label' => 'above',
                'settings' => array(),
                'type' => 'hidden',
                'weight' => 0,
            ),
        ),
        'entity_type' => 'node',
        'field_name' => 'field_catering_thursday',
        'label' => $t('Thursday'),
        'required' => 0,
        'settings' => array(
            'add_mode' => 'button',
            'allowed_bundles' => array(
                'catering_food_by_day' => 'catering_food_by_day',
            ),
            'bundle_weights' => array(
                'catering_food_by_day' => -2,
            ),
            'default_edit_mode' => 'open',
            'title' => 'Toit',
            'title_multiple' => 'Toitu',
            'user_register_form' => false,
        ),
        'widget' => array(
            'active' => 0,
            'module' => 'paragraphs',
            'settings' => array(),
            'type' => 'paragraphs_embed',
            'weight' => 8,
        ),
    );

    $field_instances['node-catering-field_catering_friday'] = array(
        'bundle' => 'catering',
        'default_value' => null,
        'deleted' => 0,
        'description' => '',
        'display' => array(
            'default' => array(
                'label' => 'above',
                'module' => 'paragraphs',
                'settings' => array(
                    'view_mode' => 'full',
                ),
                'type' => 'paragraphs_view',
                'weight' => 6,
            ),
            'teaser' => array(
                'label' => 'above',
                'settings' => array(),
                'type' => 'hidden',
                'weight' => 0,
            ),
        ),
        'entity_type' => 'node',
        'field_name' => 'field_catering_friday',
        'label' => $t('Friday'),
        'required' => 0,
        'settings' => array(
            'add_mode' => 'button',
            'allowed_bundles' => array(
                'catering_food_by_day' => 'catering_food_by_day',
            ),
            'bundle_weights' => array(
                'catering_food_by_day' => -2,
            ),
            'default_edit_mode' => 'open',
            'title' => 'Toit',
            'title_multiple' => 'Toitu',
            'user_register_form' => false,
        ),
        'widget' => array(
            'active' => 0,
            'module' => 'paragraphs',
            'settings' => array(),
            'type' => 'paragraphs_embed',
            'weight' => 9,
        ),
    );
    $field_instances['node-catering-field_catering_provider'] = array(
        'bundle' => 'catering',
        'default_value' => null,
        'deleted' => 0,
        'description' => t('This allows to choose which catering company has this menu'),
        'entity_type' => 'node',
        'field_name' => 'field_catering_provider',
        'label' => st('Catering company selection'),
        'required' => 0,
        'settings' => array(
            'entity_translation_sync' => false,
            'user_register_form' => false,
        ),
        'widget' => array(
            'active' => 0,
            'module' => 'options',
            'settings' => array(
                'autocomplete_path' => 'taxonomy/autocomplete',
                'size' => 60,
            ),
            'type' => 'options_select',
            'weight' => 2,
        ),
    );
    // Exported field_instance: 'node-catering-field_catering_pictures'.
    $field_instances['node-catering-field_catering_pictures'] = array(
        'bundle' => 'catering',
        'deleted' => 0,
        'description' => '',
        'display' => array(
            'default' => array(
                'label' => 'above',
                'module' => 'image',
                'settings' => array(
                    'image_link' => '',
                    'image_style' => '',
                ),
                'type' => 'image',
                'weight' => 8,
            ),
            'teaser' => array(
                'label' => 'above',
                'settings' => array(),
                'type' => 'hidden',
                'weight' => 0,
            ),
        ),
        'entity_type' => 'node',
        'field_name' => 'field_catering_pictures',
        'label' => 'catering pictures',
        'required' => 0,
        'settings' => array(
            'alt_field' => 0,
            'default_image' => 0,
            'entity_translation_sync' => false,
            'file_directory' => '',
            'file_extensions' => 'png gif jpg jpeg',
            'max_filesize' => '',
            'max_resolution' => '',
            'min_resolution' => '',
            'title_field' => 0,
            'user_register_form' => false,
        ),
        'widget' => array(
            'active' => 1,
            'module' => 'media',
            'settings' => array(
                'allowed_schemes' => array(
                    'public' => 'public',
                ),
                'allowed_types' => array(
                    'audio' => 0,
                    'document' => 0,
                    'image' => 'image',
                    'video' => 0,
                ),
                'browser_plugins' => array(
                    'media_default--media_browser_1' => 0,
                    'media_default--media_browser_my_files' => 0,
                    'media_internet'=>0,
                    'upload' => 0,
                ),
            ),
            'type' => 'media_generic',
            'weight' => 11,
        ),
    );

    // Translatables
    // Included for use with string extractors like potx.
    t('catering pictures');
    return $field_instances;
}

function hitsa_catering_add_custom_node_fields()
{
    foreach (_hitsa_catering_installed_node_fields() as $field) {
        $field_check = field_info_field($field['field_name']);
        if (empty($field_check)) {
            field_create_field($field);
        }
    }
    foreach (_hitsa_catering_installed_node_instances() as $field_instance) {
        $field_instance['entity_type'] = 'node';
        $field_instance['bundle'] = 'catering';
        field_create_instance($field_instance);
    }
}

function hitsa_catering_delete_custom_node_fields()
{
    foreach (array_keys(_hitsa_catering_installed_node_fields()) as $field) {
        $field_check = field_info_field($field);
        if (!empty($field_check)) {
            if (!empty($field_check['bundles'])) {
                if (!empty($field_check['bundles']['node'])) {
                    if (count($field_check['bundles']['node']) > 1) {

                    } elseif (count($field_check['bundles']['node']) == 1) {
//                      field_delete_field($field_check['field_name']);
                    }
                }
            }
        } else {
//          field_delete_field($field);
        }
    }
    $instances = field_info_instances('node', 'catering');
    foreach ($instances as $instance_name => $field_instance) {
        field_delete_instance($field_instance);
    }
}

function _hitsa_catering_custom_field_groups()
{
    $field_groups = array();

    $field_group = (object)array(
        'identifier' => 'group_monday|node|toitlustus|form',
        'group_name' => 'group_monday',
        'entity_type' => 'node',
        'bundle' => 'catering',
        'mode' => 'form',
        'parent_name' => '',
        'table' => 'field_group',
        'type' => 'Overridden',
        'disabled' => false,
        'label' => 'Monday',
        'weight' => '4',
        'children' => array(
            'field_catering_monday',
        ),
        'format_type' => 'tab',
        'format_settings' => array(
            'formatter' => 'closed',
            'instance_settings' => array(
                'description' => '',
                'classes' => '',
                'required_fields' => 1,
            ),
        ),
    );
    $field_groups[] = $field_group;

    $field_group = (object)array(
        'identifier' => 'group_tuesday|node|toitlustus|form',
        'group_name' => 'group_tuesday',
        'entity_type' => 'node',
        'bundle' => 'catering',
        'mode' => 'form',
        'parent_name' => '',
        'table' => 'field_group',
        'type' => 'Overridden',
        'disabled' => false,
        'label' => 'Tuesday',
        'weight' => '5',
        'children' => array(
            'field_catering_tuesday',
        ),
        'format_type' => 'tab',
        'format_settings' => array(
            'formatter' => 'closed',
            'instance_settings' => array(
                'description' => '',
                'classes' => '',
                'required_fields' => 1,
            ),
        ),
    );
    $field_groups[] = $field_group;

    $field_group = (object)array(
        'identifier' => 'group_wednesday|node|toitlustus|form',
        'group_name' => 'group_wednesday',
        'entity_type' => 'node',
        'bundle' => 'catering',
        'mode' => 'form',
        'parent_name' => '',
        'table' => 'field_group',
        'type' => 'Overridden',
        'disabled' => false,
        'label' => 'Wednesday',
        'weight' => '6',
        'children' => array(
            'field_catering_wednesday',
        ),
        'format_type' => 'tab',
        'format_settings' => array(
            'formatter' => 'closed',
            'instance_settings' => array(
                'description' => '',
                'classes' => '',
                'required_fields' => 1,
            ),
        ),
    );
    $field_groups[] = $field_group;

    $field_group = (object)array(
        'identifier' => 'group_thursday|node|toitlustus|form',
        'group_name' => 'group_thursday',
        'entity_type' => 'node',
        'bundle' => 'catering',
        'mode' => 'form',
        'parent_name' => '',
        'table' => 'field_group',
        'type' => 'Overridden',
        'disabled' => false,
        'label' => 'Thursday',
        'weight' => '7',
        'children' => array(
            'field_catering_thursday',
        ),
        'format_type' => 'tab',
        'format_settings' => array(
            'formatter' => 'closed',
            'instance_settings' => array(
                'description' => '',
                'classes' => '',
                'required_fields' => 1,
            ),
        ),
    );
    $field_groups[] = $field_group;

    $field_group = (object)array(
        'identifier' => 'group_friday|node|toitlustus|form',
        'group_name' => 'group_friday',
        'entity_type' => 'node',
        'bundle' => 'catering',
        'mode' => 'form',
        'parent_name' => '',
        'table' => 'field_group',
        'type' => 'Overridden',
        'disabled' => false,
        'label' => 'Friday',
        'weight' => '8',
        'children' => array(
            'field_catering_friday',
        ),
        'format_type' => 'tab',
        'format_settings' => array(
            'formatter' => 'closed',
            'instance_settings' => array(
                'description' => '',
                'classes' => '',
                'required_fields' => 1,
            ),
        ),
    );
    $field_groups[] = $field_group;

    $field_group = (object)array(
        'identifier' => 'group_pictures|node|catering|form',
        'group_name' => 'group_pictures',
        'entity_type' => 'node',
        'bundle' => 'catering',
        'mode' => 'form',
        'parent_name' => '',
        'label' => 'Pictures',
        'weight' => '10',
        'children' => array(
            0 => 'field_catering_pictures',
        ),
        'format_type' => 'tab',
        'format_settings' => array(
            'formatter' => 'closed',
            'instance_settings' => array(
                'description' => '',
                'classes' => 'group-pictures field-group-tab',
                'required_fields' => 1,
            ),
        ),
    );
    $field_groups[] = $field_group;
    return $field_groups;
}

function hitsa_catering_add_custom_field_groups()
{
    foreach (_hitsa_catering_custom_field_groups() as $field_group) {
        field_group_group_save($field_group);
    }
}
function hitsa_catering_add_custom_taxonomy_fields()
{
    foreach (hitsa_catering_add_custom_taxonomy_field_base() as $field) {
        $field_check = field_info_field($field['field_name']);
        if (empty($field_check)) {
            field_create_field($field);
        }
    }
    foreach (hitsa_catering_add_custom_taxonomy_field_instance() as $field_instance) {

        field_create_instance($field_instance);
    }
}

function hitsa_catering_add_custom_taxonomy_field_base()
{
    $field_bases = array();
    // Exported field_base: 'field_catering_provider_big_name'.
    $field_bases['field_catering_provider_big_name'] = array(
        'active' => 1,
        'cardinality' => 1,
        'deleted' => 0,
        'entity_types' => array(),
        'field_name' => 'field_catering_provider_big_name',
        'indexes' => array(
            'format' => array(
                0 => 'format',
            ),
        ),
        'locked' => 0,
        'module' => 'text',
        'settings' => array(
            'entity_translation_sync' => false,
            'max_length' => 255,
        ),
        'translatable' => 0,
        'type' => 'text',
    );
    $field_bases['field_food_icon'] = array(
        'active' => 1,
        'cardinality' => 1,
        'deleted' => 0,
        'entity_types' => array(),
        'field_name' => 'field_food_icon',
        'indexes' => array(
            'value' => array(
                0 => 'value',
            ),
        ),
        'locked' => 0,
        'module' => 'list',
        'settings' => array(
            'allowed_values' => array(
                'accessibility' => 'Accessibility',
                'arrow-right-circle' => 'Arrow-right-circle',
                'arrow_down' => 'Arrow_down',
                'arrow_left' => 'Arrow_left',
                'arrow_right' => 'Arrow_right',
                'arrow_up' => 'Arrow_up',
                'business' => 'Business',
                'calendar' => 'Calendar',
                'catering' => 'Catering',
                'check' => 'Check',
                'clock' => 'Clock',
                'close' => 'Close',
                'dinner' => 'Dinner',
                'document' => 'Document',
                'download' => 'Download',
                'elektrienergia' => 'Elektrienergia',
                'envelope' => 'Envelope',
                'facebook-circle' => 'Facebook-circle',
                'home' => 'Home',
                'link' => 'Link',
                'location' => 'Location',
                'menu' => 'Menu',
                'minus' => 'Minus',
                'money' => 'Money',
                'phone' => 'Phone',
                'plus' => 'Plus',
                'print' => 'Print',
                'question-circle' => 'Question-circle',
                'register' => 'Register',
                'search' => 'Search',
                'share' => 'Share',
                'shopping' => 'Shopping',
                'sweet' => 'Sweet',
                'tourism' => 'Tourism',
                'unlock' => 'Unlock',
                'user' => 'User',
            ),
            'allowed_values_function' => '',
            'entity_translation_sync' => false,
        ),
        'translatable' => 0,
        'type' => 'list_text',
    );
    // Exported field_base: 'field_email'.
    $field_bases['field_email'] = array(
        'active' => 1,
        'cardinality' => 1,
        'deleted' => 0,
        'entity_types' => array(),
        'field_name' => 'field_email',
        'indexes' => array(),
        'locked' => 0,
        'module' => 'email',
        'settings' => array(
            'entity_translation_sync' => false,
        ),
        'translatable' => 0,
        'type' => 'email',
    );

    // Exported field_base: 'field_homepage'.
    $field_bases['field_homepage'] = array(
        'active' => 1,
        'cardinality' => 1,
        'deleted' => 0,
        'entity_types' => array(),
        'field_name' => 'field_homepage',
        'indexes' => array(),
        'locked' => 0,
        'module' => 'link',
        'settings' => array(
            'attributes' => array(
                'class' => '',
                'rel' => '',
                'target' => 'default',
            ),
            'display' => array(
                'url_cutoff' => 80,
            ),
            'enable_tokens' => 1,
            'entity_translation_sync' => false,
            'title' => 'optional',
            'title_maxlength' => 128,
            'title_value' => '',
            'url' => 0,
        ),
        'translatable' => 0,
        'type' => 'link_field',
    );

    // Exported field_base: 'field_phone_number'.
    $field_bases['field_phone_number'] = array(
        'active' => 1,
        'cardinality' => 1,
        'deleted' => 0,
        'entity_types' => array(),
        'field_name' => 'field_phone_number',
        'indexes' => array(
            'format' => array(
                0 => 'format',
            ),
        ),
        'locked' => 0,
        'module' => 'text',
        'settings' => array(
            'entity_translation_sync' => false,
            'max_length' => 255,
        ),
        'translatable' => 0,
        'type' => 'text',
    );

    // Exported field_base: 'field_provider_address'.
    $field_bases['field_provider_address'] = array(
        'active' => 1,
        'cardinality' => 1,
        'deleted' => 0,
        'entity_types' => array(),
        'field_name' => 'field_provider_address',
        'indexes' => array(
            'format' => array(
                0 => 'format',
            ),
        ),
        'locked' => 0,
        'module' => 'text',
        'settings' => array(
            'entity_translation_sync' => false,
            'max_length' => 255,
        ),
        'translatable' => 0,
        'type' => 'text',
    );

  // Exported field_base: 'field_show_on_front_page'.
    $field_bases['field_show_on_front_page'] = array(
        'active' => 1,
        'cardinality' => 1,
        'deleted' => 0,
        'entity_types' => array(),
        'field_name' => 'field_show_on_front_page',
        'indexes' => array(
            'value' => array(
                0 => 'value',
            ),
        ),
        'locked' => 0,
        'module' => 'list',
        'settings' => array(
            'allowed_values' => array(
                0 => '',
                1 => 'Nähtav esilehel',
            ),
            'allowed_values_function' => '',
            'allowed_values_no_localization' => 0,
            'entity_translation_sync' => false,
        ),
        'translatable' => 0,
        'type' => 'list_boolean',
    );
     // Exported field_base: 'field_dessert_section'.
    $field_bases['field_dessert_section'] = array(
        'active' => 1,
        'cardinality' => 1,
        'deleted' => 0,
        'entity_types' => array(),
        'field_name' => 'field_dessert_section',
        'indexes' => array(
            'value' => array(
                0 => 'value',
            ),
        ),
        'locked' => 0,
        'module' => 'list',
        'settings' => array(
            'allowed_values' => array(
                0 => '',
                1 => 'In dessert selection',
            ),
            'allowed_values_function' => '',
            'allowed_values_no_localization' => 0,
            'entity_translation_sync' => false,
        ),
        'translatable' => 0,
        'type' => 'list_boolean',
    );

    return $field_bases;
}
function hitsa_catering_add_custom_taxonomy_field_instance()
{

    $field_instances = array();
     // 'taxonomy_term-catering_provider-field_catering_provider_big_name'.
    $field_instances['taxonomy_term-catering_provider-field_catering_provider_big_name'] = array(
        'bundle' => 'catering_provider',
        'default_value' => null,
        'deleted' => 0,
        'description' => '',
        'display' => array(
            'default' => array(
                'label' => 'above',
                'module' => 'text',
                'settings' => array(),
                'type' => 'text_default',
                'weight' => 0,
            ),
        ),
        'entity_type' => 'taxonomy_term',
        'field_name' => 'field_catering_provider_big_name',
        'label' => 'Catering provider big name',
        'required' => 0,
        'settings' => array(
            'entity_translation_sync' => false,
            'text_processing' => 0,
            'user_register_form' => false,
        ),
        'widget' => array(
            'active' => 1,
            'module' => 'text',
            'settings' => array(
                'size' => 60,
            ),
            'type' => 'text_textfield',
            'weight' => 1,
        ),
    );
    $field_instances['taxonomy_term-catering_food_subcategory-field_food_icon'] = array(
        'bundle' => 'catering_food_subcategory',
        'default_value' => null,
        'deleted' => 0,
        'description' => '',
        'display' => array(
            'default' => array(
                'label' => 'above',
                'module' => 'list',
                'settings' => array(),
                'type' => 'list_default',
                'weight' => 0,
            ),
        ),
        'entity_type' => 'taxonomy_term',
        'field_name' => 'field_food_icon',
        'label' => 'Food icon',
        'required' => 0,
        'settings' => array(
            'entity_translation_sync' => false,
            'user_register_form' => false,
        ),
        'widget' => array(
            'active' => 1,
            'module' => 'options',
            'settings' => array(),
            'type' => 'options_select',
            'weight' => 32,
        ),
    );
        // 'taxonomy_term-catering_food_subcategory-field_dessert_section'.
    $field_instances['taxonomy_term-catering_food_subcategory-field_dessert_section'] = array(
        'bundle' => 'catering_food_subcategory',
        'default_value' => array(
            0 => array(
                'value' => 0,
            ),
        ),
        'deleted' => 0,
        'description' => 'Selle kasti abil saab määrata, kas toit ilmub toitlustamise tabelis magustoitude juurde.',
        'display' => array(
            'default' => array(
                'label' => 'above',
                'module' => 'list',
                'settings' => array(),
                'type' => 'list_default',
                'weight' => 1,
            ),
        ),
        'entity_type' => 'taxonomy_term',
        'field_name' => 'field_dessert_section',
        'label' => 'Magustoidu valikus',
        'required' => 0,
        'settings' => array(
            'entity_translation_sync' => false,
            'user_register_form' => false,
        ),
        'widget' => array(
            'active' => 1,
            'module' => 'options',
            'settings' => array(
                'display_label' => 0,
            ),
            'type' => 'options_onoff',
            'weight' => 4,
        ),
    );

    // Exported field_instance: 'taxonomy_term-catering_provider-field_email'.
    $field_instances['taxonomy_term-catering_provider-field_email'] = array(
        'bundle' => 'catering_provider',
        'default_value' => null,
        'deleted' => 0,
        'description' => '',
        'display' => array(
            'default' => array(
                'label' => 'above',
                'module' => 'email',
                'settings' => array(),
                'type' => 'email_default',
                'weight' => 2,
            ),
        ),
        'entity_type' => 'taxonomy_term',
        'field_name' => 'field_email',
        'label' => 'Email',
        'required' => 0,
        'settings' => array(
            'entity_translation_sync' => false,
            'user_register_form' => false,
        ),
        'widget' => array(
            'active' => 1,
            'module' => 'email',
            'settings' => array(
                'size' => 60,
            ),
            'type' => 'email_textfield',
            'weight' => 3,
        ),
    );

    // Exported field_instance: 'taxonomy_term-catering_provider-field_homepage'.
    $field_instances['taxonomy_term-catering_provider-field_homepage'] = array(
        'bundle' => 'catering_provider',
        'default_value' => null,
        'deleted' => 0,
        'description' => '',
        'display' => array(
            'default' => array(
                'label' => 'above',
                'module' => 'link',
                'settings' => array(),
                'type' => 'link_default',
                'weight' => 5,
            ),
        ),
        'entity_type' => 'taxonomy_term',
        'field_name' => 'field_homepage',
        'label' => 'Homepage',
        'required' => 0,
        'settings' => array(
            'absolute_url' => 1,
            'attributes' => array(
                'class' => '',
                'configurable_class' => 0,
                'configurable_title' => 0,
                'rel' => '',
                'target' => 'default',
                'title' => '',
            ),
            'display' => array(
                'url_cutoff' => 80,
            ),
            'enable_tokens' => 1,
            'entity_translation_sync' => false,
            'rel_remove' => 'default',
            'title' => 'optional',
            'title_label_use_field_label' => 0,
            'title_maxlength' => 128,
            'title_value' => '',
            'url' => 0,
            'user_register_form' => false,
            'validate_url' => 1,
        ),
        'widget' => array(
            'active' => 0,
            'module' => 'link',
            'settings' => array(),
            'type' => 'link_field',
            'weight' => 4,
        ),
    );

    // Exported field_instance:
    // 'taxonomy_term-catering_provider-field_phone_number'.
    $field_instances['taxonomy_term-catering_provider-field_phone_number'] = array(
        'bundle' => 'catering_provider',
        'default_value' => null,
        'deleted' => 0,
        'description' => '+372 000000',
        'display' => array(
            'default' => array(
                'label' => 'above',
                'module' => 'text',
                'settings' => array(),
                'type' => 'text_default',
                'weight' => 3,
            ),
        ),
        'entity_type' => 'taxonomy_term',
        'field_name' => 'field_phone_number',
        'label' => 'Phone number',
        'required' => 0,
        'settings' => array(
            'entity_translation_sync' => false,
            'text_processing' => 0,
            'user_register_form' => false,
        ),
        'widget' => array(
            'active' => 1,
            'module' => 'text',
            'settings' => array(
                'size' => 60,
            ),
            'type' => 'text_textfield',
            'weight' => 5,
        ),
    );

    // Exported field_instance:
    // 'taxonomy_term-catering_provider-field_provider_address'.
    $field_instances['taxonomy_term-catering_provider-field_provider_address'] = array(
        'bundle' => 'catering_provider',
        'default_value' => null,
        'deleted' => 0,
        'description' => '',
        'display' => array(
            'default' => array(
                'label' => 'above',
                'module' => 'text',
                'settings' => array(),
                'type' => 'text_default',
                'weight' => 0,
            ),
        ),
        'entity_type' => 'taxonomy_term',
        'field_name' => 'field_provider_address',
        'label' => 'Address',
        'required' => 0,
        'settings' => array(
            'entity_translation_sync' => false,
            'text_processing' => 0,
            'user_register_form' => false,
        ),
        'widget' => array(
            'active' => 1,
            'module' => 'text',
            'settings' => array(
                'size' => 60,
            ),
            'type' => 'text_textfield',
            'weight' => 6,
        ),
    );
   // 'taxonomy_term-catering_provider-field_show_on_front_page'.
    $field_instances['taxonomy_term-catering_provider-field_show_on_front_page'] = array(
        'bundle' => 'catering_provider',
        'default_value' => array(
            0 => array(
                'value' => 0,
            ),
        ),
        'deleted' => 0,
        'description' => '',
        'display' => array(
            'default' => array(
                'label' => 'above',
                'module' => 'list',
                'settings' => array(),
                'type' => 'list_default',
                'weight' => 5,
            ),
        ),
        'entity_type' => 'taxonomy_term',
        'field_name' => 'field_show_on_front_page',
        'label' => 'Show on front page',
        'required' => 0,
        'settings' => array(
            'entity_translation_sync' => false,
            'user_register_form' => false,
        ),
        'widget' => array(
            'active' => 1,
            'module' => 'options',
            'settings' => array(
                'display_label' => 0,
            ),
            'type' => 'options_onoff',
            'weight' => 7,
        ),
    );
    // Translatables
    // Included for use with string extractors like potx.
    t('Address');
    t('Email');
    t('Homepage');
    t('Phone number');

    // Translatables
    // Included for use with string extractors like potx.
    t('Catering provider pictures');
    t('Email');
    t('Homepage');
    t('Location');
    t('Phone number');

    return $field_instances;
}

function hitsa_catering_delete_vocabulary_fields()
{
    foreach (array_keys(hitsa_catering_add_custom_taxonomy_field_base()) as $field) {
//      field_delete_field($field);
    }
    $instances = field_info_instances('taxonomy_term', 'catering_provider');
    foreach ($instances as $instance_name => $field_instance) {
        field_delete_instance($field_instance);
    }
}
function hitsa_catering_update_7000(){
    $field_instance =  field_info_instance('node','field_catering_pictures','catering');
  if(empty($field_instance['widget']['settings']['browser_plugins'])){
    $field_instance['widget']['settings']['browser_plugins']['media_internet']=0;
    field_update_instance($field_instance);
  }
}

function hitsa_catering_update_7001(){
    $field_instance =  field_info_instance('node','field_catering_pictures','catering');
  if(!empty($field_instance['widget']['settings']['browser_plugins'])){
    $field_instance['widget']['settings']['browser_plugins']['media_internet']=0;
    field_update_instance($field_instance);
  }
}

function hitsa_catering_update_7002(){
   $field_instance =  field_info_instance('node','field_catering_pictures','catering');
    if(!empty($field_instance['widget']['settings']['browser_plugins'])){
      $field_instance['widget']['settings']['browser_plugins']['media_internet']=0;
    }
    field_update_instance($field_instance);
}