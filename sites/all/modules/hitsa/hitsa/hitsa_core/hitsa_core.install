<?php

function hitsa_core_install()
{
  // Set profile variable
  $profile = drupal_get_profile();
  if ($profile === 'hitsa_vocational') {
    variable_set('hitsa_school_type', HITSA_SCHOOL_VOCATIONAL);
  } else {
    variable_set('hitsa_school_type', HITSA_SCHOOL_GYMNASIUM);
  }
  hitsa_core_set_default_language(); // Set ET as default language.
  module_load_include('inc', 'hitsa_core', 'includes/hitsa_core.installer');
  hitsa_core_installer('hitsa_core', 'install');
  hitsa_core_set_language_detection_rules();
  hitsa_core_search_server_add_index();
  hitsa_core_set_default_variables();
  hitsa_core_set_default_patterns();

  hitsa_core_set_translatable_variables();
  hitsa_core_set_variable_translations();
  hitsa_core_add_media_folder_terms();
  hitsa_core_set_initial_domain_path();
  hitsa_core_set_initail_metatags();
}

function hitsa_core_uninstall()
{
  module_load_include('inc', 'hitsa_core', 'includes/hitsa_core.installer');
  hitsa_core_installer('hitsa_core', 'uninstall');
}

/*
 * Hitsa core fields
 */
function _hitsa_core_fields()
{
  $t = get_t();

  return array(
    'field_image_author' => array(
      'field_name' => 'field_image_author',
      'label' => $t('Author'),
      'type' => 'text',
    ),
    'field_image_date' => array(
      'field_name' => 'field_image_date',
      'label' => $t('Date'),
      'type' => 'datestamp',
      'settings' => array(
        'granularity' => array(
          'month' => 'month',
          'day' => 'day',
          'year' => 'year',
          'hour' => 0,
          'minute' => 0,
          'second' => 0,
        ),
      ),
    ),
    'academic_year_period' => array(
      'field_name' => 'academic_year_period',
      'label' => $t('Period'),
      'type' => 'datestamp',
      'module' => 'date',
      'required' => false,
      'locked' => true,
      'settings' => array(
        'granularity' => array(
          'month' => 'month',
          'day' => 'day',
          'year' => 'year',
          'hour' => 'hour',
          'minute' => 'minute',
          'second' => 'second',
        ),
        'todate' => 'required',
      ),
    ),
    'academic_year' => array(
      'field_name' => 'academic_year',
      'label' => $t('Academic year'),
      'locked' => true,
      'type' => 'taxonomy_term_reference',
      'settings' => array(
        'allowed_values' => array(
          0 => array(
            'vocabulary' => 'academic_years',
            'parent' => 0,
          ),
        ),
      ),
    ),
    'field_personal_id_code' => array(
      'field_name' => 'field_personal_id_code',
      'label' => $t('Personal ID Code'),
      'type' => 'text',
    ),
    'field_phone_nr' => array(
      'field_name' => 'field_phone_nr',
      'label' => $t('Phone Nr.'),
      'type' => 'text',
    ),
  );
}

function _hitsa_core_field_instances()
{
  $t = get_t();

  return array(
    'academic_year_period' => array(
      'label' => $t('Period'),
      'field_name' => 'academic_year_period',
      'entity_type' => 'taxonomy_term',
      'bundle' => 'academic_years',
      'widget' => array(
        'type' => 'date_text',
        'module' => 'date',
      ),
    ),
    'field_image_author' => array(
      'label' => $t('Author'),
      'field_name' => 'field_image_author',
      'entity_type' => 'file',
      'bundle' => 'image',
    ),
    'field_image_date' => array(
      'label' => $t('Date'),
      'field_name' => 'field_image_date',
      'entity_type' => 'file',
      'bundle' => 'image',
    ),
    'field_personal_id_code' => array(
      'label' => $t('Personal ID Code'),
      'field_name' => 'field_personal_id_code',
      'entity_type' => 'user',
      'bundle' => 'user',
    ),
    'field_phone_nr' => array(
      'label' => $t('Phone Nr.'),
      'field_name' => 'field_phone_nr',
      'entity_type' => 'user',
      'bundle' => 'user',
    ),
  );
}

/*
 * Hitsa core vocabularies
 */
function _hitsa_core_vocabularies()
{
  $vocabularies = array();

  $vocabularies['academic_years'] =
    array(
    'vocabulary' => (object)array(
      'name' => t('Academic years'),
      'description' => t('School academic years'),
      'machine_name' => 'academic_years',
    ),
    'terms' => array(),
  );

  return $vocabularies;
}

/*
 * Hitsa core menus
 */

function _hitsa_core_menus()
{
  $t = get_t();

  return array(
    'hitsa_main_menu' => array(
      'menu_name' => 'hitsa-main-menu',
      'title' => $t('Peamenüü'),
      'description' => $t('HITSA Main menu for showing the primary links.'),
      'i18n_mode' => I18N_MODE_MULTIPLE,
    ),
    'hitsa_header_menu' => array(
      'menu_name' => 'hitsa-header-menu',
      'title' => $t('Header menu'),
      'description' => $t('HITSA Header menu.'),
      'i18n_mode' => I18N_MODE_MULTIPLE,
    ),
    'hitsa_quicklinks_menu' => array(
      'menu_name' => 'hitsa-quicklinks-menu',
      'title' => $t('Quicklinks'),
      'description' => $t('HITSA Quicklinks menu.'),
      'i18n_mode' => I18N_MODE_MULTIPLE,
    ),
    'hitsa_footer_menu' => array(
      'menu_name' => 'hitsa-footer-menu',
      'title' => $t('Footer menu'),
      'description' => $t('HITSA Footer menu.'),
      'i18n_mode' => I18N_MODE_MULTIPLE,
    ),
  );
}

function _hitsa_core_menu_links()
{
  $t = get_t();

  $menu_links = array();

  // Footer menu
  $hitsa_footer_menu = variable_get('hitsa_footer_menu_name');
  if (!empty($hitsa_footer_menu)) {
    $menu_links[] = array(
      'link_path' => '<front>',
      'link_title' => 'Avaleht',
      'customized' => 1,
      'menu_name' => $hitsa_footer_menu,
      'weight' => 1,
      'translations' => array(
        'en' => 'Homepage',
        'ru' => 'Главная страница',
      ),
    );
  }

  // Main Menu
  $hitsa_main_menu = variable_get('hitsa_main_menu_name');
  if (!empty($hitsa_main_menu)) {

    $school_type = hitsa_core_get_school_type();

    switch ($school_type) {
      case HITSA_SCHOOL_GYMNASIUM:
        break;
      case HITSA_SCHOOL_VOCATIONAL:
        $menu_links[] = array(
          'link_path' => '<front>',
          'link_title' => 'Trainings',
          'menu_name' => $hitsa_main_menu,
          'weight' => -7,
        );

        $menu_links[] = array(
          'link_path' => '<front>',
          'link_title' => 'Services',
          'menu_name' => $hitsa_main_menu,
          'weight' => -6,
          'hitsa_menu_type' => 'services',
        );
        break;
    }

    $menu_links[] = array(
      'link_path' => '<front>',
      'link_title' => 'Homepage',
      'menu_name' => $hitsa_main_menu,
      'weight' => -11,
      'hitsa_menu_type' => 'homepage',
    );

    $menu_links[] = array(
      'link_path' => '<front>',
      'link_title' => 'Admission',
      'menu_name' => $hitsa_main_menu,
      'weight' => -10,
    );

    $menu_links[] = array(
      'link_path' => '<front>',
      'link_title' => 'Studies',
      'menu_name' => $hitsa_main_menu,
      'weight' => -9,
    );

    $menu_links[] = array(
      'link_path' => '<front>',
      'link_title' => 'Student Life',
      'menu_name' => $hitsa_main_menu,
      'weight' => -8,
    );

    $menu_links[] = array(
      'link_path' => '<front>',
      'link_title' => 'About us',
      'menu_name' => $hitsa_main_menu,
      'weight' => -5,
      'hitsa_menu_type' => 'about_us',
    );
  }

  return $menu_links;
}

/*
 * Hitsa core date formats
 */
function _hitsa_core_date_formats()
{
  return array(
    "d. F" => array(
      'format_array' => array(
        'format' => 'd. F',
        'type' => 'custom',
        'locked' => 1,
      ),
      'type_array' => array(
        'type' => 'hitsa_date_month',
        'title' => 'Date & Month',
        'locked' => 1,
      ),
    ),
  );
}

/**
 * Hitsa core custom image styles
 */
function _hitsa_core_image_styles()
{
  $image_styles = array(
    array(
      'style' => array(
        'name' => 'hitsa_core_thumbnail',
        'label' => 'Thumbnail (708x396)'
      ),
      'effect' => array(
        'name' => 'image_scale',
        'data' => array(
          'width' => 708,
          'height' => 396,
          'upscale' => false,
        ),
      ),
    ),
    array(
      'style' => array(
        'name' => 'hitsa_core_logo',
        'label' => 'School Logo (x94)'
      ),
      'effect' => array(
        'name' => 'image_scale',
        'data' => array(
          'width' => 435,
          'height' => 94,
          'upscale' => false,
        ),
      ),
    ),
    array(
      'style' => array(
        'name' => 'hitsa_core_logo_mobile',
        'label' => 'School Logo Mobile (700x)'
      ),
      'effect' => array(
        'name' => 'image_scale',
        'data' => array(
          'width' => 700,
          'height' => null,
          'upscale' => false,
        ),
      ),
    ),
    array(
      'style' => array(
        'name' => 'hitsa_hero_banner',
        'label' => 'Hero Banner (1920x)'
      ),
      'effect' => array(
        'name' => 'image_scale',
        'data' => array(
          'width' => 1920,
          'height' => '',
          'upscale' => 0,
        ),
      ),
    ),
  );

  return $image_styles;
}

function hitsa_core_set_default_language()
{
  locale_add_language('et', null, null, LANGUAGE_LTR, '', '', true, true);
  locale_add_language('ru', null, null, LANGUAGE_LTR, '', '', true, false);

  // Set ET as first
  db_update('languages')
    ->fields(array('weight' => -100))
    ->condition('language', 'et')
    ->execute();

  // Disable "Language None" option
  module_load_include('inc', 'entity_translation', 'entity_translation.admin');
  entity_translation_settings_init('node', array('exclude_language_none' => true));
}

/**
 * Set URL based interface language detection.
 */
function hitsa_core_set_language_detection_rules()
{
  require_once DRUPAL_ROOT . '/includes/language.inc';

  $weighted_provider_list = array(
    1 => LOCALE_LANGUAGE_NEGOTIATION_URL,
    10 => LANGUAGE_NEGOTIATION_DEFAULT,
  );
  $all_negotiation_providers = language_negotiation_info();
  $negotiation = array();
  foreach ($weighted_provider_list as $weight => $id) {
    $negotation[$id] = $all_negotiation_providers[$id];
    $negotation[$id]['weight'] = $weight;
  }
  language_negotiation_set(LANGUAGE_TYPE_INTERFACE, $negotation);
}

/**
 *  Hitsa core custom roles
 */
function _hitsa_core_roles()
{
  return array(
    'hitsa admin' => array(
      'access administration menu',
      'access administration pages',
      'access all webform results',
      'access content overview',
      'access own webform results',
      'access own webform submissions',
      'access site in maintenance mode',
      'access site reports',
      'access user profiles',
      'administer nodes',
      'administer taxonomy',
      'administer users',
      'block IP addresses',
      'bypass file access',
      'bypass node access',
      'delete all webform submissions',
      'delete own webform submissions',
      'edit all webform submissions',
      'edit own webform submissions',
      'edit webform components',
      'flush caches',
      'view the administration theme',
      'access media browser',
      'administer hitsa page settings',
      'translate interface',
    ),
    'hitsa editor' => array(
      'access administration menu',
      'access administration pages',
      'access all webform results',
      'access content overview',
      'access media browser',
      'access own webform results',
      'access own webform submissions',
      'access site in maintenance mode',
      'create files',
      'download own document files',
      'download own image files',
      'download own video files',
      'edit own document files',
      'edit own image files',
      'edit own video files',
      'view own files',
      'view own private files',
      'view the administration theme',
    ),
  );
}

function hitsa_core_add_user_roles()
{
  foreach (_hitsa_core_user_roles() as $role => $permissions) {
    $r = new stdClass();
    $r->name = $role;
    user_role_save($r);
    if (!empty($r->rid)) {
      user_role_grant_permissions($r->rid, $permissions);
    }

  }
}

function _hitsa_core_user_roles()
{
  $roles = array(
    'hitsa editor' => array(
      'access administration menu',
      'access administration pages',
      'access all views',
      'access all webform results',
      'access content overview',
      'access contextual links',
      'access draggableviews',
      'access media browser',
      'access own webform results',
      'access own webform submissions',
      'access site in maintenance mode',
      'administer content translations',
      'administer files',
      'administer nodes',
      'create article content',
      'create contact content',
      'create curriculum content',
      'create event content',
      'create files',
      'create gallery content',
      'create logo content',
      'create webform content',
      'delete own article content',
      'delete own contact content',
      'delete own curriculum content',
      'delete own event content',
      'delete own gallery content',
      'delete own logo content',
      'delete own webform content',
      'download own document files',
      'download own image files',
      'download own video files',
      'edit any content_page content',
      'edit own article content',
      'edit own contact content',
      'edit own content_page content',
      'edit own curriculum content',
      'edit own document files',
      'edit own event content',
      'edit own gallery content',
      'edit own image files',
      'edit own logo content',
      'edit own video files',
      'edit own webform content',
      'translate any entity',
      'translate content',
      'translate node entities',
      'use manualcrop',
      'view files',
      'view own files',
      'view own private files',
      'view own unpublished content',
      'view the administration theme',
    ),
    'hitsa admin' => array(
      'access administration menu',
      'access administration pages',
      'access all webform results',
      'access content overview',
      'access contextual links',
      'access draggableviews',
      'access media browser',
      'access own webform results',
      'access own webform submissions',
      'access site in maintenance mode',
      'access site reports',
      'access user profiles',
      'administer content translations',
      'administer files',
      'administer hitsa page settings',
      'administer menu',
      'administer nodes',
      'administer site configuration',
      'administer taxonomy',
      'administer users',
      'block IP addresses',
      'bypass file access',
      'bypass node access',
      'delete all webform submissions',
      'delete own webform submissions',
      'edit all webform submissions',
      'edit own webform submissions',
      'edit webform components',
      'flush caches',
      'translate any entity',
      'translate content',
      'translate node entities',
      'use manualcrop',
      'view the administration theme',
    ),
  );

  return $roles;
}

function hitsa_core_disable_modules()
{
  if (module_exists('comment')) {
    module_disable(array('comment'));
    drupal_uninstall_modules(array('comment'));
  }
}

function _hitsa_core_metatag_configs()
{
  return array(
    array(
      'disabled' => false,
      'api_version' => 1,
      'instance' => 'node:article',
      'config' =>
        array(
        'og:image' =>
          array(
          'value' => '[node:subpage_images]',
        ),
      ),
    ),
  );
}

function hitsa_core_install_metatag_config($configs)
{
  foreach ($configs as $config) {

  }
}

function hitsa_core_set_default_variables()
{
  variable_set('captcha_default_challenge', 'image_captcha/Image');
  variable_set('pathauto_transliterate', '1');
  variable_set('pathauto_node_content_page_pattern', '[node:title]');
  $t = get_t();
  variable_set('pathauto_node_article_pattern', $t('news/') . '[node:title]');
  variable_set('pathauto_node_article_en_pattern', $t('news/') . '[node:title]');
  variable_set('pathauto_node_article_et_pattern', $t('uudised/') . '[node:title]');
  variable_set('pathauto_node_gallery_pattern', $t('galleries/') . '[node:title]');
  variable_set('pathauto_node_gallery_en_pattern', $t('galleries/') . '[node:title]');
  variable_set('pathauto_node_gallery_et_pattern', $t('galeriid/') . '[node:title]');
  variable_set('error_level', 0); // Disable error message display
  variable_set('metatag_enable_taxonomy_term', false); // Disable metatags for taxonomy terms

  // Default captcha settings
  variable_set('image_captcha_bilinear_interpolation', 1);
  variable_set('image_captcha_distortion_amplitude', '5');
  variable_set('image_captcha_dot_noise', 1);
  variable_set('image_captcha_line_noise', 1);
  variable_set('image_captcha_noise_level', '2');

  // Set WYSIWYG media popup settings
  variable_set(
    'media_wysiwyg_wysiwyg_browser_plugins',
    array(
      'upload',
      'media_browser_plus--media_browser_thumbnails',
      'media_browser_plus--media_browser_my_files',
      'media_internet',
    )
  );
}

function hitsa_core_set_default_patterns()
{
  if (module_exists('hitsa_content_page')) {

    $t = get_t();
    variable_set('pathauto_node_content_page_pattern', '[node:title]');
    variable_set('pathauto_node_article_pattern', $t('news/') . '[node:title]');
    variable_set('pathauto_node_article_en_pattern', $t('news/') . '[node:title]');
    variable_set('pathauto_node_article_et_pattern', $t('uudised/') . '[node:title]');
    variable_set('pathauto_node_gallery_pattern', $t('galleries/') . '[node:title]');
    variable_set('pathauto_node_gallery_en_pattern', $t('galleries/') . '[node:title]');
    variable_set('pathauto_node_gallery_et_pattern', $t('galeriid/') . '[node:title]');
    if (module_exists('transliteration')) {
      variable_set('pathauto_transliterate', 1);
    }
  }
}
function hitsa_core_set_translatable_variables()
{

  $translated_variables = variable_get('variable_realm_list_language');
  $variables_new = array(
    'front_news_title' => 'News',
    'front_our_stories_title' => 'Our stories',
    'front_events_title' => 'Events calendar',
    'front_catering_title' => 'Catering',
    'front_services_title' => 'Services',
    'front_gallery_title' => 'Gallery',
    'footer_left_title' => 'Partners',
    'footer_middle_title' => 'Contact',
    'front_confirmation_title' => 'Confirmations',
    'footer_right_title' => 'Important contacts',
    'contact_contact_us_title' => 'Contact us',
    'period_title' => '',
  );
  $new_variables_for_entering = $variables_new;
  foreach ($translated_variables as $variable) {
    if (isset($variables_new[$variable])) {
      unset($variables_new[$variable]);
    }
  }
  if (!empty($variables_new)) {
    foreach ($variables_new as $key => $new_variable) {
      $variable_array = variable_get('variable_realm_list_language');
      $variable_array[] = $key;
      variable_set('variable_realm_list_language', $variable_array);
    }
  }
  if (!empty($new_variables_for_entering)) {
    foreach ($new_variables_for_entering as $key => $new_variable) {
      variable_set($key, $new_variable);
    }
  }
}

function hitsa_core_set_variable_translations()
{
  $translations = array(
    'front_news_title' => array(
      'et' => 'Uudised',
      'ru' => 'Новости',
    ),
    'front_our_stories_title' => array(
      'et' => 'Meie lood',
      'ru' => 'Наши истории',
    ),
    'front_gallery_title' => array(
      'et' => 'Galerii',
      'ru' => 'Галерея',
    ),
    'footer_left_title' => array(
      'et' => 'Koostööpartnerid',
      'ru' => 'Партнеры по сотрудничеству',
    ),
    'footer_middle_title' => array(
      'et' => 'Üldkontakt',
      'ru' => 'Общий контакт',
    ),
    'footer_right_title' => array(
      'et' => 'Olulised kontaktid',
      'ru' => 'Важные контакты',
    ),
    'contact_contact_us_title' => array(
      'et' => 'Võta meiega ühendust',
      'ru' => 'Свяжитесь с нами',
    ),
  );

  foreach ($translations as $var => $t) {
    foreach ($t as $lang => $translation) {
      if (!empty($translation)) {
        $realm = variable_realm('language', $lang);
        variable_set_value($var, $translation, array('realm' => $realm));
      }
    }
  }
  $translations = array(
    'front_news_title' => array(
      'et' => 'Uudised',
      'en' => 'News',
      'ru' => 'новости',
    ),
    'front_our_stories_title' => array(
      'et' => 'Meie lood',
      'en' => 'Our stories',
      'ru' => 'Наши истории',
    ),
    'front_events_title' => array(
      'et' => 'Sündmuste kalender',
      'en' => 'Events calendar',
      'ru' => 'Календарь деятельности по интересам',
    ),
    'front_catering_title' => array(
      'et' => 'Toitlustamine',
      'en' => 'Catering',
      'ru' => 'общественное питание',
    ),
    'front_services_title' => array(
      'et' => 'Teenused',
      'en' => 'Services',
      'ru' => 'Услуги',
    ),
    'front_gallery_title' => array(
      'et' => 'Galerii',
      'en' => 'Gallery',
      'ru' => 'Галерея',
    ),
    'footer_left_title' => array(
      'et' => 'Koostööpartnerid',
      'en' => 'Partners',
      'ru' => 'Партнеры по сотрудничеству',
    ),
    'footer_middle_title' => array(
      'et' => 'Üldkontakt',
      'en' => 'General contact',
      'ru' => 'Общий контакт',
    ),
    'front_confirmation_title' => array(
      'et' => 'Tunnustused',
      'en' => 'Recognitions',
      'ru' => 'Почетное признание',
    ),
    'footer_right_title' => array(
      'et' => 'Olulisemad kontaktid',
      'en' => 'Important contacts',
      'ru' => 'контакт',
    ),
    'contact_contact_us_title' => array(
      'et' => 'Võta meiega ühendust',
      'en' => 'Contact us',
      'ru' => 'Свяжитесь с нами',
    ),
  );
  $language_list = language_list();
  foreach ($translations as $string => $values) {
    foreach ($language_list as $language_key => $language_value) {
      if (isset($values[$language_key])) {
        i18n_variable_set($string, $values[$language_key], $language_key);
      }
    }
  }
}

function hitsa_core_add_media_folder_terms()
{
  $v_media_folders = taxonomy_vocabulary_machine_name_load('media_folders');

  // Make media folder localizable
  $v_media_folders->i18n_mode = 1;
  taxonomy_vocabulary_save($v_media_folders);

  $terms = array(
    'gallery' => array(
      'name' => 'Galerii',
      'translations' => array('en' => 'Gallery', 'ru' => 'Галерея'),
    ),
    'articles' => array(
      'name' => 'Artiklid',
      'translations' => array('en' => 'Articles', 'ru' => 'Статьи'),
    ),
    'content_pages' => array(
      'name' => 'Sisulehed',
      'translations' => array('en' => 'Content pages', 'ru' => 'Страницы'),
    ),
    'contacts' => array(
      'name' => 'Kontaktid',
      'translations' => array('en' => 'Contacts', 'ru' => 'Контакты'),
    ),
    'catering' => array(
      'name' => 'Toitlustamine',
      'translations' => array('en' => 'Catering', 'ru' => 'Питание'),
    ),
    'curriculum' => array(
      'name' => 'Erialad',
      'translations' => array('en' => 'Curriculum', 'ru' => 'Специальности'),
    ),
    'banners' => array(
      'name' => 'Bännerid',
      'translations' => array('en' => 'Banners', 'ru' => 'Баннеры'),
    ),
  );

  foreach ($terms as $key => $val) {
    $term = new stdClass();

    $term->name = $val['name'];
    $term->vid = $v_media_folders->vid;

    taxonomy_term_save($term);

    variable_set('hitsa_media_folders_' . $key . '_tid', $term->tid);

    // Add media folder term translations
    foreach ($val['translations'] as $lang => $t) {
      i18n_string_translation_update(array('taxonomy', 'term', $term->tid, 'name'), $t, $lang, $val['name']);
    }
  }
}
function hitsa_core_set_initail_metatags(){
  $blob = 'a:8:{s:5:"title";a:1:{s:5:"value";s:46:"[node:title] | [current-page:pager][site:name]";}s:11:"description";a:1:{s:5:"value";s:14:"[node:summary]";}s:8:"og:title";a:1:{s:5:"value";s:12:"[node:title]";}s:14:"og:description";a:1:{s:5:"value";s:14:"[node:summary]";}s:15:"og:updated_time";a:1:{s:5:"value";s:23:"[node:changed:custom:c]";}s:8:"og:image";a:1:{s:5:"value";s:36:"[node:cp_image][node:subpage_images]";}s:22:"article:published_time";a:1:{s:5:"value";s:23:"[node:created:custom:c]";}s:21:"article:modified_time";a:1:{s:5:"value";s:23:"[node:changed:custom:c]";}}';
  if(!empty($blob)){
    db_merge('metatag_config')->key(array('instance'=>'node'))->fields(array(
      'instance' => 'node',
      'config' => $blob,
  ))->execute();
  }
}
function hitsa_core_set_initial_domain_path()
{
  variable_set('hitsa_inital_path', conf_path());
}
/**
 *
 * Update to make site pathauto working and also remove non english characters
 */
 function hitsa_core_update_7000()
{
  if (module_exists('hitsa_content_page')) {

    $t = get_t();
    variable_set('pathauto_node_content_page_pattern', '[node:title]');
    variable_set('pathauto_node_article_pattern', $t('news/') . '[node:title]');
    variable_set('pathauto_node_gallery_pattern', $t('galleries/') . '[node:title]');
    if (module_exists('transliteration')) {
      variable_set('pathauto_transliterate', 1);
    }
  }
}
/**
 *
 * Update to make site pathauto working and also remove non english characters
 */
function hitsa_core_update_7001()
{
  if (module_exists('hitsa_content_page')) {

    $t = get_t();
    variable_set('pathauto_node_content_page_pattern', '[node:title]');
    variable_set('pathauto_node_article_pattern', $t('news/') . '[node:title]');
    variable_set('pathauto_node_article_en_pattern', $t('news/') . '[node:title]');
    variable_set('pathauto_node_article_et_pattern', $t('uudised/') . '[node:title]');
    variable_set('pathauto_node_gallery_pattern', $t('galleries/') . '[node:title]');
    variable_set('pathauto_node_gallery_en_pattern', $t('galleries/') . '[node:title]');
    variable_set('pathauto_node_gallery_et_pattern', $t('galeriid/') . '[node:title]');
    if (module_exists('transliteration')) {
      variable_set('pathauto_transliterate', 1);
    }
  }
}

function hitsa_core_update_7002()
{
  module_load_include('inc', 'pathauto');
  module_load_include('inc', 'pathauto.pathauto');

  // Get all nodes that need to be updated
  $query = db_select('node', 'n');
  $query->addField('n', 'nid');
  $query->condition('n.type', array('content_page'), 'IN');

  $nids = $query->execute()->fetchCol();

  // Save current action for new aliases and change it to delete old one.
  $alias_action = variable_get('pathauto_update_action', 0);
  variable_set('pathauto_update_action', PATHAUTO_UPDATE_ACTION_DELETE);

  pathauto_node_update_alias_multiple($nids, 'bulkupdate');

  // Restore original action for new aliases.
  variable_set('pathauto_update_action', $alias_action);
  cache_clear_all();
}

function hitsa_core_update_7003()
{
  // Set quicklink menus to localize
  $menu = menu_load('hitsa-header-menu');
  $menu['i18n_mode'] = I18N_MODE_MULTIPLE;
  menu_save($menu);

  $menu = menu_load('hitsa-quicklinks-menu');
  $menu['i18n_mode'] = I18N_MODE_MULTIPLE;
  menu_save($menu);
}

function hitsa_core_update_7004()
{
  // Let HITSA admin translate
  $role = user_role_load_by_name('hitsa admin');
  user_role_grant_permissions($role->rid, array('translate interface'));
}

function hitsa_core_update_7005()
{
  variable_set('metatag_enable_taxonomy_term', false); // Disable metatags for taxonomy terms
}

function hitsa_core_update_7006()
{
  variable_set('image_captcha_bilinear_interpolation', 1);
  variable_set('image_captcha_distortion_amplitude', '5');
  variable_set('image_captcha_dot_noise', 1);
  variable_set('image_captcha_line_noise', 1);
  variable_set('image_captcha_noise_level', '2');
}
/**
 * Update to enable google tag manager
 */
function hitsa_core_update_7007()
{
  if (!module_exists('google_tag')) {
    $modules = array('google_tag');
    $enable_dependencies = true;
    module_enable($modules, $enable_dependencies);
  }
}
/**
 * Update to make block titles customizable.
 */
function hitsa_core_update_7008()
{
  hitsa_core_set_translatable_variables();
  hitsa_core_set_variable_translations();
}

/**
 * Add support for media folders
 */
function hitsa_core_update_7009()
{
  // Enable "Media Browser Plus" module
  if (!module_exists('media_browser_plus')) {
    module_enable(array('media_browser_plus'));
  }

  if(!module_exists('views_tree')) {
    module_enable(array('views_tree'));
  }

  // Set WYSIWYG media popup settings
  variable_set(
    'media_wysiwyg_wysiwyg_browser_plugins',
    array(
      'upload',
      'media_browser_plus--media_browser_thumbnails',
      'media_browser_plus--media_browser_my_files',
      'media_internet',
    )
  );

  // Enable Media Browser Plus options on media fields
  $fields = array(
    array(
      'entity_type' => 'node',
      'field_name' => 'gallery_images',
      'bundle_name' => 'gallery',
    ),
    array(
      'entity_type' => 'node',
      'field_name' => 'contact_image',
      'bundle_name' => 'contact',
    ),
    array(
      'entity_type' => 'node',
      'field_name' => 'field_pictures',
      'bundle_name' => 'curriculum',
    ),
    array(
      'entity_type' => 'node',
      'field_name' => 'field_attachments',
      'bundle_name' => 'curriculum',
    ),
    array(
      'entity_type' => 'node',
      'field_name' => 'cp_image',
      'bundle_name' => 'content-page',
    ),
    array(
      'entity_type' => 'node',
      'field_name' => 'subpage_images',
      'bundle_name' => 'article',
    ),
    array(
      'entity_type' => 'node',
      'field_name' => 'field_catering_pictures',
      'bundle_name' => 'catering',
    ),
    array(
      'entity_type' => 'node',
      'field_name' => 'banner_image',
      'bundle_name' => 'logo',
    ),
    array(
      'entity_type' => 'taxonomy_term',
      'field_name' => 'information_image',
      'bundle_name' => 'content_information',
    ),
  );

  foreach ($fields as $fi) {
    $field_instance = field_info_instance($f['entity_type'], $f['field_name'], $f['bundle_name']);

    if (!empty($field_instance)) {
      $field_instance['widget']['settings']['browser_plugins'] = array(
        'upload' => 'upload',
        'media_browser_plus--media_browser_thumbnails' => 'media_browser_plus--media_browser_thumbnails',
        'media_browser_plus--media_browser_my_files' => 'media_browser_plus--media_browser_my_files',
        'media_default--media_browser_1' => 0,
        'media_default--media_browser_my_files' => 0,
        'media_internet' => 0,
      );

      field_update_field($field_instance);
    }

  }
  hitsa_core_add_media_folder_terms();
}
/**
 * Update to enable site verify .
 */
function hitsa_core_update_7010()
{
  if (!module_exists('site_verify')) {
    module_enable(array('site_verify'));
  }
}
/**
 * Additional block title translation update
 */
function hitsa_core_update_7011()
{
  hitsa_core_set_variable_translations(true);
}

/**
 * Update to fix date formats
 *
 */
function hitsa_core_update_7012(){

  $instances = array(
    'taxonomy_term-time_periods-field_time_period_dates'=>array(
      'name' =>'field_time_period_dates',
      'bundle' => 'time_periods',
      'entity_type' => 'taxonomy_term'
    ),
    'taxonomy_term-time_periods-field_time_period_dates_info' => array(
      'name' => 'field_time_period_dates_info',
      'bundle' => 'time_period_info',
      'entity_type' => 'taxonomy_term'
    ),
    'taxonomy_term-academic_years-academic_years-academic_year_period'=>array(
      'name' => 'academic_year_period',
      'bundle' => 'academic_years',
      'entity_type' => 'taxonomy_term'
    ),
    'node-event-field_time_period_dates'=>array(
      'name' => 'field_time_period_dates',
      'bundle' => 'event',
      'entity_type' => 'node'
    ),
    'node-curriculum-field_curriculum_length'=>array(
      'name' => 'field_curriculum_length',
      'bundle' => 'curriculum',
      'entity_type' => 'node'
    ),
    'node-curriculum-field_curriculum_start'=>array(
      'name' => 'field_curriculum_start',
      'bundle' => 'curriculum',
      'entity_type' => 'node'
    ),
    'node-catering-field_date'=>array(
      'name' => 'field_date',
      'bundle' => 'catering',
      'entity_type' => 'node'
    ),
  );
  foreach ($instances as $instance){
    $field_instance = (field_info_instance($instance['entity_type'],$instance['name'],$instance['bundle']));
    if (!empty($field_instance)){
      if (!empty($field_instance['widget'])){
        if($field_instance['widget']['module'] == 'date'){
          if(!empty($field_instance['widget']['settings'])){
            if(!empty($field_instance['widget']['settings']['input_format'])){
              $input_format = $field_instance['widget']['settings']['input_format'];
              $input_format = str_replace('m/d/Y','d/m/Y',$input_format);
              $field_instance['widget']['settings']['input_format'] = $input_format;
            }
          }
        }
      }
      field_update_instance($field_instance);
    }
  }
}

/**
 * Function to update some translations.
 */
function hitsa_core_update_7013(){
  $words = array(
    'Searchable event' => array(
      'et' => 'Otsitav sündmus',
      'ru' => 'Мероприятие, которое вы ищете'
    ),
    'Search for an event' => array(
      'et' => 'Otsi sündmust',
      'ru' => 'Поиск события'
    ),
  );
  module_load_include('inc','hitsa_translation_importer','/includes/hitsa_translation_importer.admin');
  hitsa_translations_importer_translations($words);
}

/**
 * Update for image style
 *
 */
function hitsa_core_update_7014(){
  $image_style = image_style_load('hitsa_article_modal_view');
  if(!empty($image_style['effects'])){
    foreach ($image_style['effects'] as $effect_key => $effect){
      if($effect['name']=='image_scale'){
        $image_effect = image_effect_load($effect_key,'hitsa_article_modal_view');
        if(!empty($image_effect['data'])){
          $image_effect['data']['width'] = '1440';
          $image_effect['data']['height'] = '810';
        }
        image_effect_save($image_effect);
      }
    }
  }
}

/**
 * Update hero banner image style.
 */
function hitsa_core_update_7015() {
  $style = image_style_load('hitsa_hero_banner');

  if(!empty($style['effects'])) {
    $ieid = key($style['effects']);
    $effect = image_effect_load($ieid, 'hitsa_hero_banner');

    if(!empty($effect)) {
      $effect['data'] = array('width' => 1920, 'height' => '', 'upscale' => 0);
      image_effect_save($effect);
    }
  }
  $image_style = image_style_load('hitsa_hero_banner');
  image_style_flush($image_style);
}
/**
 *
 */
function hitsa_core_update_7016(){
  if (!module_exists('ultimate_cron')) {
    module_enable(array('ultimate_cron','hitsa_cron'));
  }
}
