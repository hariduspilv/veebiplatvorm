<?php
module_load_include('inc', 'hitsa_core', 'includes/hitsa_core.theme');
module_load_include('inc', 'hitsa_core', 'includes/hitsa_core.variable');

define('HITSA_SCHOOL_GYMNASIUM', 1);
define('HITSA_SCHOOL_VOCATIONAL', 2);

function hitsa_core_menu()
{
  $items['admin/hitsa'] = array(
    'title' => 'HITSA Admin',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('variable_group_form', 'general_variables'),
    'access callback' => 'user_access',
    'access arguments' => array('administer hitsa page settings'),
    'weight' => -10,
  );
  $items['admin/hitsa/event_settings'] = array(
    'title' => t('Event settings'),
    'position' => 'left',
    'type' => MENU_LOCAL_TASK,
    'weight' => -19,
    'page callback' => 'hitsa_core_event_settings',
    'access arguments' => array('administer hitsa page settings'),
    'file' => 'includes/hitsa_core_events.admin.inc',

  );

  $items['admin/hitsa/variables'] = array(
    'title' => 'Variables',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('variable_group_form', 'general_variables'),
    'access callback' => 'user_access',
    'access arguments' => array('administer hitsa page settings'),
  );

  $items['admin/hitsa/variables/general'] = array(
    'title' => 'General',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('variable_group_form', 'general_variables'),
    'type' => MENU_LOCAL_TASK,
    'access callback' => 'user_access',
    'access arguments' => array('administer hitsa page settings'),
    'weight' => 0,
  );

  $items['admin/hitsa/variables/header_footer'] = array(
    'title' => 'Header & Footer',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('variable_group_form', 'header_footer_variables'),
    'type' => MENU_LOCAL_TASK,
    'access callback' => 'user_access',
    'access arguments' => array('administer hitsa page settings'),
    'weight' => 1,
  );
  $items['sitemap'] = array(
    'title' => 'Sitemap',
    'page callback' => 'hitsa_core_render_sitemap',
    'access callback' => TRUE,
  );
  
  return $items;
}

function hitsa_core_cron()
{
  hitsa_core_search_server_add_index(); // Check the server->index relationship, add index if necessary.

}

function hitsa_core_permission()
{
  return array(
    'administer hitsa page settings' => array(
      'title' => t('Administer HITSA page settings'),
    ),
  );
}

function hitsa_core_block_info()
{
  $blocks['hitsa_hero_banner'] = array(
    'info' => t('HITSA Hero Banner'),
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => '<front>',
    'region' => 'hero',
    'status' => "1",
  );

  return $blocks;
}

function hitsa_core_block_view($delta = '')
{
  $output = array();
  switch ($delta) {
    case 'hitsa_hero_banner' :
      $content = ' ';
      $output = array('subject' => NULL, 'content' => $content);
  }

  return $output;
}

function hitsa_core_render_sitemap() {
  $main_menu = menu_tree_all_data('hitsa-main-menu');
  $menu_tree_output = menu_tree_output($main_menu);
  return theme('hitsa_sitemap', array('menu_tree' => $menu_tree_output));
}

/*
 * Implements hook_form_alter().
 */
function hitsa_core_form_alter(&$form, &$form_state, $form_id)
{
  //dpm($form);
  if (!empty($form['language'])) { // Set language as the topmost element
    $form['language']['#weight'] = -100;
  }
  // Any node form with an academic year field.
  if (!empty($form['#node_edit_form']) && isset($form['academic_year'])) {
    hitsa_core_set_default_academic_year($form);
  }

  if ($form_id === 'menu_overview_form' && $form['#menu']['menu_name'] === 'hitsa-main-menu') {
    global $language;

    foreach ($form as $menu_item) {
      if (!isset($menu_item['#item'])) continue;
      if ($menu_item['#item']['language'] !== $language->language && $menu_item['#item']['language'] !== LANGUAGE_NONE) {
        $menu_item['#item']['hidden'] = TRUE;
      }

    }
    
    //$form['#theme'] = 'main_menu_overview_form';
    dpm($form);
  }

}

function hitsa_core_webform_component_info_alter(&$components)
{
  $components['fieldset']['enabled'] = FALSE;
  $components['grid']['enabled'] = FALSE;
  $components['hidden']['enabled'] = FALSE;
  $components['markup']['enabled'] = FALSE;
  $components['pagebreak']['enabled'] = FALSE;
  $components['file']['enabled'] = FALSE;
}

function hitsa_core_set_default_academic_year(&$form)
{
  $academic_year_field = &$form['academic_year'][LANGUAGE_NONE];
  // Set the current academic year as the default value.
  $query = new EntityFieldQuery();

  $now = time();
  $query->entityCondition('entity_type', 'taxonomy_term')
    ->entityCondition('bundle', 'academic_years')
    ->fieldCondition('academic_year_period', 'value', $now, '<=')
    ->fieldCondition('academic_year_period', 'value2', $now, '>=');

  $result = $query->execute();

  if (!empty($result['taxonomy_term'])) {
    // Set the matching academic year as the default value.
    $academic_year_term = reset($result['taxonomy_term']);
    $academic_year_field['#default_value'] = $academic_year_term->tid;
  }
  else {
    // Create new academic year term.
    $current_month = (int)date('n', $now);
    $current_year = (int)date('Y', $now);
    if ($current_month >= 7) {
      $academic_year_string = sprintf('%d/%d', $current_year, $current_year + 1);
      $academic_year_from = strtotime('1. July ' . $current_year);
      $academic_year_to = strtotime('30. June ' . ($current_year + 1) . ' 23:59:59');
    }
    else {
      $academic_year_string = sprintf('%d/%d', $current_year - 1, $current_year);
      $academic_year_from = strtotime('1. July ' . ($current_year - 1));
      $academic_year_to = strtotime('30. June ' . $current_year . ' 23:59:59');
    }
    // New taxonomy term
    $term = new stdClass();
    $term->name = $academic_year_string;
    $term->vid = variable_get('hitsa_academic_years_vid');
    taxonomy_term_save($term);

    $emw_term = entity_metadata_wrapper('taxonomy_term', $term);

    $emw_term->academic_year_period = array('value' => $academic_year_from, 'value2' => $academic_year_to);
    $emw_term->save();
    
    // Set the new term as default.
    $academic_year_field['#options'][$emw_term->getIdentifier()] = $emw_term->label();
    $academic_year_field['#default_value'] = $emw_term->getIdentifier();
  }
}

function hitsa_core_get_content_by_type($e_type = 'node', $type = NULL, $language = NULL, $conditions = NULL)
{ 
  //dpm($type);
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', $e_type);
  $query->entityCondition('bundle', $type);
  if ($e_type == 'node') {
    $query->propertyCondition('status', NODE_PUBLISHED);
  }
  if ($type == 'event') {
    $query->fieldOrderBy('event_date', 'value', 'ASC');
  }
  if (!empty($conditions)) {
    foreach ($conditions as $condition_key => $condition) {
      switch ($condition_key) {
        case 'event_type' :
          $query->fieldCondition('field_event_type', 'value', $condition, '=');
          break;
        case 'cur_type':
          $query->fieldCondition('field_school_selections', 'value', $condition, '=');
          break;
      }

    }
  }
  if ($language) {
    $query->propertyCondition('language', $language);
  }
  $result = $query->execute();
  return $result;
}

/*
 * Add JS to keep the text with summary field open by default.
 */
function hitsa_core_formatted_text_show_summary()
{
  $script = 'jQuery(document).ready(function(){jQuery(".link-edit-summary").click(),$(document).ajaxComplete(function(){jQuery(".link-edit-summary").click()})});';
  drupal_add_js($script, 'inline');
}

/**
 * HITSA Search
 */
function hitsa_core_default_search_api_server()
{
  $defaults['hitsa_search_server'] = entity_create('search_api_server', array(
    'name' => 'HITSA Search server',
    'machine_name' => 'hitsa_search_server',
    'class' => 'search_api_db_service',
    'options' => array(
      'partial_matches' => TRUE,
      'min_chars' => 1,
      'database' => 'default:default',
      'indexes' => array(
        'hitsa_search_index' => array(),
      ),
    ),
  ));

  return $defaults;
}

function hitsa_core_default_search_api_index()
{
  $defaults['hitsa_search_index'] = entity_create('search_api_index', array(
    'name' => 'HITSA Search index',
    'machine_name' => 'hitsa_search_index',
    'item_type' => 'node',
    'server' => 'hitsa_search_server',
    'enabled' => 1,
    'options' => array(
      'data_alter_callbacks' => array(
        'search_api_alter_node_status' => array(
          'status' => 1,
          'weight' => -45,
        ),
        'search_api_alter_node_access' => array(
          'status' => 1,
          'weight' => -44,
        ),
        'search_api_alter_language_control' => array(
          'status' => 1,
          'weight' => -43,
        ),
      ),
      'processors' => array(
        'search_api_case_ignore' => array(
          'status' => 1,
          'weight' => 0,
        ),
        'search_api_porter_stemmer' => array(
          'status' => 1,
          'weight' => 35,
        ),
        'search_api_highlighting' => array(
          'status' => 1,
          'weight' => 40,
          'settings' => array(
            'prefix' => '<u>',
            'suffix' => '</u>',
            'excerpt' => 1,
            'excerpt_length' => '256',
            'exclude_fields' => array(),
            'highlight' => 'always',
            'highlight_partial' => 0,
          ),
        ),
      ),
      'fields' => array(
        'title' => array(
          'type' => 'text',
          'boost' => '5.0',
        ),
        'body:value' => array(
          'type' => 'text',
        ),
        'body:summary' => array(
          'type' => 'text',
        ),
        'first_name' => array(
          'type' => 'text',
          'boost' => '3.0'
        ),
        'last_name' => array(
          'type' => 'text',
          'boost' => '3.0'
        ),
        'search_api_language' => array(
          'type' => 'string',
        ),
        'type' => array(
          'type' => 'string',
        ),
        'status' => array(
          'type' => 'integer',
        ),
      ),
    ),
  ));
  return $defaults;
}

function hitsa_core_search_server_add_index()
{
  $index = search_api_index_load('hitsa_search_index');
  $server = search_api_server_load('hitsa_search_server');
  if (!empty($index) && !empty($server) && empty($server->options['indexes']['hitsa_search_index'])) {
    // Add index
    $server->addIndex($index);
  }
}

function hitsa_core_search_index_add_facet_filter()
{
  $searcher = 'search_api@hitsa_search_index';
  $realm_name = 'block';
  $adapter = facetapi_adapter_load($searcher);
  $realm = facetapi_realm_load($realm_name);
  $facet_info = facetapi_get_facet_info($searcher); // $facet array
  $status = 1;
  $weight = 0;
  $batch_process = FALSE;

  facetapi_save_facet_status($adapter, $realm, $facet_info['type'], $status, $weight, $batch_process);
}

function hitsa_core_get_school_type() {
  return variable_get('hitsa_school_type', HITSA_SCHOOL_GYMNASIUM);
}